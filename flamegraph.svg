<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1238" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1221.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1221.00"> </text><svg id="frames" x="10" width="1180" total_samples="11225"><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (2 samples, 0.02%)</title><rect x="0.0267%" y="805" width="0.0178%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="2"/><text x="0.2767%" y="815.50"></text></g><g><title>stress_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="0.0178%" y="853" width="0.0445%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="5"/><text x="0.2678%" y="863.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (5 samples, 0.04%)</title><rect x="0.0178%" y="837" width="0.0445%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="5"/><text x="0.2678%" y="847.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (5 samples, 0.04%)</title><rect x="0.0178%" y="821" width="0.0445%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="5"/><text x="0.2678%" y="831.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.02%)</title><rect x="0.0445%" y="805" width="0.0178%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.2945%" y="815.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (2 samples, 0.02%)</title><rect x="0.0445%" y="789" width="0.0178%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="0.2945%" y="799.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.02%)</title><rect x="0.0445%" y="773" width="0.0178%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="2"/><text x="0.2945%" y="783.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Utf8Compiler::add (2 samples, 0.02%)</title><rect x="0.0445%" y="757" width="0.0178%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="0.2945%" y="767.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (2 samples, 0.02%)</title><rect x="0.0445%" y="741" width="0.0178%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="2"/><text x="0.2945%" y="751.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="0.0445%" y="725" width="0.0178%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="2"/><text x="0.2945%" y="735.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="0.0445%" y="709" width="0.0178%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="2"/><text x="0.2945%" y="719.50"></text></g><g><title>stress_test`&lt;naga_oil::compose::preprocess::Preprocessor as core::default::Default&gt;::default (6 samples, 0.05%)</title><rect x="0.0178%" y="949" width="0.0535%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="6"/><text x="0.2678%" y="959.50"></text></g><g><title>stress_test`regex::regex::string::Regex::new (6 samples, 0.05%)</title><rect x="0.0178%" y="933" width="0.0535%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="6"/><text x="0.2678%" y="943.50"></text></g><g><title>stress_test`regex::builders::Builder::build_one_string (6 samples, 0.05%)</title><rect x="0.0178%" y="917" width="0.0535%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="6"/><text x="0.2678%" y="927.50"></text></g><g><title>stress_test`regex_automata::meta::regex::Builder::build (6 samples, 0.05%)</title><rect x="0.0178%" y="901" width="0.0535%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="6"/><text x="0.2678%" y="911.50"></text></g><g><title>stress_test`regex_automata::meta::strategy::new (6 samples, 0.05%)</title><rect x="0.0178%" y="885" width="0.0535%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="6"/><text x="0.2678%" y="895.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::compile (6 samples, 0.05%)</title><rect x="0.0178%" y="869" width="0.0535%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="6"/><text x="0.2678%" y="879.50"></text></g><g><title>stress_test`naga_oil::compose::Composer::non_validating (9 samples, 0.08%)</title><rect x="0.0178%" y="981" width="0.0802%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="9"/><text x="0.2678%" y="991.50"></text></g><g><title>stress_test`&lt;naga_oil::compose::Composer as core::default::Default&gt;::default (9 samples, 0.08%)</title><rect x="0.0178%" y="965" width="0.0802%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="9"/><text x="0.2678%" y="975.50"></text></g><g><title>stress_test`regex::regex::string::Regex::new (3 samples, 0.03%)</title><rect x="0.0713%" y="949" width="0.0267%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="3"/><text x="0.3213%" y="959.50"></text></g><g><title>stress_test`regex::builders::Builder::build_one_string (3 samples, 0.03%)</title><rect x="0.0713%" y="933" width="0.0267%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="3"/><text x="0.3213%" y="943.50"></text></g><g><title>stress_test`regex_automata::meta::regex::Builder::build (3 samples, 0.03%)</title><rect x="0.0713%" y="917" width="0.0267%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="3"/><text x="0.3213%" y="927.50"></text></g><g><title>stress_test`regex_automata::meta::strategy::new (3 samples, 0.03%)</title><rect x="0.0980%" y="885" width="0.0267%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="3"/><text x="0.3480%" y="895.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 0.03%)</title><rect x="0.0980%" y="869" width="0.0267%" height="15" fill="rgb(247,18,42)" fg:x="11" fg:w="3"/><text x="0.3480%" y="879.50"></text></g><g><title>stress_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="0.0980%" y="853" width="0.0267%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="3"/><text x="0.3480%" y="863.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.03%)</title><rect x="0.0980%" y="837" width="0.0267%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="3"/><text x="0.3480%" y="847.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.03%)</title><rect x="0.0980%" y="821" width="0.0267%" height="15" fill="rgb(225,111,53)" fg:x="11" fg:w="3"/><text x="0.3480%" y="831.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.03%)</title><rect x="0.0980%" y="805" width="0.0267%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="3"/><text x="0.3480%" y="815.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (3 samples, 0.03%)</title><rect x="0.0980%" y="789" width="0.0267%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="3"/><text x="0.3480%" y="799.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.03%)</title><rect x="0.0980%" y="773" width="0.0267%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="3"/><text x="0.3480%" y="783.50"></text></g><g><title>stress_test`&lt;naga_oil::compose::preprocess::Preprocessor as core::default::Default&gt;::default (4 samples, 0.04%)</title><rect x="0.0980%" y="949" width="0.0356%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="4"/><text x="0.3480%" y="959.50"></text></g><g><title>stress_test`regex::regex::string::Regex::new (4 samples, 0.04%)</title><rect x="0.0980%" y="933" width="0.0356%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="4"/><text x="0.3480%" y="943.50"></text></g><g><title>stress_test`regex::builders::Builder::build_one_string (4 samples, 0.04%)</title><rect x="0.0980%" y="917" width="0.0356%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="4"/><text x="0.3480%" y="927.50"></text></g><g><title>stress_test`regex_automata::meta::regex::Builder::build (4 samples, 0.04%)</title><rect x="0.0980%" y="901" width="0.0356%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="4"/><text x="0.3480%" y="911.50"></text></g><g><title>stress_test`&lt;naga_oil::compose::Composer as core::default::Default&gt;::default (6 samples, 0.05%)</title><rect x="0.0980%" y="965" width="0.0535%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="6"/><text x="0.3480%" y="975.50"></text></g><g><title>stress_test`regex::regex::string::Regex::new (2 samples, 0.02%)</title><rect x="0.1336%" y="949" width="0.0178%" height="15" fill="rgb(233,36,39)" fg:x="15" fg:w="2"/><text x="0.3836%" y="959.50"></text></g><g><title>stress_test`regex::builders::Builder::build_one_string (2 samples, 0.02%)</title><rect x="0.1336%" y="933" width="0.0178%" height="15" fill="rgb(226,3,54)" fg:x="15" fg:w="2"/><text x="0.3836%" y="943.50"></text></g><g><title>stress_test`regex_automata::meta::regex::Builder::build (2 samples, 0.02%)</title><rect x="0.1336%" y="917" width="0.0178%" height="15" fill="rgb(245,192,40)" fg:x="15" fg:w="2"/><text x="0.3836%" y="927.50"></text></g><g><title>stress_test`regex_automata::meta::strategy::new (2 samples, 0.02%)</title><rect x="0.1336%" y="901" width="0.0178%" height="15" fill="rgb(238,167,29)" fg:x="15" fg:w="2"/><text x="0.3836%" y="911.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 0.02%)</title><rect x="0.1336%" y="885" width="0.0178%" height="15" fill="rgb(232,182,51)" fg:x="15" fg:w="2"/><text x="0.3836%" y="895.50"></text></g><g><title>stress_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="0.1336%" y="869" width="0.0178%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="2"/><text x="0.3836%" y="879.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.02%)</title><rect x="0.1336%" y="853" width="0.0178%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="2"/><text x="0.3836%" y="863.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.02%)</title><rect x="0.1336%" y="837" width="0.0178%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="2"/><text x="0.3836%" y="847.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.02%)</title><rect x="0.1336%" y="821" width="0.0178%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="2"/><text x="0.3836%" y="831.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (2 samples, 0.02%)</title><rect x="0.1336%" y="805" width="0.0178%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="2"/><text x="0.3836%" y="815.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (2 samples, 0.02%)</title><rect x="0.1336%" y="789" width="0.0178%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="2"/><text x="0.3836%" y="799.50"></text></g><g><title>stress_test`&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::finish (16 samples, 0.14%)</title><rect x="0.0178%" y="1013" width="0.1425%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="16"/><text x="0.2678%" y="1023.50"></text></g><g><title>stress_test`bevy_render::render_resource::pipeline_cache::PipelineCache::new (16 samples, 0.14%)</title><rect x="0.0178%" y="997" width="0.1425%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="16"/><text x="0.2678%" y="1007.50"></text></g><g><title>stress_test`naga_oil::compose::Composer::with_capabilities (7 samples, 0.06%)</title><rect x="0.0980%" y="981" width="0.0624%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="7"/><text x="0.3480%" y="991.50"></text></g><g><title>stress_test`bevy_app::app::App::finish (17 samples, 0.15%)</title><rect x="0.0178%" y="1029" width="0.1514%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="17"/><text x="0.2678%" y="1039.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (3 samples, 0.03%)</title><rect x="0.1782%" y="997" width="0.0267%" height="15" fill="rgb(225,35,8)" fg:x="20" fg:w="3"/><text x="0.4282%" y="1007.50"></text></g><g><title>stress_test`winit::platform_impl::platform::app::WinitApplication::send_event (3 samples, 0.03%)</title><rect x="0.1782%" y="981" width="0.0267%" height="15" fill="rgb(250,213,24)" fg:x="20" fg:w="3"/><text x="0.4282%" y="991.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (3 samples, 0.03%)</title><rect x="0.1782%" y="965" width="0.0267%" height="15" fill="rgb(247,123,22)" fg:x="20" fg:w="3"/><text x="0.4282%" y="975.50"></text></g><g><title>AppKit`-[NSApplication _handleDeactivateEvent:] (2 samples, 0.02%)</title><rect x="0.1871%" y="949" width="0.0178%" height="15" fill="rgb(231,138,38)" fg:x="21" fg:w="2"/><text x="0.4371%" y="959.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (2 samples, 0.02%)</title><rect x="0.2049%" y="997" width="0.0178%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="2"/><text x="0.4549%" y="1007.50"></text></g><g><title>HIToolbox`GetInputSourceEnabledPrefsIncludingThirdParty (2 samples, 0.02%)</title><rect x="0.2584%" y="421" width="0.0178%" height="15" fill="rgb(251,118,11)" fg:x="29" fg:w="2"/><text x="0.5084%" y="431.50"></text></g><g><title>stress_test`winit::platform_impl::platform::view::WinitView::new (5 samples, 0.04%)</title><rect x="0.2494%" y="565" width="0.0445%" height="15" fill="rgb(217,147,25)" fg:x="28" fg:w="5"/><text x="0.4994%" y="575.50"></text></g><g><title>stress_test`winit::platform_impl::platform::view::WinitView::init_with_id (4 samples, 0.04%)</title><rect x="0.2584%" y="549" width="0.0356%" height="15" fill="rgb(247,81,37)" fg:x="29" fg:w="4"/><text x="0.5084%" y="559.50"></text></g><g><title>stress_test`winit::platform_impl::platform::view::WinitView::current_input_source (4 samples, 0.04%)</title><rect x="0.2584%" y="533" width="0.0356%" height="15" fill="rgb(209,12,38)" fg:x="29" fg:w="4"/><text x="0.5084%" y="543.50"></text></g><g><title>AppKit`-[NSTextInputContext selectedKeyboardInputSource] (4 samples, 0.04%)</title><rect x="0.2584%" y="517" width="0.0356%" height="15" fill="rgb(227,1,9)" fg:x="29" fg:w="4"/><text x="0.5084%" y="527.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardInputSourceRefCreate (4 samples, 0.04%)</title><rect x="0.2584%" y="501" width="0.0356%" height="15" fill="rgb(248,47,43)" fg:x="29" fg:w="4"/><text x="0.5084%" y="511.50"></text></g><g><title>HIToolbox`isCreateCurrentKeyboardInputSourceRef (4 samples, 0.04%)</title><rect x="0.2584%" y="485" width="0.0356%" height="15" fill="rgb(221,10,30)" fg:x="29" fg:w="4"/><text x="0.5084%" y="495.50"></text></g><g><title>HIToolbox`_HaveOnlyOneKeyboardInputSource (4 samples, 0.04%)</title><rect x="0.2584%" y="469" width="0.0356%" height="15" fill="rgb(210,229,1)" fg:x="29" fg:w="4"/><text x="0.5084%" y="479.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (4 samples, 0.04%)</title><rect x="0.2584%" y="453" width="0.0356%" height="15" fill="rgb(222,148,37)" fg:x="29" fg:w="4"/><text x="0.5084%" y="463.50"></text></g><g><title>HIToolbox`isPrefsCreateCacheFromEnabledAndDefaultInputSources (4 samples, 0.04%)</title><rect x="0.2584%" y="437" width="0.0356%" height="15" fill="rgb(234,67,33)" fg:x="29" fg:w="4"/><text x="0.5084%" y="447.50"></text></g><g><title>HIToolbox`isPrefsGetDefaultAsciiKeyboardLayout (2 samples, 0.02%)</title><rect x="0.2762%" y="421" width="0.0178%" height="15" fill="rgb(247,98,35)" fg:x="31" fg:w="2"/><text x="0.5262%" y="431.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (2 samples, 0.02%)</title><rect x="0.2762%" y="405" width="0.0178%" height="15" fill="rgb(247,138,52)" fg:x="31" fg:w="2"/><text x="0.5262%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.02%)</title><rect x="0.2762%" y="389" width="0.0178%" height="15" fill="rgb(213,79,30)" fg:x="31" fg:w="2"/><text x="0.5262%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="0.2762%" y="373" width="0.0178%" height="15" fill="rgb(246,177,23)" fg:x="31" fg:w="2"/><text x="0.5262%" y="383.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (2 samples, 0.02%)</title><rect x="0.2762%" y="357" width="0.0178%" height="15" fill="rgb(230,62,27)" fg:x="31" fg:w="2"/><text x="0.5262%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="0.2762%" y="341" width="0.0178%" height="15" fill="rgb(216,154,8)" fg:x="31" fg:w="2"/><text x="0.5262%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="0.2762%" y="325" width="0.0178%" height="15" fill="rgb(244,35,45)" fg:x="31" fg:w="2"/><text x="0.5262%" y="335.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (2 samples, 0.02%)</title><rect x="0.2762%" y="309" width="0.0178%" height="15" fill="rgb(251,115,12)" fg:x="31" fg:w="2"/><text x="0.5262%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame _tileTitlebarAndRedisplay:] (3 samples, 0.03%)</title><rect x="0.3029%" y="341" width="0.0267%" height="15" fill="rgb(240,54,50)" fg:x="34" fg:w="3"/><text x="0.5529%" y="351.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleTextField] (2 samples, 0.02%)</title><rect x="0.3118%" y="325" width="0.0178%" height="15" fill="rgb(233,84,52)" fg:x="35" fg:w="2"/><text x="0.5618%" y="335.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (6 samples, 0.05%)</title><rect x="0.2940%" y="469" width="0.0535%" height="15" fill="rgb(207,117,47)" fg:x="33" fg:w="6"/><text x="0.5440%" y="479.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (6 samples, 0.05%)</title><rect x="0.2940%" y="453" width="0.0535%" height="15" fill="rgb(249,43,39)" fg:x="33" fg:w="6"/><text x="0.5440%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.05%)</title><rect x="0.2940%" y="437" width="0.0535%" height="15" fill="rgb(209,38,44)" fg:x="33" fg:w="6"/><text x="0.5440%" y="447.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (6 samples, 0.05%)</title><rect x="0.2940%" y="421" width="0.0535%" height="15" fill="rgb(236,212,23)" fg:x="33" fg:w="6"/><text x="0.5440%" y="431.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (6 samples, 0.05%)</title><rect x="0.2940%" y="405" width="0.0535%" height="15" fill="rgb(242,79,21)" fg:x="33" fg:w="6"/><text x="0.5440%" y="415.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (6 samples, 0.05%)</title><rect x="0.2940%" y="389" width="0.0535%" height="15" fill="rgb(211,96,35)" fg:x="33" fg:w="6"/><text x="0.5440%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (6 samples, 0.05%)</title><rect x="0.2940%" y="373" width="0.0535%" height="15" fill="rgb(253,215,40)" fg:x="33" fg:w="6"/><text x="0.5440%" y="383.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.05%)</title><rect x="0.2940%" y="357" width="0.0535%" height="15" fill="rgb(211,81,21)" fg:x="33" fg:w="6"/><text x="0.5440%" y="367.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (2 samples, 0.02%)</title><rect x="0.3296%" y="341" width="0.0178%" height="15" fill="rgb(208,190,38)" fg:x="37" fg:w="2"/><text x="0.5796%" y="351.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (2 samples, 0.02%)</title><rect x="0.3296%" y="325" width="0.0178%" height="15" fill="rgb(235,213,38)" fg:x="37" fg:w="2"/><text x="0.5796%" y="335.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (2 samples, 0.02%)</title><rect x="0.3296%" y="309" width="0.0178%" height="15" fill="rgb(237,122,38)" fg:x="37" fg:w="2"/><text x="0.5796%" y="319.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (2 samples, 0.02%)</title><rect x="0.3296%" y="293" width="0.0178%" height="15" fill="rgb(244,218,35)" fg:x="37" fg:w="2"/><text x="0.5796%" y="303.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (2 samples, 0.02%)</title><rect x="0.3296%" y="277" width="0.0178%" height="15" fill="rgb(240,68,47)" fg:x="37" fg:w="2"/><text x="0.5796%" y="287.50"></text></g><g><title>AppKit`-[NSButtonCell init] (2 samples, 0.02%)</title><rect x="0.3296%" y="261" width="0.0178%" height="15" fill="rgb(210,16,53)" fg:x="37" fg:w="2"/><text x="0.5796%" y="271.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (2 samples, 0.02%)</title><rect x="0.3296%" y="245" width="0.0178%" height="15" fill="rgb(235,124,12)" fg:x="37" fg:w="2"/><text x="0.5796%" y="255.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (2 samples, 0.02%)</title><rect x="0.3296%" y="229" width="0.0178%" height="15" fill="rgb(224,169,11)" fg:x="37" fg:w="2"/><text x="0.5796%" y="239.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (2 samples, 0.02%)</title><rect x="0.3296%" y="213" width="0.0178%" height="15" fill="rgb(250,166,2)" fg:x="37" fg:w="2"/><text x="0.5796%" y="223.50"></text></g><g><title>UIFoundation`0x7ff816e42995 (2 samples, 0.02%)</title><rect x="0.3296%" y="197" width="0.0178%" height="15" fill="rgb(242,216,29)" fg:x="37" fg:w="2"/><text x="0.5796%" y="207.50"></text></g><g><title>UIFoundation`0x7ff816e43252 (2 samples, 0.02%)</title><rect x="0.3296%" y="181" width="0.0178%" height="15" fill="rgb(230,116,27)" fg:x="37" fg:w="2"/><text x="0.5796%" y="191.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (2 samples, 0.02%)</title><rect x="0.3296%" y="165" width="0.0178%" height="15" fill="rgb(228,99,48)" fg:x="37" fg:w="2"/><text x="0.5796%" y="175.50"></text></g><g><title>Foundation`probeGC (2 samples, 0.02%)</title><rect x="0.3296%" y="149" width="0.0178%" height="15" fill="rgb(253,11,6)" fg:x="37" fg:w="2"/><text x="0.5796%" y="159.50"></text></g><g><title>CoreText`TDescriptor::Hash (2 samples, 0.02%)</title><rect x="0.3296%" y="133" width="0.0178%" height="15" fill="rgb(247,143,39)" fg:x="37" fg:w="2"/><text x="0.5796%" y="143.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (2 samples, 0.02%)</title><rect x="0.3296%" y="117" width="0.0178%" height="15" fill="rgb(236,97,10)" fg:x="37" fg:w="2"/><text x="0.5796%" y="127.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (2 samples, 0.02%)</title><rect x="0.3296%" y="101" width="0.0178%" height="15" fill="rgb(233,208,19)" fg:x="37" fg:w="2"/><text x="0.5796%" y="111.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (2 samples, 0.02%)</title><rect x="0.3296%" y="85" width="0.0178%" height="15" fill="rgb(216,164,2)" fg:x="37" fg:w="2"/><text x="0.5796%" y="95.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (2 samples, 0.02%)</title><rect x="0.3296%" y="69" width="0.0178%" height="15" fill="rgb(220,129,5)" fg:x="37" fg:w="2"/><text x="0.5796%" y="79.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (2 samples, 0.02%)</title><rect x="0.3296%" y="53" width="0.0178%" height="15" fill="rgb(242,17,10)" fg:x="37" fg:w="2"/><text x="0.5796%" y="63.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (2 samples, 0.02%)</title><rect x="0.3296%" y="37" width="0.0178%" height="15" fill="rgb(242,107,0)" fg:x="37" fg:w="2"/><text x="0.5796%" y="47.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (9 samples, 0.08%)</title><rect x="0.2940%" y="485" width="0.0802%" height="15" fill="rgb(251,28,31)" fg:x="33" fg:w="9"/><text x="0.5440%" y="495.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (3 samples, 0.03%)</title><rect x="0.3474%" y="469" width="0.0267%" height="15" fill="rgb(233,223,10)" fg:x="39" fg:w="3"/><text x="0.5974%" y="479.50"></text></g><g><title>AppKit`-[NSResponder init] (3 samples, 0.03%)</title><rect x="0.3474%" y="453" width="0.0267%" height="15" fill="rgb(215,21,27)" fg:x="39" fg:w="3"/><text x="0.5974%" y="463.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (3 samples, 0.03%)</title><rect x="0.3474%" y="437" width="0.0267%" height="15" fill="rgb(232,23,21)" fg:x="39" fg:w="3"/><text x="0.5974%" y="447.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="0.3474%" y="421" width="0.0267%" height="15" fill="rgb(244,5,23)" fg:x="39" fg:w="3"/><text x="0.5974%" y="431.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.02%)</title><rect x="0.3563%" y="405" width="0.0178%" height="15" fill="rgb(226,81,46)" fg:x="40" fg:w="2"/><text x="0.6063%" y="415.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.02%)</title><rect x="0.3563%" y="389" width="0.0178%" height="15" fill="rgb(247,70,30)" fg:x="40" fg:w="2"/><text x="0.6063%" y="399.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.02%)</title><rect x="0.3563%" y="373" width="0.0178%" height="15" fill="rgb(212,68,19)" fg:x="40" fg:w="2"/><text x="0.6063%" y="383.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView initWithFrame:] (2 samples, 0.02%)</title><rect x="0.3831%" y="437" width="0.0178%" height="15" fill="rgb(240,187,13)" fg:x="43" fg:w="2"/><text x="0.6331%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (13 samples, 0.12%)</title><rect x="0.2940%" y="501" width="0.1158%" height="15" fill="rgb(223,113,26)" fg:x="33" fg:w="13"/><text x="0.5440%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (4 samples, 0.04%)</title><rect x="0.3742%" y="485" width="0.0356%" height="15" fill="rgb(206,192,2)" fg:x="42" fg:w="4"/><text x="0.6242%" y="495.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (4 samples, 0.04%)</title><rect x="0.3742%" y="469" width="0.0356%" height="15" fill="rgb(241,108,4)" fg:x="42" fg:w="4"/><text x="0.6242%" y="479.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (4 samples, 0.04%)</title><rect x="0.3742%" y="453" width="0.0356%" height="15" fill="rgb(247,173,49)" fg:x="42" fg:w="4"/><text x="0.6242%" y="463.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (15 samples, 0.13%)</title><rect x="0.2940%" y="517" width="0.1336%" height="15" fill="rgb(224,114,35)" fg:x="33" fg:w="15"/><text x="0.5440%" y="527.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (2 samples, 0.02%)</title><rect x="0.4098%" y="501" width="0.0178%" height="15" fill="rgb(245,159,27)" fg:x="46" fg:w="2"/><text x="0.6598%" y="511.50"></text></g><g><title>stress_test`winit::platform_impl::platform::window::WinitWindow::init (16 samples, 0.14%)</title><rect x="0.2940%" y="565" width="0.1425%" height="15" fill="rgb(245,172,44)" fg:x="33" fg:w="16"/><text x="0.5440%" y="575.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (16 samples, 0.14%)</title><rect x="0.2940%" y="549" width="0.1425%" height="15" fill="rgb(236,23,11)" fg:x="33" fg:w="16"/><text x="0.5440%" y="559.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (16 samples, 0.14%)</title><rect x="0.2940%" y="533" width="0.1425%" height="15" fill="rgb(205,117,38)" fg:x="33" fg:w="16"/><text x="0.5440%" y="543.50"></text></g><g><title>stress_test`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (23 samples, 0.20%)</title><rect x="0.2405%" y="693" width="0.2049%" height="15" fill="rgb(237,72,25)" fg:x="27" fg:w="23"/><text x="0.4905%" y="703.50"></text></g><g><title>stress_test`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (23 samples, 0.20%)</title><rect x="0.2405%" y="677" width="0.2049%" height="15" fill="rgb(244,70,9)" fg:x="27" fg:w="23"/><text x="0.4905%" y="687.50"></text></g><g><title>stress_test`bevy_winit::winit_runner::_{{closure}} (23 samples, 0.20%)</title><rect x="0.2405%" y="661" width="0.2049%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="23"/><text x="0.4905%" y="671.50"></text></g><g><title>stress_test`bevy_winit::handle_winit_event (23 samples, 0.20%)</title><rect x="0.2405%" y="645" width="0.2049%" height="15" fill="rgb(235,36,10)" fg:x="27" fg:w="23"/><text x="0.4905%" y="655.50"></text></g><g><title>stress_test`bevy_winit::system::create_windows (23 samples, 0.20%)</title><rect x="0.2405%" y="629" width="0.2049%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="23"/><text x="0.4905%" y="639.50"></text></g><g><title>stress_test`bevy_winit::winit_windows::WinitWindows::create_window (23 samples, 0.20%)</title><rect x="0.2405%" y="613" width="0.2049%" height="15" fill="rgb(221,13,13)" fg:x="27" fg:w="23"/><text x="0.4905%" y="623.50"></text></g><g><title>stress_test`winit::platform_impl::platform::window::Window::new (23 samples, 0.20%)</title><rect x="0.2405%" y="597" width="0.2049%" height="15" fill="rgb(238,131,9)" fg:x="27" fg:w="23"/><text x="0.4905%" y="607.50"></text></g><g><title>stress_test`winit::platform_impl::platform::window::WinitWindow::new (23 samples, 0.20%)</title><rect x="0.2405%" y="581" width="0.2049%" height="15" fill="rgb(211,50,8)" fg:x="27" fg:w="23"/><text x="0.4905%" y="591.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (29 samples, 0.26%)</title><rect x="0.2316%" y="821" width="0.2584%" height="15" fill="rgb(245,182,24)" fg:x="26" fg:w="29"/><text x="0.4816%" y="831.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (29 samples, 0.26%)</title><rect x="0.2316%" y="805" width="0.2584%" height="15" fill="rgb(242,14,37)" fg:x="26" fg:w="29"/><text x="0.4816%" y="815.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (29 samples, 0.26%)</title><rect x="0.2316%" y="789" width="0.2584%" height="15" fill="rgb(246,228,12)" fg:x="26" fg:w="29"/><text x="0.4816%" y="799.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (29 samples, 0.26%)</title><rect x="0.2316%" y="773" width="0.2584%" height="15" fill="rgb(213,55,15)" fg:x="26" fg:w="29"/><text x="0.4816%" y="783.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (29 samples, 0.26%)</title><rect x="0.2316%" y="757" width="0.2584%" height="15" fill="rgb(209,9,3)" fg:x="26" fg:w="29"/><text x="0.4816%" y="767.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (29 samples, 0.26%)</title><rect x="0.2316%" y="741" width="0.2584%" height="15" fill="rgb(230,59,30)" fg:x="26" fg:w="29"/><text x="0.4816%" y="751.50"></text></g><g><title>stress_test`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (29 samples, 0.26%)</title><rect x="0.2316%" y="725" width="0.2584%" height="15" fill="rgb(209,121,21)" fg:x="26" fg:w="29"/><text x="0.4816%" y="735.50"></text></g><g><title>stress_test`winit::platform_impl::platform::app_state::AppState::launched (29 samples, 0.26%)</title><rect x="0.2316%" y="709" width="0.2584%" height="15" fill="rgb(220,109,13)" fg:x="26" fg:w="29"/><text x="0.4816%" y="719.50"></text></g><g><title>stress_test`winit::platform_impl::platform::menu::initialize (5 samples, 0.04%)</title><rect x="0.4454%" y="693" width="0.0445%" height="15" fill="rgb(232,18,1)" fg:x="50" fg:w="5"/><text x="0.6954%" y="703.50"></text></g><g><title>AppKit`-[NSMenu insertItem:atIndex:] (4 samples, 0.04%)</title><rect x="0.4543%" y="677" width="0.0356%" height="15" fill="rgb(215,41,42)" fg:x="51" fg:w="4"/><text x="0.7043%" y="687.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (4 samples, 0.04%)</title><rect x="0.4543%" y="661" width="0.0356%" height="15" fill="rgb(224,123,36)" fg:x="51" fg:w="4"/><text x="0.7043%" y="671.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (4 samples, 0.04%)</title><rect x="0.4543%" y="645" width="0.0356%" height="15" fill="rgb(240,125,3)" fg:x="51" fg:w="4"/><text x="0.7043%" y="655.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (4 samples, 0.04%)</title><rect x="0.4543%" y="629" width="0.0356%" height="15" fill="rgb(205,98,50)" fg:x="51" fg:w="4"/><text x="0.7043%" y="639.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (4 samples, 0.04%)</title><rect x="0.4543%" y="613" width="0.0356%" height="15" fill="rgb(205,185,37)" fg:x="51" fg:w="4"/><text x="0.7043%" y="623.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (4 samples, 0.04%)</title><rect x="0.4543%" y="597" width="0.0356%" height="15" fill="rgb(238,207,15)" fg:x="51" fg:w="4"/><text x="0.7043%" y="607.50"></text></g><g><title>AppKit`___NSMenuUpdateKeyboardAwareShortcuts_block_invoke_3 (4 samples, 0.04%)</title><rect x="0.4543%" y="581" width="0.0356%" height="15" fill="rgb(213,199,42)" fg:x="51" fg:w="4"/><text x="0.7043%" y="591.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) shouldMenuItemBeUpdatedDueToNotification] (4 samples, 0.04%)</title><rect x="0.4543%" y="565" width="0.0356%" height="15" fill="rgb(235,201,11)" fg:x="51" fg:w="4"/><text x="0.7043%" y="575.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) menuItemOrSubmenuNeedsShortcutLocalization] (4 samples, 0.04%)</title><rect x="0.4543%" y="549" width="0.0356%" height="15" fill="rgb(207,46,11)" fg:x="51" fg:w="4"/><text x="0.7043%" y="559.50"></text></g><g><title>Foundation`_NSFaultInObject (4 samples, 0.04%)</title><rect x="0.4543%" y="533" width="0.0356%" height="15" fill="rgb(241,35,35)" fg:x="51" fg:w="4"/><text x="0.7043%" y="543.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (4 samples, 0.04%)</title><rect x="0.4543%" y="517" width="0.0356%" height="15" fill="rgb(243,32,47)" fg:x="51" fg:w="4"/><text x="0.7043%" y="527.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (4 samples, 0.04%)</title><rect x="0.4543%" y="501" width="0.0356%" height="15" fill="rgb(247,202,23)" fg:x="51" fg:w="4"/><text x="0.7043%" y="511.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (4 samples, 0.04%)</title><rect x="0.4543%" y="485" width="0.0356%" height="15" fill="rgb(219,102,11)" fg:x="51" fg:w="4"/><text x="0.7043%" y="495.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (3 samples, 0.03%)</title><rect x="0.4633%" y="469" width="0.0267%" height="15" fill="rgb(243,110,44)" fg:x="52" fg:w="3"/><text x="0.7133%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="0.4722%" y="453" width="0.0178%" height="15" fill="rgb(222,74,54)" fg:x="53" fg:w="2"/><text x="0.7222%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="0.4722%" y="437" width="0.0178%" height="15" fill="rgb(216,99,12)" fg:x="53" fg:w="2"/><text x="0.7222%" y="447.50"></text></g><g><title>AppKit`__58+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:]_block_invoke (2 samples, 0.02%)</title><rect x="0.4722%" y="421" width="0.0178%" height="15" fill="rgb(226,22,26)" fg:x="53" fg:w="2"/><text x="0.7222%" y="431.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (31 samples, 0.28%)</title><rect x="0.2227%" y="965" width="0.2762%" height="15" fill="rgb(217,163,10)" fg:x="25" fg:w="31"/><text x="0.4727%" y="975.50"></text></g><g><title>AE`aeProcessAppleEvent (31 samples, 0.28%)</title><rect x="0.2227%" y="949" width="0.2762%" height="15" fill="rgb(213,25,53)" fg:x="25" fg:w="31"/><text x="0.4727%" y="959.50"></text></g><g><title>AE`0x00007ff8192258b1 (31 samples, 0.28%)</title><rect x="0.2227%" y="933" width="0.2762%" height="15" fill="rgb(252,105,26)" fg:x="25" fg:w="31"/><text x="0.4727%" y="943.50"></text></g><g><title>AE`0x00007ff81922592f (31 samples, 0.28%)</title><rect x="0.2227%" y="917" width="0.2762%" height="15" fill="rgb(220,39,43)" fg:x="25" fg:w="31"/><text x="0.4727%" y="927.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (31 samples, 0.28%)</title><rect x="0.2227%" y="901" width="0.2762%" height="15" fill="rgb(229,68,48)" fg:x="25" fg:w="31"/><text x="0.4727%" y="911.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (31 samples, 0.28%)</title><rect x="0.2227%" y="885" width="0.2762%" height="15" fill="rgb(252,8,32)" fg:x="25" fg:w="31"/><text x="0.4727%" y="895.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (31 samples, 0.28%)</title><rect x="0.2227%" y="869" width="0.2762%" height="15" fill="rgb(223,20,43)" fg:x="25" fg:w="31"/><text x="0.4727%" y="879.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (31 samples, 0.28%)</title><rect x="0.2227%" y="853" width="0.2762%" height="15" fill="rgb(229,81,49)" fg:x="25" fg:w="31"/><text x="0.4727%" y="863.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (30 samples, 0.27%)</title><rect x="0.2316%" y="837" width="0.2673%" height="15" fill="rgb(236,28,36)" fg:x="26" fg:w="30"/><text x="0.4816%" y="847.50"></text></g><g><title>CoreGraphics`CGContextClearRect (2 samples, 0.02%)</title><rect x="0.4989%" y="549" width="0.0178%" height="15" fill="rgb(249,185,26)" fg:x="56" fg:w="2"/><text x="0.7489%" y="559.50"></text></g><g><title>CoreGraphics`CGContextFillRect (2 samples, 0.02%)</title><rect x="0.4989%" y="533" width="0.0178%" height="15" fill="rgb(249,174,33)" fg:x="56" fg:w="2"/><text x="0.7489%" y="543.50"></text></g><g><title>CoreGraphics`CGContextFillRects (2 samples, 0.02%)</title><rect x="0.4989%" y="517" width="0.0178%" height="15" fill="rgb(233,201,37)" fg:x="56" fg:w="2"/><text x="0.7489%" y="527.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (2 samples, 0.02%)</title><rect x="0.4989%" y="501" width="0.0178%" height="15" fill="rgb(221,78,26)" fg:x="56" fg:w="2"/><text x="0.7489%" y="511.50"></text></g><g><title>CoreGraphics`ripc_Render (2 samples, 0.02%)</title><rect x="0.4989%" y="485" width="0.0178%" height="15" fill="rgb(250,127,30)" fg:x="56" fg:w="2"/><text x="0.7489%" y="495.50"></text></g><g><title>CoreGraphics`RIPLayerBltShape (2 samples, 0.02%)</title><rect x="0.4989%" y="469" width="0.0178%" height="15" fill="rgb(230,49,44)" fg:x="56" fg:w="2"/><text x="0.7489%" y="479.50"></text></g><g><title>CoreGraphics`argb32_mark (2 samples, 0.02%)</title><rect x="0.4989%" y="453" width="0.0178%" height="15" fill="rgb(229,67,23)" fg:x="56" fg:w="2"/><text x="0.7489%" y="463.50"></text></g><g><title>CoreGraphics`CGBlt_fillBytes (2 samples, 0.02%)</title><rect x="0.4989%" y="437" width="0.0178%" height="15" fill="rgb(249,83,47)" fg:x="56" fg:w="2"/><text x="0.7489%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="0.4989%" y="421" width="0.0178%" height="15" fill="rgb(215,43,3)" fg:x="56" fg:w="2"/><text x="0.7489%" y="431.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (2 samples, 0.02%)</title><rect x="0.5167%" y="549" width="0.0178%" height="15" fill="rgb(238,154,13)" fg:x="58" fg:w="2"/><text x="0.7667%" y="559.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (5 samples, 0.04%)</title><rect x="0.4989%" y="581" width="0.0445%" height="15" fill="rgb(219,56,2)" fg:x="56" fg:w="5"/><text x="0.7489%" y="591.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (5 samples, 0.04%)</title><rect x="0.4989%" y="565" width="0.0445%" height="15" fill="rgb(233,0,4)" fg:x="56" fg:w="5"/><text x="0.7489%" y="575.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (6 samples, 0.05%)</title><rect x="0.4989%" y="805" width="0.0535%" height="15" fill="rgb(235,30,7)" fg:x="56" fg:w="6"/><text x="0.7489%" y="815.50"></text></g><g><title>HIToolbox`ShowHide (6 samples, 0.05%)</title><rect x="0.4989%" y="789" width="0.0535%" height="15" fill="rgb(250,79,13)" fg:x="56" fg:w="6"/><text x="0.7489%" y="799.50"></text></g><g><title>HIToolbox`_ShowHideWindows (6 samples, 0.05%)</title><rect x="0.4989%" y="773" width="0.0535%" height="15" fill="rgb(211,146,34)" fg:x="56" fg:w="6"/><text x="0.7489%" y="783.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (6 samples, 0.05%)</title><rect x="0.4989%" y="757" width="0.0535%" height="15" fill="rgb(228,22,38)" fg:x="56" fg:w="6"/><text x="0.7489%" y="767.50"></text></g><g><title>HIToolbox`HIView::Render (6 samples, 0.05%)</title><rect x="0.4989%" y="741" width="0.0535%" height="15" fill="rgb(235,168,5)" fg:x="56" fg:w="6"/><text x="0.7489%" y="751.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (6 samples, 0.05%)</title><rect x="0.4989%" y="725" width="0.0535%" height="15" fill="rgb(221,155,16)" fg:x="56" fg:w="6"/><text x="0.7489%" y="735.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.05%)</title><rect x="0.4989%" y="709" width="0.0535%" height="15" fill="rgb(215,215,53)" fg:x="56" fg:w="6"/><text x="0.7489%" y="719.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.05%)</title><rect x="0.4989%" y="693" width="0.0535%" height="15" fill="rgb(223,4,10)" fg:x="56" fg:w="6"/><text x="0.7489%" y="703.50"></text></g><g><title>HIToolbox`HIView::SendDraw (6 samples, 0.05%)</title><rect x="0.4989%" y="677" width="0.0535%" height="15" fill="rgb(234,103,6)" fg:x="56" fg:w="6"/><text x="0.7489%" y="687.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (6 samples, 0.05%)</title><rect x="0.4989%" y="661" width="0.0535%" height="15" fill="rgb(227,97,0)" fg:x="56" fg:w="6"/><text x="0.7489%" y="671.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.05%)</title><rect x="0.4989%" y="645" width="0.0535%" height="15" fill="rgb(234,150,53)" fg:x="56" fg:w="6"/><text x="0.7489%" y="655.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.05%)</title><rect x="0.4989%" y="629" width="0.0535%" height="15" fill="rgb(228,201,54)" fg:x="56" fg:w="6"/><text x="0.7489%" y="639.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (6 samples, 0.05%)</title><rect x="0.4989%" y="613" width="0.0535%" height="15" fill="rgb(222,22,37)" fg:x="56" fg:w="6"/><text x="0.7489%" y="623.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (6 samples, 0.05%)</title><rect x="0.4989%" y="597" width="0.0535%" height="15" fill="rgb(237,53,32)" fg:x="56" fg:w="6"/><text x="0.7489%" y="607.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (7 samples, 0.06%)</title><rect x="0.4989%" y="933" width="0.0624%" height="15" fill="rgb(233,25,53)" fg:x="56" fg:w="7"/><text x="0.7489%" y="943.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (7 samples, 0.06%)</title><rect x="0.4989%" y="917" width="0.0624%" height="15" fill="rgb(210,40,34)" fg:x="56" fg:w="7"/><text x="0.7489%" y="927.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (7 samples, 0.06%)</title><rect x="0.4989%" y="901" width="0.0624%" height="15" fill="rgb(241,220,44)" fg:x="56" fg:w="7"/><text x="0.7489%" y="911.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (7 samples, 0.06%)</title><rect x="0.4989%" y="885" width="0.0624%" height="15" fill="rgb(235,28,35)" fg:x="56" fg:w="7"/><text x="0.7489%" y="895.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (7 samples, 0.06%)</title><rect x="0.4989%" y="869" width="0.0624%" height="15" fill="rgb(210,56,17)" fg:x="56" fg:w="7"/><text x="0.7489%" y="879.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (7 samples, 0.06%)</title><rect x="0.4989%" y="853" width="0.0624%" height="15" fill="rgb(224,130,29)" fg:x="56" fg:w="7"/><text x="0.7489%" y="863.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (7 samples, 0.06%)</title><rect x="0.4989%" y="837" width="0.0624%" height="15" fill="rgb(235,212,8)" fg:x="56" fg:w="7"/><text x="0.7489%" y="847.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (7 samples, 0.06%)</title><rect x="0.4989%" y="821" width="0.0624%" height="15" fill="rgb(223,33,50)" fg:x="56" fg:w="7"/><text x="0.7489%" y="831.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (2 samples, 0.02%)</title><rect x="0.5880%" y="837" width="0.0178%" height="15" fill="rgb(219,149,13)" fg:x="66" fg:w="2"/><text x="0.8380%" y="847.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (2 samples, 0.02%)</title><rect x="0.5880%" y="821" width="0.0178%" height="15" fill="rgb(250,156,29)" fg:x="66" fg:w="2"/><text x="0.8380%" y="831.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (2 samples, 0.02%)</title><rect x="0.5880%" y="805" width="0.0178%" height="15" fill="rgb(216,193,19)" fg:x="66" fg:w="2"/><text x="0.8380%" y="815.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (2 samples, 0.02%)</title><rect x="0.5880%" y="789" width="0.0178%" height="15" fill="rgb(216,135,14)" fg:x="66" fg:w="2"/><text x="0.8380%" y="799.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (2 samples, 0.02%)</title><rect x="0.5880%" y="773" width="0.0178%" height="15" fill="rgb(241,47,5)" fg:x="66" fg:w="2"/><text x="0.8380%" y="783.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.02%)</title><rect x="0.6058%" y="773" width="0.0178%" height="15" fill="rgb(233,42,35)" fg:x="68" fg:w="2"/><text x="0.8558%" y="783.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::commit_transaction (2 samples, 0.02%)</title><rect x="0.6058%" y="757" width="0.0178%" height="15" fill="rgb(231,13,6)" fg:x="68" fg:w="2"/><text x="0.8558%" y="767.50"></text></g><g><title>QuartzCore`-[CABackdropLayer _copyRenderLayer:layerFlags:commitFlags:] (2 samples, 0.02%)</title><rect x="0.6058%" y="741" width="0.0178%" height="15" fill="rgb(207,181,40)" fg:x="68" fg:w="2"/><text x="0.8558%" y="751.50"></text></g><g><title>QuartzCore`-[CALayer(CALayerPrivate) _copyRenderLayer:layerFlags:commitFlags:] (2 samples, 0.02%)</title><rect x="0.6058%" y="725" width="0.0178%" height="15" fill="rgb(254,173,49)" fg:x="68" fg:w="2"/><text x="0.8558%" y="735.50"></text></g><g><title>QuartzCore`CA::Render::convert_cgcolor_to_float (2 samples, 0.02%)</title><rect x="0.6058%" y="709" width="0.0178%" height="15" fill="rgb(221,1,38)" fg:x="68" fg:w="2"/><text x="0.8558%" y="719.50"></text></g><g><title>QuartzCore`CA_CGColorGetRGBComponents (2 samples, 0.02%)</title><rect x="0.6058%" y="693" width="0.0178%" height="15" fill="rgb(206,124,46)" fg:x="68" fg:w="2"/><text x="0.8558%" y="703.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertColorComponents (2 samples, 0.02%)</title><rect x="0.6058%" y="677" width="0.0178%" height="15" fill="rgb(249,21,11)" fg:x="68" fg:w="2"/><text x="0.8558%" y="687.50"></text></g><g><title>CoreGraphics`CGColorTransformCacheGetConversionType (2 samples, 0.02%)</title><rect x="0.6058%" y="661" width="0.0178%" height="15" fill="rgb(222,201,40)" fg:x="68" fg:w="2"/><text x="0.8558%" y="671.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreate (2 samples, 0.02%)</title><rect x="0.6058%" y="645" width="0.0178%" height="15" fill="rgb(235,61,29)" fg:x="68" fg:w="2"/><text x="0.8558%" y="655.50"></text></g><g><title>CoreGraphics`CGColorSyncTransformCacheGetRetained (2 samples, 0.02%)</title><rect x="0.6058%" y="629" width="0.0178%" height="15" fill="rgb(219,207,3)" fg:x="68" fg:w="2"/><text x="0.8558%" y="639.50"></text></g><g><title>ColorSync`0x7ff818488864 (2 samples, 0.02%)</title><rect x="0.6058%" y="613" width="0.0178%" height="15" fill="rgb(222,56,46)" fg:x="68" fg:w="2"/><text x="0.8558%" y="623.50"></text></g><g><title>ColorSync`0x7ff818488ff6 (2 samples, 0.02%)</title><rect x="0.6058%" y="597" width="0.0178%" height="15" fill="rgb(239,76,54)" fg:x="68" fg:w="2"/><text x="0.8558%" y="607.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.03%)</title><rect x="0.6058%" y="789" width="0.0267%" height="15" fill="rgb(231,124,27)" fg:x="68" fg:w="3"/><text x="0.8558%" y="799.50"></text></g><g><title>AppKit`-[NSTextLayer display] (2 samples, 0.02%)</title><rect x="0.6325%" y="773" width="0.0178%" height="15" fill="rgb(249,195,6)" fg:x="71" fg:w="2"/><text x="0.8825%" y="783.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.02%)</title><rect x="0.6325%" y="757" width="0.0178%" height="15" fill="rgb(237,174,47)" fg:x="71" fg:w="2"/><text x="0.8825%" y="767.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (2 samples, 0.02%)</title><rect x="0.6325%" y="741" width="0.0178%" height="15" fill="rgb(206,201,31)" fg:x="71" fg:w="2"/><text x="0.8825%" y="751.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.02%)</title><rect x="0.6325%" y="725" width="0.0178%" height="15" fill="rgb(231,57,52)" fg:x="71" fg:w="2"/><text x="0.8825%" y="735.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (2 samples, 0.02%)</title><rect x="0.6325%" y="709" width="0.0178%" height="15" fill="rgb(248,177,22)" fg:x="71" fg:w="2"/><text x="0.8825%" y="719.50"></text></g><g><title>QuartzCore`-[CALayer _display] (2 samples, 0.02%)</title><rect x="0.6325%" y="693" width="0.0178%" height="15" fill="rgb(215,211,37)" fg:x="71" fg:w="2"/><text x="0.8825%" y="703.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (2 samples, 0.02%)</title><rect x="0.6325%" y="677" width="0.0178%" height="15" fill="rgb(241,128,51)" fg:x="71" fg:w="2"/><text x="0.8825%" y="687.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (2 samples, 0.02%)</title><rect x="0.6325%" y="661" width="0.0178%" height="15" fill="rgb(227,165,31)" fg:x="71" fg:w="2"/><text x="0.8825%" y="671.50"></text></g><g><title>AppKit`NSTextLayerDrawForeground (2 samples, 0.02%)</title><rect x="0.6325%" y="645" width="0.0178%" height="15" fill="rgb(228,167,24)" fg:x="71" fg:w="2"/><text x="0.8825%" y="655.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.02%)</title><rect x="0.6325%" y="629" width="0.0178%" height="15" fill="rgb(228,143,12)" fg:x="71" fg:w="2"/><text x="0.8825%" y="639.50"></text></g><g><title>AppKit`__NSTextLayerDrawForeground_block_invoke (2 samples, 0.02%)</title><rect x="0.6325%" y="613" width="0.0178%" height="15" fill="rgb(249,149,8)" fg:x="71" fg:w="2"/><text x="0.8825%" y="623.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.02%)</title><rect x="0.6325%" y="597" width="0.0178%" height="15" fill="rgb(243,35,44)" fg:x="71" fg:w="2"/><text x="0.8825%" y="607.50"></text></g><g><title>AppKit`-[NSTextFieldCell _drawForegroundOfTextLayer] (2 samples, 0.02%)</title><rect x="0.6325%" y="581" width="0.0178%" height="15" fill="rgb(246,89,9)" fg:x="71" fg:w="2"/><text x="0.8825%" y="591.50"></text></g><g><title>AppKit`_NSDrawTextCell (2 samples, 0.02%)</title><rect x="0.6325%" y="565" width="0.0178%" height="15" fill="rgb(233,213,13)" fg:x="71" fg:w="2"/><text x="0.8825%" y="575.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (2 samples, 0.02%)</title><rect x="0.6592%" y="629" width="0.0178%" height="15" fill="rgb(233,141,41)" fg:x="74" fg:w="2"/><text x="0.9092%" y="639.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (2 samples, 0.02%)</title><rect x="0.6592%" y="613" width="0.0178%" height="15" fill="rgb(239,167,4)" fg:x="74" fg:w="2"/><text x="0.9092%" y="623.50"></text></g><g><title>AppKit`__44-[NSAppearance _drawInRect:context:options:]_block_invoke (2 samples, 0.02%)</title><rect x="0.6592%" y="597" width="0.0178%" height="15" fill="rgb(209,217,16)" fg:x="74" fg:w="2"/><text x="0.9092%" y="607.50"></text></g><g><title>CoreUI`CUIDraw (2 samples, 0.02%)</title><rect x="0.6592%" y="581" width="0.0178%" height="15" fill="rgb(219,88,35)" fg:x="74" fg:w="2"/><text x="0.9092%" y="591.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (2 samples, 0.02%)</title><rect x="0.6592%" y="565" width="0.0178%" height="15" fill="rgb(220,193,23)" fg:x="74" fg:w="2"/><text x="0.9092%" y="575.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (2 samples, 0.02%)</title><rect x="0.6592%" y="549" width="0.0178%" height="15" fill="rgb(230,90,52)" fg:x="74" fg:w="2"/><text x="0.9092%" y="559.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:focusRingColor:context:effects:] (2 samples, 0.02%)</title><rect x="0.6592%" y="533" width="0.0178%" height="15" fill="rgb(252,106,19)" fg:x="74" fg:w="2"/><text x="0.9092%" y="543.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:focusRingColor:isFlipped:effects:] (2 samples, 0.02%)</title><rect x="0.6592%" y="517" width="0.0178%" height="15" fill="rgb(206,74,20)" fg:x="74" fg:w="2"/><text x="0.9092%" y="527.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:rendition:inFrame:context:alpha:operation:isFocused:focusRingColor:isFlipped:effects:] (2 samples, 0.02%)</title><rect x="0.6592%" y="501" width="0.0178%" height="15" fill="rgb(230,138,44)" fg:x="74" fg:w="2"/><text x="0.9092%" y="511.50"></text></g><g><title>CoreUI`DrawOnePartElementFromRenditionWithOperation (2 samples, 0.02%)</title><rect x="0.6592%" y="485" width="0.0178%" height="15" fill="rgb(235,182,43)" fg:x="74" fg:w="2"/><text x="0.9092%" y="495.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (2 samples, 0.02%)</title><rect x="0.6592%" y="469" width="0.0178%" height="15" fill="rgb(242,16,51)" fg:x="74" fg:w="2"/><text x="0.9092%" y="479.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.02%)</title><rect x="0.6592%" y="453" width="0.0178%" height="15" fill="rgb(248,9,4)" fg:x="74" fg:w="2"/><text x="0.9092%" y="463.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (2 samples, 0.02%)</title><rect x="0.6592%" y="437" width="0.0178%" height="15" fill="rgb(210,31,22)" fg:x="74" fg:w="2"/><text x="0.9092%" y="447.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (2 samples, 0.02%)</title><rect x="0.6592%" y="421" width="0.0178%" height="15" fill="rgb(239,54,39)" fg:x="74" fg:w="2"/><text x="0.9092%" y="431.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (2 samples, 0.02%)</title><rect x="0.6592%" y="405" width="0.0178%" height="15" fill="rgb(230,99,41)" fg:x="74" fg:w="2"/><text x="0.9092%" y="415.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (2 samples, 0.02%)</title><rect x="0.6592%" y="389" width="0.0178%" height="15" fill="rgb(253,106,12)" fg:x="74" fg:w="2"/><text x="0.9092%" y="399.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (2 samples, 0.02%)</title><rect x="0.6592%" y="373" width="0.0178%" height="15" fill="rgb(213,46,41)" fg:x="74" fg:w="2"/><text x="0.9092%" y="383.50"></text></g><g><title>CoreGraphics`img_data_lock (2 samples, 0.02%)</title><rect x="0.6592%" y="357" width="0.0178%" height="15" fill="rgb(215,133,35)" fg:x="74" fg:w="2"/><text x="0.9092%" y="367.50"></text></g><g><title>AppKit`-[NSControl updateLayer] (4 samples, 0.04%)</title><rect x="0.6503%" y="693" width="0.0356%" height="15" fill="rgb(213,28,5)" fg:x="73" fg:w="4"/><text x="0.9003%" y="703.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (4 samples, 0.04%)</title><rect x="0.6503%" y="677" width="0.0356%" height="15" fill="rgb(215,77,49)" fg:x="73" fg:w="4"/><text x="0.9003%" y="687.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (4 samples, 0.04%)</title><rect x="0.6503%" y="661" width="0.0356%" height="15" fill="rgb(248,100,22)" fg:x="73" fg:w="4"/><text x="0.9003%" y="671.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (3 samples, 0.03%)</title><rect x="0.6592%" y="645" width="0.0267%" height="15" fill="rgb(208,67,9)" fg:x="74" fg:w="3"/><text x="0.9092%" y="655.50"></text></g><g><title>AppKit`-[NSVisualEffectView updateLayer] (2 samples, 0.02%)</title><rect x="0.6860%" y="693" width="0.0178%" height="15" fill="rgb(219,133,21)" fg:x="77" fg:w="2"/><text x="0.9360%" y="703.50"></text></g><g><title>AppKit`-[NSVisualEffectView _updateMaterialLayer] (2 samples, 0.02%)</title><rect x="0.6860%" y="677" width="0.0178%" height="15" fill="rgb(246,46,29)" fg:x="77" fg:w="2"/><text x="0.9360%" y="687.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (7 samples, 0.06%)</title><rect x="0.6503%" y="757" width="0.0624%" height="15" fill="rgb(246,185,52)" fg:x="73" fg:w="7"/><text x="0.9003%" y="767.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (7 samples, 0.06%)</title><rect x="0.6503%" y="741" width="0.0624%" height="15" fill="rgb(252,136,11)" fg:x="73" fg:w="7"/><text x="0.9003%" y="751.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (7 samples, 0.06%)</title><rect x="0.6503%" y="725" width="0.0624%" height="15" fill="rgb(219,138,53)" fg:x="73" fg:w="7"/><text x="0.9003%" y="735.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (7 samples, 0.06%)</title><rect x="0.6503%" y="709" width="0.0624%" height="15" fill="rgb(211,51,23)" fg:x="73" fg:w="7"/><text x="0.9003%" y="719.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (3 samples, 0.03%)</title><rect x="0.7127%" y="517" width="0.0267%" height="15" fill="rgb(247,221,28)" fg:x="80" fg:w="3"/><text x="0.9627%" y="527.50"></text></g><g><title>stress_test`bevy_render::extract (2 samples, 0.02%)</title><rect x="0.7216%" y="501" width="0.0178%" height="15" fill="rgb(251,222,45)" fg:x="81" fg:w="2"/><text x="0.9716%" y="511.50"></text></g><g><title>stress_test`bevy_ecs::world::World::schedule_scope (2 samples, 0.02%)</title><rect x="0.7216%" y="485" width="0.0178%" height="15" fill="rgb(217,162,53)" fg:x="81" fg:w="2"/><text x="0.9716%" y="495.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (2 samples, 0.02%)</title><rect x="0.7216%" y="469" width="0.0178%" height="15" fill="rgb(229,93,14)" fg:x="81" fg:w="2"/><text x="0.9716%" y="479.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::BillboardTextBundle as bevy_ecs::bundle::DynamicBundle&gt;::get_components (4 samples, 0.04%)</title><rect x="0.7394%" y="341" width="0.0356%" height="15" fill="rgb(209,67,49)" fg:x="83" fg:w="4"/><text x="0.9894%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="0.7483%" y="325" width="0.0267%" height="15" fill="rgb(213,87,29)" fg:x="84" fg:w="3"/><text x="0.9983%" y="335.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (5 samples, 0.04%)</title><rect x="0.7394%" y="405" width="0.0445%" height="15" fill="rgb(205,151,52)" fg:x="83" fg:w="5"/><text x="0.9894%" y="415.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (5 samples, 0.04%)</title><rect x="0.7394%" y="389" width="0.0445%" height="15" fill="rgb(253,215,39)" fg:x="83" fg:w="5"/><text x="0.9894%" y="399.50"></text></g><g><title>stress_test`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (5 samples, 0.04%)</title><rect x="0.7394%" y="373" width="0.0445%" height="15" fill="rgb(221,220,41)" fg:x="83" fg:w="5"/><text x="0.9894%" y="383.50"></text></g><g><title>stress_test`core::ops::function::FnOnce::call_once (5 samples, 0.04%)</title><rect x="0.7394%" y="357" width="0.0445%" height="15" fill="rgb(218,133,21)" fg:x="83" fg:w="5"/><text x="0.9894%" y="367.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::ScheduleGraph::build_schedule (2 samples, 0.02%)</title><rect x="0.7929%" y="389" width="0.0178%" height="15" fill="rgb(221,193,43)" fg:x="89" fg:w="2"/><text x="1.0429%" y="399.50"></text></g><g><title>stress_test`bevy_ecs::schedule::graph_utils::check_graph (2 samples, 0.02%)</title><rect x="0.7929%" y="373" width="0.0178%" height="15" fill="rgb(240,128,52)" fg:x="89" fg:w="2"/><text x="1.0429%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (21 samples, 0.19%)</title><rect x="0.6325%" y="789" width="0.1871%" height="15" fill="rgb(253,114,12)" fg:x="71" fg:w="21"/><text x="0.8825%" y="799.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (19 samples, 0.17%)</title><rect x="0.6503%" y="773" width="0.1693%" height="15" fill="rgb(215,223,47)" fg:x="73" fg:w="19"/><text x="0.9003%" y="783.50"></text></g><g><title>AppKit`-[_NSBackingLayer display] (12 samples, 0.11%)</title><rect x="0.7127%" y="757" width="0.1069%" height="15" fill="rgb(248,225,23)" fg:x="80" fg:w="12"/><text x="0.9627%" y="767.50"></text></g><g><title>QuartzCore`-[CALayer _display] (12 samples, 0.11%)</title><rect x="0.7127%" y="741" width="0.1069%" height="15" fill="rgb(250,108,0)" fg:x="80" fg:w="12"/><text x="0.9627%" y="751.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (12 samples, 0.11%)</title><rect x="0.7127%" y="725" width="0.1069%" height="15" fill="rgb(228,208,7)" fg:x="80" fg:w="12"/><text x="0.9627%" y="735.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (12 samples, 0.11%)</title><rect x="0.7127%" y="709" width="0.1069%" height="15" fill="rgb(244,45,10)" fg:x="80" fg:w="12"/><text x="0.9627%" y="719.50"></text></g><g><title>AppKit`-[NSView(NSLayerKitGlue) _drawViewBackingLayer:inContext:drawingHandler:] (12 samples, 0.11%)</title><rect x="0.7127%" y="693" width="0.1069%" height="15" fill="rgb(207,125,25)" fg:x="80" fg:w="12"/><text x="0.9627%" y="703.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (12 samples, 0.11%)</title><rect x="0.7127%" y="677" width="0.1069%" height="15" fill="rgb(210,195,18)" fg:x="80" fg:w="12"/><text x="0.9627%" y="687.50"></text></g><g><title>AppKit`_NSViewDrawRect (12 samples, 0.11%)</title><rect x="0.7127%" y="661" width="0.1069%" height="15" fill="rgb(249,80,12)" fg:x="80" fg:w="12"/><text x="0.9627%" y="671.50"></text></g><g><title>stress_test`winit::platform_impl::platform::view::WinitView::draw_rect (12 samples, 0.11%)</title><rect x="0.7127%" y="645" width="0.1069%" height="15" fill="rgb(221,65,9)" fg:x="80" fg:w="12"/><text x="0.9627%" y="655.50"></text></g><g><title>stress_test`winit::platform_impl::platform::app_state::AppState::handle_redraw (12 samples, 0.11%)</title><rect x="0.7127%" y="629" width="0.1069%" height="15" fill="rgb(235,49,36)" fg:x="80" fg:w="12"/><text x="0.9627%" y="639.50"></text></g><g><title>stress_test`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (12 samples, 0.11%)</title><rect x="0.7127%" y="613" width="0.1069%" height="15" fill="rgb(225,32,20)" fg:x="80" fg:w="12"/><text x="0.9627%" y="623.50"></text></g><g><title>stress_test`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (12 samples, 0.11%)</title><rect x="0.7127%" y="597" width="0.1069%" height="15" fill="rgb(215,141,46)" fg:x="80" fg:w="12"/><text x="0.9627%" y="607.50"></text></g><g><title>stress_test`bevy_winit::winit_runner::_{{closure}} (12 samples, 0.11%)</title><rect x="0.7127%" y="581" width="0.1069%" height="15" fill="rgb(250,160,47)" fg:x="80" fg:w="12"/><text x="0.9627%" y="591.50"></text></g><g><title>stress_test`bevy_winit::handle_winit_event (12 samples, 0.11%)</title><rect x="0.7127%" y="565" width="0.1069%" height="15" fill="rgb(216,222,40)" fg:x="80" fg:w="12"/><text x="0.9627%" y="575.50"></text></g><g><title>stress_test`bevy_winit::run_app_update_if_should (12 samples, 0.11%)</title><rect x="0.7127%" y="549" width="0.1069%" height="15" fill="rgb(234,217,39)" fg:x="80" fg:w="12"/><text x="0.9627%" y="559.50"></text></g><g><title>stress_test`bevy_app::app::App::update (12 samples, 0.11%)</title><rect x="0.7127%" y="533" width="0.1069%" height="15" fill="rgb(207,178,40)" fg:x="80" fg:w="12"/><text x="0.9627%" y="543.50"></text></g><g><title>stress_test`bevy_ecs::world::World::schedule_scope (9 samples, 0.08%)</title><rect x="0.7394%" y="517" width="0.0802%" height="15" fill="rgb(221,136,13)" fg:x="83" fg:w="9"/><text x="0.9894%" y="527.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (9 samples, 0.08%)</title><rect x="0.7394%" y="501" width="0.0802%" height="15" fill="rgb(249,199,10)" fg:x="83" fg:w="9"/><text x="0.9894%" y="511.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (9 samples, 0.08%)</title><rect x="0.7394%" y="485" width="0.0802%" height="15" fill="rgb(249,222,13)" fg:x="83" fg:w="9"/><text x="0.9894%" y="495.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (9 samples, 0.08%)</title><rect x="0.7394%" y="469" width="0.0802%" height="15" fill="rgb(244,185,38)" fg:x="83" fg:w="9"/><text x="0.9894%" y="479.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (9 samples, 0.08%)</title><rect x="0.7394%" y="453" width="0.0802%" height="15" fill="rgb(236,202,9)" fg:x="83" fg:w="9"/><text x="0.9894%" y="463.50"></text></g><g><title>stress_test`bevy_ecs::world::World::try_schedule_scope (9 samples, 0.08%)</title><rect x="0.7394%" y="437" width="0.0802%" height="15" fill="rgb(250,229,37)" fg:x="83" fg:w="9"/><text x="0.9894%" y="447.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (9 samples, 0.08%)</title><rect x="0.7394%" y="421" width="0.0802%" height="15" fill="rgb(206,174,23)" fg:x="83" fg:w="9"/><text x="0.9894%" y="431.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::initialize (4 samples, 0.04%)</title><rect x="0.7840%" y="405" width="0.0356%" height="15" fill="rgb(211,33,43)" fg:x="88" fg:w="4"/><text x="1.0340%" y="415.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (2 samples, 0.02%)</title><rect x="0.8285%" y="789" width="0.0178%" height="15" fill="rgb(245,58,50)" fg:x="93" fg:w="2"/><text x="1.0785%" y="799.50"></text></g><g><title>AppKit`__39+[_NSCGSTransaction currentTransaction]_block_invoke.61 (2 samples, 0.02%)</title><rect x="0.8285%" y="773" width="0.0178%" height="15" fill="rgb(244,68,36)" fg:x="93" fg:w="2"/><text x="1.0785%" y="783.50"></text></g><g><title>AppKit`NSCGSTransactionRunPreCommitActions_ (2 samples, 0.02%)</title><rect x="0.8285%" y="757" width="0.0178%" height="15" fill="rgb(232,229,15)" fg:x="93" fg:w="2"/><text x="1.0785%" y="767.50"></text></g><g><title>AppKit`NSCGSTransactionRunPreCommitActionsForOrder_ (2 samples, 0.02%)</title><rect x="0.8285%" y="741" width="0.0178%" height="15" fill="rgb(254,30,23)" fg:x="93" fg:w="2"/><text x="1.0785%" y="751.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (28 samples, 0.25%)</title><rect x="0.6058%" y="805" width="0.2494%" height="15" fill="rgb(235,160,14)" fg:x="68" fg:w="28"/><text x="0.8558%" y="815.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (31 samples, 0.28%)</title><rect x="0.6058%" y="837" width="0.2762%" height="15" fill="rgb(212,155,44)" fg:x="68" fg:w="31"/><text x="0.8558%" y="847.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (31 samples, 0.28%)</title><rect x="0.6058%" y="821" width="0.2762%" height="15" fill="rgb(226,2,50)" fg:x="68" fg:w="31"/><text x="0.8558%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (3 samples, 0.03%)</title><rect x="0.8552%" y="805" width="0.0267%" height="15" fill="rgb(234,177,6)" fg:x="96" fg:w="3"/><text x="1.1052%" y="815.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (3 samples, 0.03%)</title><rect x="0.8552%" y="789" width="0.0267%" height="15" fill="rgb(217,24,9)" fg:x="96" fg:w="3"/><text x="1.1052%" y="799.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (3 samples, 0.03%)</title><rect x="0.8552%" y="773" width="0.0267%" height="15" fill="rgb(220,13,46)" fg:x="96" fg:w="3"/><text x="1.1052%" y="783.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (3 samples, 0.03%)</title><rect x="0.8552%" y="757" width="0.0267%" height="15" fill="rgb(239,221,27)" fg:x="96" fg:w="3"/><text x="1.1052%" y="767.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (3 samples, 0.03%)</title><rect x="0.8552%" y="741" width="0.0267%" height="15" fill="rgb(222,198,25)" fg:x="96" fg:w="3"/><text x="1.1052%" y="751.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (34 samples, 0.30%)</title><rect x="0.5880%" y="853" width="0.3029%" height="15" fill="rgb(211,99,13)" fg:x="66" fg:w="34"/><text x="0.8380%" y="863.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (2 samples, 0.02%)</title><rect x="0.9621%" y="565" width="0.0178%" height="15" fill="rgb(232,111,31)" fg:x="108" fg:w="2"/><text x="1.2121%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.02%)</title><rect x="0.9800%" y="549" width="0.0178%" height="15" fill="rgb(245,82,37)" fg:x="110" fg:w="2"/><text x="1.2300%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.02%)</title><rect x="0.9800%" y="533" width="0.0178%" height="15" fill="rgb(227,149,46)" fg:x="110" fg:w="2"/><text x="1.2300%" y="543.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (7 samples, 0.06%)</title><rect x="0.9621%" y="581" width="0.0624%" height="15" fill="rgb(218,36,50)" fg:x="108" fg:w="7"/><text x="1.2121%" y="591.50"></text></g><g><title>stress_test`async_executor::Executor::spawn (5 samples, 0.04%)</title><rect x="0.9800%" y="565" width="0.0445%" height="15" fill="rgb(226,80,48)" fg:x="110" fg:w="5"/><text x="1.2300%" y="575.50"></text></g><g><title>stress_test`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9 samples, 0.08%)</title><rect x="0.9532%" y="597" width="0.0802%" height="15" fill="rgb(238,224,15)" fg:x="107" fg:w="9"/><text x="1.2032%" y="607.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (3 samples, 0.03%)</title><rect x="1.0334%" y="597" width="0.0267%" height="15" fill="rgb(241,136,10)" fg:x="116" fg:w="3"/><text x="1.2834%" y="607.50"></text></g><g><title>stress_test`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="1.0334%" y="581" width="0.0267%" height="15" fill="rgb(208,32,45)" fg:x="116" fg:w="3"/><text x="1.2834%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="1.0423%" y="565" width="0.0178%" height="15" fill="rgb(207,135,9)" fg:x="117" fg:w="2"/><text x="1.2923%" y="575.50"></text></g><g><title>stress_test`bevy_render::extract (17 samples, 0.15%)</title><rect x="0.9176%" y="693" width="0.1514%" height="15" fill="rgb(206,86,44)" fg:x="103" fg:w="17"/><text x="1.1676%" y="703.50"></text></g><g><title>stress_test`bevy_ecs::world::World::schedule_scope (16 samples, 0.14%)</title><rect x="0.9265%" y="677" width="0.1425%" height="15" fill="rgb(245,177,15)" fg:x="104" fg:w="16"/><text x="1.1765%" y="687.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (16 samples, 0.14%)</title><rect x="0.9265%" y="661" width="0.1425%" height="15" fill="rgb(206,64,50)" fg:x="104" fg:w="16"/><text x="1.1765%" y="671.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (16 samples, 0.14%)</title><rect x="0.9265%" y="645" width="0.1425%" height="15" fill="rgb(234,36,40)" fg:x="104" fg:w="16"/><text x="1.1765%" y="655.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor (15 samples, 0.13%)</title><rect x="0.9354%" y="629" width="0.1336%" height="15" fill="rgb(213,64,8)" fg:x="105" fg:w="15"/><text x="1.1854%" y="639.50"></text></g><g><title>stress_test`futures_lite::future::block_on (13 samples, 0.12%)</title><rect x="0.9532%" y="613" width="0.1158%" height="15" fill="rgb(210,75,36)" fg:x="107" fg:w="13"/><text x="1.2032%" y="623.50"></text></g><g><title>stress_test`bevy_render::initialize_render_app::_{{closure}} (2 samples, 0.02%)</title><rect x="1.0690%" y="693" width="0.0178%" height="15" fill="rgb(229,88,21)" fg:x="120" fg:w="2"/><text x="1.3190%" y="703.50"></text></g><g><title>stress_test`bevy_ecs::entity::Entities::flush_and_reserve_invalid_assuming_no_entities (2 samples, 0.02%)</title><rect x="1.0690%" y="677" width="0.0178%" height="15" fill="rgb(252,204,47)" fg:x="120" fg:w="2"/><text x="1.3190%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="1.0690%" y="661" width="0.0178%" height="15" fill="rgb(208,77,27)" fg:x="120" fg:w="2"/><text x="1.3190%" y="671.50"></text></g><g><title>stress_test`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="1.1403%" y="613" width="0.0178%" height="15" fill="rgb(221,76,26)" fg:x="128" fg:w="2"/><text x="1.3903%" y="623.50"></text></g><g><title>stress_test`async_executor::Runner::runnable::_{{closure}} (6 samples, 0.05%)</title><rect x="1.1136%" y="629" width="0.0535%" height="15" fill="rgb(225,139,18)" fg:x="125" fg:w="6"/><text x="1.3636%" y="639.50"></text></g><g><title>stress_test`&lt;wgpu::QueueWriteBufferView as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="1.9599%" y="533" width="0.0178%" height="15" fill="rgb(230,137,11)" fg:x="220" fg:w="2"/><text x="2.2099%" y="543.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::pipeline::BillboardUniform as encase::core::traits::WriteInto&gt;::write_into (90 samples, 0.80%)</title><rect x="1.2116%" y="549" width="0.8018%" height="15" fill="rgb(212,28,1)" fg:x="136" fg:w="90"/><text x="1.4616%" y="559.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::QueueWriteBuffer as wgpu::context::QueueWriteBuffer&gt;::slice_mut (4 samples, 0.04%)</title><rect x="1.9777%" y="533" width="0.0356%" height="15" fill="rgb(248,164,17)" fg:x="222" fg:w="4"/><text x="2.2277%" y="543.50"></text></g><g><title>stress_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (98 samples, 0.87%)</title><rect x="1.1759%" y="565" width="0.8731%" height="15" fill="rgb(222,171,42)" fg:x="132" fg:w="98"/><text x="1.4259%" y="575.50"></text></g><g><title>stress_test`&lt;wgpu::QueueWriteBufferView as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.04%)</title><rect x="2.0134%" y="549" width="0.0356%" height="15" fill="rgb(243,84,45)" fg:x="226" fg:w="4"/><text x="2.2634%" y="559.50"></text></g><g><title>stress_test`bevy_mod_billboard::pipeline::queue_billboard_texture (18 samples, 0.16%)</title><rect x="2.0490%" y="565" width="0.1604%" height="15" fill="rgb(252,49,23)" fg:x="230" fg:w="18"/><text x="2.2990%" y="575.50"></text></g><g><title>stress_test`bevy_render::render_asset::RenderAssets&lt;A&gt;::get (7 samples, 0.06%)</title><rect x="2.1470%" y="549" width="0.0624%" height="15" fill="rgb(215,19,7)" fg:x="241" fg:w="7"/><text x="2.3970%" y="559.50"></text></g><g><title>stress_test`bevy_pbr::render::fog::prepare_fog (2 samples, 0.02%)</title><rect x="2.2094%" y="565" width="0.0178%" height="15" fill="rgb(238,81,41)" fg:x="248" fg:w="2"/><text x="2.4594%" y="575.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (2 samples, 0.02%)</title><rect x="2.2094%" y="549" width="0.0178%" height="15" fill="rgb(210,199,37)" fg:x="248" fg:w="2"/><text x="2.4594%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="2.2361%" y="453" width="0.0356%" height="15" fill="rgb(244,192,49)" fg:x="251" fg:w="4"/><text x="2.4861%" y="463.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (6 samples, 0.05%)</title><rect x="2.2717%" y="453" width="0.0535%" height="15" fill="rgb(226,211,11)" fg:x="255" fg:w="6"/><text x="2.5217%" y="463.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (6 samples, 0.05%)</title><rect x="2.2717%" y="437" width="0.0535%" height="15" fill="rgb(236,162,54)" fg:x="255" fg:w="6"/><text x="2.5217%" y="447.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.05%)</title><rect x="2.2717%" y="421" width="0.0535%" height="15" fill="rgb(220,229,9)" fg:x="255" fg:w="6"/><text x="2.5217%" y="431.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (6 samples, 0.05%)</title><rect x="2.2717%" y="405" width="0.0535%" height="15" fill="rgb(250,87,22)" fg:x="255" fg:w="6"/><text x="2.5217%" y="415.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (6 samples, 0.05%)</title><rect x="2.2717%" y="389" width="0.0535%" height="15" fill="rgb(239,43,17)" fg:x="255" fg:w="6"/><text x="2.5217%" y="399.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (6 samples, 0.05%)</title><rect x="2.2717%" y="373" width="0.0535%" height="15" fill="rgb(231,177,25)" fg:x="255" fg:w="6"/><text x="2.5217%" y="383.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (6 samples, 0.05%)</title><rect x="2.2717%" y="357" width="0.0535%" height="15" fill="rgb(219,179,1)" fg:x="255" fg:w="6"/><text x="2.5217%" y="367.50"></text></g><g><title>Metal`0x7ff81c45b741 (6 samples, 0.05%)</title><rect x="2.2717%" y="341" width="0.0535%" height="15" fill="rgb(238,219,53)" fg:x="255" fg:w="6"/><text x="2.5217%" y="351.50"></text></g><g><title>Metal`0x7ff81c3acc27 (6 samples, 0.05%)</title><rect x="2.2717%" y="325" width="0.0535%" height="15" fill="rgb(232,167,36)" fg:x="255" fg:w="6"/><text x="2.5217%" y="335.50"></text></g><g><title>Metal`0x7ff81c3ace52 (6 samples, 0.05%)</title><rect x="2.2717%" y="309" width="0.0535%" height="15" fill="rgb(244,19,51)" fg:x="255" fg:w="6"/><text x="2.5217%" y="319.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (6 samples, 0.05%)</title><rect x="2.2717%" y="293" width="0.0535%" height="15" fill="rgb(224,6,22)" fg:x="255" fg:w="6"/><text x="2.5217%" y="303.50"></text></g><g><title>IOKit`0x7ff815d1a42b (6 samples, 0.05%)</title><rect x="2.2717%" y="277" width="0.0535%" height="15" fill="rgb(224,145,5)" fg:x="255" fg:w="6"/><text x="2.5217%" y="287.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (6 samples, 0.05%)</title><rect x="2.2717%" y="261" width="0.0535%" height="15" fill="rgb(234,130,49)" fg:x="255" fg:w="6"/><text x="2.5217%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.05%)</title><rect x="2.2717%" y="245" width="0.0535%" height="15" fill="rgb(254,6,2)" fg:x="255" fg:w="6"/><text x="2.5217%" y="255.50"></text></g><g><title>stress_test`bevy_pbr::render::light::prepare_clusters (12 samples, 0.11%)</title><rect x="2.2272%" y="565" width="0.1069%" height="15" fill="rgb(208,96,46)" fg:x="250" fg:w="12"/><text x="2.4772%" y="575.50"></text></g><g><title>stress_test`bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T&gt;::write_buffer (12 samples, 0.11%)</title><rect x="2.2272%" y="549" width="0.1069%" height="15" fill="rgb(239,3,39)" fg:x="250" fg:w="12"/><text x="2.4772%" y="559.50"></text></g><g><title>stress_test`bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (12 samples, 0.11%)</title><rect x="2.2272%" y="533" width="0.1069%" height="15" fill="rgb(233,210,1)" fg:x="250" fg:w="12"/><text x="2.4772%" y="543.50"></text></g><g><title>stress_test`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (12 samples, 0.11%)</title><rect x="2.2272%" y="517" width="0.1069%" height="15" fill="rgb(244,137,37)" fg:x="250" fg:w="12"/><text x="2.4772%" y="527.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (11 samples, 0.10%)</title><rect x="2.2361%" y="501" width="0.0980%" height="15" fill="rgb(240,136,2)" fg:x="251" fg:w="11"/><text x="2.4861%" y="511.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (11 samples, 0.10%)</title><rect x="2.2361%" y="485" width="0.0980%" height="15" fill="rgb(239,18,37)" fg:x="251" fg:w="11"/><text x="2.4861%" y="495.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (11 samples, 0.10%)</title><rect x="2.2361%" y="469" width="0.0980%" height="15" fill="rgb(218,185,22)" fg:x="251" fg:w="11"/><text x="2.4861%" y="479.50"></text></g><g><title>stress_test`bevy_render::render_resource::buffer_vec::BufferVec&lt;T&gt;::write_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="565" width="0.0267%" height="15" fill="rgb(225,218,4)" fg:x="262" fg:w="3"/><text x="2.5841%" y="575.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="549" width="0.0267%" height="15" fill="rgb(230,182,32)" fg:x="262" fg:w="3"/><text x="2.5841%" y="559.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="533" width="0.0267%" height="15" fill="rgb(242,56,43)" fg:x="262" fg:w="3"/><text x="2.5841%" y="543.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="517" width="0.0267%" height="15" fill="rgb(233,99,24)" fg:x="262" fg:w="3"/><text x="2.5841%" y="527.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="501" width="0.0267%" height="15" fill="rgb(234,209,42)" fg:x="262" fg:w="3"/><text x="2.5841%" y="511.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="485" width="0.0267%" height="15" fill="rgb(227,7,12)" fg:x="262" fg:w="3"/><text x="2.5841%" y="495.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (3 samples, 0.03%)</title><rect x="2.3341%" y="469" width="0.0267%" height="15" fill="rgb(245,203,43)" fg:x="262" fg:w="3"/><text x="2.5841%" y="479.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (3 samples, 0.03%)</title><rect x="2.3341%" y="453" width="0.0267%" height="15" fill="rgb(238,205,33)" fg:x="262" fg:w="3"/><text x="2.5841%" y="463.50"></text></g><g><title>stress_test`parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="2.3430%" y="437" width="0.0178%" height="15" fill="rgb(231,56,7)" fg:x="263" fg:w="2"/><text x="2.5930%" y="447.50"></text></g><g><title>stress_test`bevy_render::view::prepare_view_uniforms (2 samples, 0.02%)</title><rect x="2.3608%" y="565" width="0.0178%" height="15" fill="rgb(244,186,29)" fg:x="265" fg:w="2"/><text x="2.6108%" y="575.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (2 samples, 0.02%)</title><rect x="2.3608%" y="549" width="0.0178%" height="15" fill="rgb(234,111,31)" fg:x="265" fg:w="2"/><text x="2.6108%" y="559.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="2.3608%" y="533" width="0.0178%" height="15" fill="rgb(241,149,10)" fg:x="265" fg:w="2"/><text x="2.6108%" y="543.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="2.3608%" y="517" width="0.0178%" height="15" fill="rgb(249,206,44)" fg:x="265" fg:w="2"/><text x="2.6108%" y="527.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="2.3608%" y="501" width="0.0178%" height="15" fill="rgb(251,153,30)" fg:x="265" fg:w="2"/><text x="2.6108%" y="511.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.02%)</title><rect x="2.3608%" y="485" width="0.0178%" height="15" fill="rgb(239,152,38)" fg:x="265" fg:w="2"/><text x="2.6108%" y="495.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (2 samples, 0.02%)</title><rect x="2.3608%" y="469" width="0.0178%" height="15" fill="rgb(249,139,47)" fg:x="265" fg:w="2"/><text x="2.6108%" y="479.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="2.3608%" y="453" width="0.0178%" height="15" fill="rgb(244,64,35)" fg:x="265" fg:w="2"/><text x="2.6108%" y="463.50"></text></g><g><title>stress_test`&lt;bevy_pbr::light_probe::LightProbesUniform as encase::core::traits::WriteInto&gt;::write_into (2 samples, 0.02%)</title><rect x="2.3964%" y="549" width="0.0178%" height="15" fill="rgb(216,46,15)" fg:x="269" fg:w="2"/><text x="2.6464%" y="559.50"></text></g><g><title>stress_test`encase::types::array::_&lt;impl encase::core::traits::WriteInto for [T (2 samples, 0.02%)</title><rect x="2.3964%" y="533" width="0.0178%" height="15" fill="rgb(250,74,19)" fg:x="269" fg:w="2"/><text x="2.6464%" y="543.50"></text></g><g><title> N]&gt;::write_into (2 samples, 0.02%)</title><rect x="2.3964%" y="517" width="0.0178%" height="15" fill="rgb(249,42,33)" fg:x="269" fg:w="2"/><text x="2.6464%" y="527.50"></text></g><g><title>stress_test`&lt;bevy_render::texture::image::Image as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (5 samples, 0.04%)</title><rect x="2.4143%" y="549" width="0.0445%" height="15" fill="rgb(242,149,17)" fg:x="271" fg:w="5"/><text x="2.6643%" y="559.50"></text></g><g><title>stress_test`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_texture_with_data (4 samples, 0.04%)</title><rect x="2.4232%" y="533" width="0.0356%" height="15" fill="rgb(244,29,21)" fg:x="272" fg:w="4"/><text x="2.6732%" y="543.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (3 samples, 0.03%)</title><rect x="2.4321%" y="517" width="0.0267%" height="15" fill="rgb(220,130,37)" fg:x="273" fg:w="3"/><text x="2.6821%" y="527.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_texture (3 samples, 0.03%)</title><rect x="2.4321%" y="501" width="0.0267%" height="15" fill="rgb(211,67,2)" fg:x="273" fg:w="3"/><text x="2.6821%" y="511.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_texture (3 samples, 0.03%)</title><rect x="2.4321%" y="485" width="0.0267%" height="15" fill="rgb(235,68,52)" fg:x="273" fg:w="3"/><text x="2.6821%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="2.4321%" y="469" width="0.0267%" height="15" fill="rgb(246,142,3)" fg:x="273" fg:w="3"/><text x="2.6821%" y="479.50"></text></g><g><title>stress_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.07%)</title><rect x="2.4588%" y="549" width="0.0713%" height="15" fill="rgb(241,25,7)" fg:x="276" fg:w="8"/><text x="2.7088%" y="559.50"></text></g><g><title>stress_test`&lt;bevy_pbr::render::mesh::MeshPipeline as bevy_render::batching::GetBatchData&gt;::get_batch_data (3 samples, 0.03%)</title><rect x="2.5033%" y="533" width="0.0267%" height="15" fill="rgb(242,119,39)" fg:x="281" fg:w="3"/><text x="2.7533%" y="543.50"></text></g><g><title>stress_test`&lt;u32 as radsort::sort::RadixKey&gt;::radix_sort_u32 (3 samples, 0.03%)</title><rect x="2.5301%" y="549" width="0.0267%" height="15" fill="rgb(241,98,45)" fg:x="284" fg:w="3"/><text x="2.7801%" y="559.50"></text></g><g><title>stress_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.20%)</title><rect x="2.3875%" y="565" width="0.1960%" height="15" fill="rgb(254,28,30)" fg:x="268" fg:w="22"/><text x="2.6375%" y="575.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (2 samples, 0.02%)</title><rect x="2.5657%" y="549" width="0.0178%" height="15" fill="rgb(241,142,54)" fg:x="288" fg:w="2"/><text x="2.8157%" y="559.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="2.5657%" y="533" width="0.0178%" height="15" fill="rgb(222,85,15)" fg:x="288" fg:w="2"/><text x="2.8157%" y="543.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="2.5657%" y="517" width="0.0178%" height="15" fill="rgb(210,85,47)" fg:x="288" fg:w="2"/><text x="2.8157%" y="527.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="2.5657%" y="501" width="0.0178%" height="15" fill="rgb(224,206,25)" fg:x="288" fg:w="2"/><text x="2.8157%" y="511.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.02%)</title><rect x="2.5657%" y="485" width="0.0178%" height="15" fill="rgb(243,201,19)" fg:x="288" fg:w="2"/><text x="2.8157%" y="495.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (2 samples, 0.02%)</title><rect x="2.5657%" y="469" width="0.0178%" height="15" fill="rgb(236,59,4)" fg:x="288" fg:w="2"/><text x="2.8157%" y="479.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="2.5657%" y="453" width="0.0178%" height="15" fill="rgb(254,179,45)" fg:x="288" fg:w="2"/><text x="2.8157%" y="463.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (7 samples, 0.06%)</title><rect x="2.5924%" y="437" width="0.0624%" height="15" fill="rgb(226,14,10)" fg:x="291" fg:w="7"/><text x="2.8424%" y="447.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (7 samples, 0.06%)</title><rect x="2.5924%" y="421" width="0.0624%" height="15" fill="rgb(244,27,41)" fg:x="291" fg:w="7"/><text x="2.8424%" y="431.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (7 samples, 0.06%)</title><rect x="2.5924%" y="405" width="0.0624%" height="15" fill="rgb(235,35,32)" fg:x="291" fg:w="7"/><text x="2.8424%" y="415.50"></text></g><g><title>Metal`0x7ff81c45b741 (7 samples, 0.06%)</title><rect x="2.5924%" y="389" width="0.0624%" height="15" fill="rgb(218,68,31)" fg:x="291" fg:w="7"/><text x="2.8424%" y="399.50"></text></g><g><title>Metal`0x7ff81c3acc27 (7 samples, 0.06%)</title><rect x="2.5924%" y="373" width="0.0624%" height="15" fill="rgb(207,120,37)" fg:x="291" fg:w="7"/><text x="2.8424%" y="383.50"></text></g><g><title>Metal`0x7ff81c3ace52 (7 samples, 0.06%)</title><rect x="2.5924%" y="357" width="0.0624%" height="15" fill="rgb(227,98,0)" fg:x="291" fg:w="7"/><text x="2.8424%" y="367.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (7 samples, 0.06%)</title><rect x="2.5924%" y="341" width="0.0624%" height="15" fill="rgb(207,7,3)" fg:x="291" fg:w="7"/><text x="2.8424%" y="351.50"></text></g><g><title>IOKit`0x7ff815d1a42b (7 samples, 0.06%)</title><rect x="2.5924%" y="325" width="0.0624%" height="15" fill="rgb(206,98,19)" fg:x="291" fg:w="7"/><text x="2.8424%" y="335.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (7 samples, 0.06%)</title><rect x="2.5924%" y="309" width="0.0624%" height="15" fill="rgb(217,5,26)" fg:x="291" fg:w="7"/><text x="2.8424%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.06%)</title><rect x="2.5924%" y="293" width="0.0624%" height="15" fill="rgb(235,190,38)" fg:x="291" fg:w="7"/><text x="2.8424%" y="303.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (8 samples, 0.07%)</title><rect x="2.5924%" y="453" width="0.0713%" height="15" fill="rgb(247,86,24)" fg:x="291" fg:w="8"/><text x="2.8424%" y="463.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (10 samples, 0.09%)</title><rect x="2.5835%" y="565" width="0.0891%" height="15" fill="rgb(205,101,16)" fg:x="290" fg:w="10"/><text x="2.8335%" y="575.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (10 samples, 0.09%)</title><rect x="2.5835%" y="549" width="0.0891%" height="15" fill="rgb(246,168,33)" fg:x="290" fg:w="10"/><text x="2.8335%" y="559.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (10 samples, 0.09%)</title><rect x="2.5835%" y="533" width="0.0891%" height="15" fill="rgb(231,114,1)" fg:x="290" fg:w="10"/><text x="2.8335%" y="543.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (10 samples, 0.09%)</title><rect x="2.5835%" y="517" width="0.0891%" height="15" fill="rgb(207,184,53)" fg:x="290" fg:w="10"/><text x="2.8335%" y="527.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (10 samples, 0.09%)</title><rect x="2.5835%" y="501" width="0.0891%" height="15" fill="rgb(224,95,51)" fg:x="290" fg:w="10"/><text x="2.8335%" y="511.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (10 samples, 0.09%)</title><rect x="2.5835%" y="485" width="0.0891%" height="15" fill="rgb(212,188,45)" fg:x="290" fg:w="10"/><text x="2.8335%" y="495.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (9 samples, 0.08%)</title><rect x="2.5924%" y="469" width="0.0802%" height="15" fill="rgb(223,154,38)" fg:x="291" fg:w="9"/><text x="2.8424%" y="479.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (65 samples, 0.58%)</title><rect x="2.6726%" y="341" width="0.5791%" height="15" fill="rgb(251,22,52)" fg:x="300" fg:w="65"/><text x="2.9226%" y="351.50"></text></g><g><title>IOKit`0x7ff815d1a42b (65 samples, 0.58%)</title><rect x="2.6726%" y="325" width="0.5791%" height="15" fill="rgb(229,209,22)" fg:x="300" fg:w="65"/><text x="2.9226%" y="335.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (65 samples, 0.58%)</title><rect x="2.6726%" y="309" width="0.5791%" height="15" fill="rgb(234,138,34)" fg:x="300" fg:w="65"/><text x="2.9226%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (65 samples, 0.58%)</title><rect x="2.6726%" y="293" width="0.5791%" height="15" fill="rgb(212,95,11)" fg:x="300" fg:w="65"/><text x="2.9226%" y="303.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (66 samples, 0.59%)</title><rect x="2.6726%" y="549" width="0.5880%" height="15" fill="rgb(240,179,47)" fg:x="300" fg:w="66"/><text x="2.9226%" y="559.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (66 samples, 0.59%)</title><rect x="2.6726%" y="533" width="0.5880%" height="15" fill="rgb(240,163,11)" fg:x="300" fg:w="66"/><text x="2.9226%" y="543.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (66 samples, 0.59%)</title><rect x="2.6726%" y="517" width="0.5880%" height="15" fill="rgb(236,37,12)" fg:x="300" fg:w="66"/><text x="2.9226%" y="527.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (66 samples, 0.59%)</title><rect x="2.6726%" y="501" width="0.5880%" height="15" fill="rgb(232,164,16)" fg:x="300" fg:w="66"/><text x="2.9226%" y="511.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (66 samples, 0.59%)</title><rect x="2.6726%" y="485" width="0.5880%" height="15" fill="rgb(244,205,15)" fg:x="300" fg:w="66"/><text x="2.9226%" y="495.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (66 samples, 0.59%)</title><rect x="2.6726%" y="469" width="0.5880%" height="15" fill="rgb(223,117,47)" fg:x="300" fg:w="66"/><text x="2.9226%" y="479.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (66 samples, 0.59%)</title><rect x="2.6726%" y="453" width="0.5880%" height="15" fill="rgb(244,107,35)" fg:x="300" fg:w="66"/><text x="2.9226%" y="463.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (66 samples, 0.59%)</title><rect x="2.6726%" y="437" width="0.5880%" height="15" fill="rgb(205,140,8)" fg:x="300" fg:w="66"/><text x="2.9226%" y="447.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (66 samples, 0.59%)</title><rect x="2.6726%" y="421" width="0.5880%" height="15" fill="rgb(228,84,46)" fg:x="300" fg:w="66"/><text x="2.9226%" y="431.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (66 samples, 0.59%)</title><rect x="2.6726%" y="405" width="0.5880%" height="15" fill="rgb(254,188,9)" fg:x="300" fg:w="66"/><text x="2.9226%" y="415.50"></text></g><g><title>Metal`0x7ff81c45b741 (66 samples, 0.59%)</title><rect x="2.6726%" y="389" width="0.5880%" height="15" fill="rgb(206,112,54)" fg:x="300" fg:w="66"/><text x="2.9226%" y="399.50"></text></g><g><title>Metal`0x7ff81c3acc27 (66 samples, 0.59%)</title><rect x="2.6726%" y="373" width="0.5880%" height="15" fill="rgb(216,84,49)" fg:x="300" fg:w="66"/><text x="2.9226%" y="383.50"></text></g><g><title>Metal`0x7ff81c3ace52 (66 samples, 0.59%)</title><rect x="2.6726%" y="357" width="0.5880%" height="15" fill="rgb(214,194,35)" fg:x="300" fg:w="66"/><text x="2.9226%" y="367.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (235 samples, 2.09%)</title><rect x="1.1759%" y="581" width="2.0935%" height="15" fill="rgb(249,28,3)" fg:x="132" fg:w="235"/><text x="1.4259%" y="591.50">s..</text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (67 samples, 0.60%)</title><rect x="2.6726%" y="565" width="0.5969%" height="15" fill="rgb(222,56,52)" fg:x="300" fg:w="67"/><text x="2.9226%" y="575.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (237 samples, 2.11%)</title><rect x="1.1759%" y="597" width="2.1114%" height="15" fill="rgb(245,217,50)" fg:x="132" fg:w="237"/><text x="1.4259%" y="607.50">s..</text></g><g><title>stress_test`async_channel::Sender&lt;T&gt;::try_send (2 samples, 0.02%)</title><rect x="3.2695%" y="581" width="0.0178%" height="15" fill="rgb(213,201,24)" fg:x="367" fg:w="2"/><text x="3.5195%" y="591.50"></text></g><g><title>stress_test`async_executor::Executor::spawn (2 samples, 0.02%)</title><rect x="3.3140%" y="565" width="0.0178%" height="15" fill="rgb(248,116,28)" fg:x="372" fg:w="2"/><text x="3.5640%" y="575.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (245 samples, 2.18%)</title><rect x="1.1759%" y="629" width="2.1826%" height="15" fill="rgb(219,72,43)" fg:x="132" fg:w="245"/><text x="1.4259%" y="639.50">s..</text></g><g><title>stress_test`std::panicking::try (245 samples, 2.18%)</title><rect x="1.1759%" y="613" width="2.1826%" height="15" fill="rgb(209,138,14)" fg:x="132" fg:w="245"/><text x="1.4259%" y="623.50">s..</text></g><g><title>stress_test`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.07%)</title><rect x="3.2873%" y="597" width="0.0713%" height="15" fill="rgb(222,18,33)" fg:x="369" fg:w="8"/><text x="3.5373%" y="607.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (5 samples, 0.04%)</title><rect x="3.3140%" y="581" width="0.0445%" height="15" fill="rgb(213,199,7)" fg:x="372" fg:w="5"/><text x="3.5640%" y="591.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (254 samples, 2.26%)</title><rect x="1.1136%" y="661" width="2.2628%" height="15" fill="rgb(250,110,10)" fg:x="125" fg:w="254"/><text x="1.3636%" y="671.50">s..</text></g><g><title>stress_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (254 samples, 2.26%)</title><rect x="1.1136%" y="645" width="2.2628%" height="15" fill="rgb(248,123,6)" fg:x="125" fg:w="254"/><text x="1.3636%" y="655.50">s..</text></g><g><title>stress_test`bevy_tasks::thread_executor::ThreadExecutorTicker::tick::_{{closure}} (2 samples, 0.02%)</title><rect x="3.3586%" y="629" width="0.0178%" height="15" fill="rgb(206,91,31)" fg:x="377" fg:w="2"/><text x="3.6086%" y="639.50"></text></g><g><title>stress_test`&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="3.3586%" y="613" width="0.0178%" height="15" fill="rgb(211,154,13)" fg:x="377" fg:w="2"/><text x="3.6086%" y="623.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (282 samples, 2.51%)</title><rect x="0.9087%" y="709" width="2.5122%" height="15" fill="rgb(225,148,7)" fg:x="102" fg:w="282"/><text x="1.1587%" y="719.50">st..</text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor (262 samples, 2.33%)</title><rect x="1.0869%" y="693" width="2.3341%" height="15" fill="rgb(220,160,43)" fg:x="122" fg:w="262"/><text x="1.3369%" y="703.50">s..</text></g><g><title>stress_test`futures_lite::future::block_on (260 samples, 2.32%)</title><rect x="1.1047%" y="677" width="2.3163%" height="15" fill="rgb(213,52,39)" fg:x="124" fg:w="260"/><text x="1.3547%" y="687.50">s..</text></g><g><title>stress_test`parking::Inner::park (3 samples, 0.03%)</title><rect x="3.3942%" y="661" width="0.0267%" height="15" fill="rgb(243,137,7)" fg:x="381" fg:w="3"/><text x="3.6442%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 0.03%)</title><rect x="3.3942%" y="645" width="0.0267%" height="15" fill="rgb(230,79,13)" fg:x="381" fg:w="3"/><text x="3.6442%" y="655.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.03%)</title><rect x="3.4922%" y="469" width="0.0267%" height="15" fill="rgb(247,105,23)" fg:x="392" fg:w="3"/><text x="3.7422%" y="479.50"></text></g><g><title>stress_test`async_channel::Sender&lt;T&gt;::try_send (2 samples, 0.02%)</title><rect x="3.5189%" y="469" width="0.0178%" height="15" fill="rgb(223,179,41)" fg:x="395" fg:w="2"/><text x="3.7689%" y="479.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.07%)</title><rect x="3.4744%" y="549" width="0.0713%" height="15" fill="rgb(218,9,34)" fg:x="390" fg:w="8"/><text x="3.7244%" y="559.50"></text></g><g><title>stress_test`bevy_tasks::thread_executor::ThreadExecutorTicker::tick::_{{closure}} (8 samples, 0.07%)</title><rect x="3.4744%" y="533" width="0.0713%" height="15" fill="rgb(222,106,8)" fg:x="390" fg:w="8"/><text x="3.7244%" y="543.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (7 samples, 0.06%)</title><rect x="3.4833%" y="517" width="0.0624%" height="15" fill="rgb(211,220,0)" fg:x="391" fg:w="7"/><text x="3.7333%" y="527.50"></text></g><g><title>stress_test`std::panicking::try (7 samples, 0.06%)</title><rect x="3.4833%" y="501" width="0.0624%" height="15" fill="rgb(229,52,16)" fg:x="391" fg:w="7"/><text x="3.7333%" y="511.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="3.4922%" y="485" width="0.0535%" height="15" fill="rgb(212,155,18)" fg:x="392" fg:w="6"/><text x="3.7422%" y="495.50"></text></g><g><title>stress_test`&lt;async_channel::RecvInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (4 samples, 0.04%)</title><rect x="3.5457%" y="533" width="0.0356%" height="15" fill="rgb(242,21,14)" fg:x="398" fg:w="4"/><text x="3.7957%" y="543.50"></text></g><g><title>stress_test`event_listener::Event&lt;T&gt;::listen (3 samples, 0.03%)</title><rect x="3.5546%" y="517" width="0.0267%" height="15" fill="rgb(222,19,48)" fg:x="399" fg:w="3"/><text x="3.8046%" y="527.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (4 samples, 0.04%)</title><rect x="3.5813%" y="533" width="0.0356%" height="15" fill="rgb(232,45,27)" fg:x="402" fg:w="4"/><text x="3.8313%" y="543.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.02%)</title><rect x="3.6704%" y="517" width="0.0178%" height="15" fill="rgb(249,103,42)" fg:x="412" fg:w="2"/><text x="3.9204%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.03%)</title><rect x="3.6971%" y="485" width="0.0267%" height="15" fill="rgb(246,81,33)" fg:x="415" fg:w="3"/><text x="3.9471%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4 samples, 0.04%)</title><rect x="3.6971%" y="501" width="0.0356%" height="15" fill="rgb(252,33,42)" fg:x="415" fg:w="4"/><text x="3.9471%" y="511.50"></text></g><g><title>stress_test`async_executor::Executor::spawn (7 samples, 0.06%)</title><rect x="3.6882%" y="517" width="0.0624%" height="15" fill="rgb(209,212,41)" fg:x="414" fg:w="7"/><text x="3.9382%" y="527.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (2 samples, 0.02%)</title><rect x="3.7327%" y="501" width="0.0178%" height="15" fill="rgb(207,154,6)" fg:x="419" fg:w="2"/><text x="3.9827%" y="511.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (2 samples, 0.02%)</title><rect x="3.7327%" y="485" width="0.0178%" height="15" fill="rgb(223,64,47)" fg:x="419" fg:w="2"/><text x="3.9827%" y="495.50"></text></g><g><title>stress_test`parking::Inner::unpark (2 samples, 0.02%)</title><rect x="3.7327%" y="469" width="0.0178%" height="15" fill="rgb(211,161,38)" fg:x="419" fg:w="2"/><text x="3.9827%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.02%)</title><rect x="3.7327%" y="453" width="0.0178%" height="15" fill="rgb(219,138,40)" fg:x="419" fg:w="2"/><text x="3.9827%" y="463.50"></text></g><g><title>stress_test`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (26 samples, 0.23%)</title><rect x="3.5457%" y="549" width="0.2316%" height="15" fill="rgb(241,228,46)" fg:x="398" fg:w="26"/><text x="3.7957%" y="559.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (18 samples, 0.16%)</title><rect x="3.6169%" y="533" width="0.1604%" height="15" fill="rgb(223,209,38)" fg:x="406" fg:w="18"/><text x="3.8669%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="3.7862%" y="517" width="0.0267%" height="15" fill="rgb(236,164,45)" fg:x="425" fg:w="3"/><text x="4.0362%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="3.7951%" y="501" width="0.0178%" height="15" fill="rgb(231,15,5)" fg:x="426" fg:w="2"/><text x="4.0451%" y="511.50"></text></g><g><title>stress_test`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="3.7862%" y="533" width="0.0356%" height="15" fill="rgb(252,35,15)" fg:x="425" fg:w="4"/><text x="4.0362%" y="543.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (6 samples, 0.05%)</title><rect x="3.7773%" y="549" width="0.0535%" height="15" fill="rgb(248,181,18)" fg:x="424" fg:w="6"/><text x="4.0273%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (11 samples, 0.10%)</title><rect x="3.8396%" y="533" width="0.0980%" height="15" fill="rgb(233,39,42)" fg:x="431" fg:w="11"/><text x="4.0896%" y="543.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (57 samples, 0.51%)</title><rect x="3.4388%" y="597" width="0.5078%" height="15" fill="rgb(238,110,33)" fg:x="386" fg:w="57"/><text x="3.6888%" y="607.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor (54 samples, 0.48%)</title><rect x="3.4655%" y="581" width="0.4811%" height="15" fill="rgb(233,195,10)" fg:x="389" fg:w="54"/><text x="3.7155%" y="591.50"></text></g><g><title>stress_test`futures_lite::future::block_on (54 samples, 0.48%)</title><rect x="3.4655%" y="565" width="0.4811%" height="15" fill="rgb(254,105,3)" fg:x="389" fg:w="54"/><text x="3.7155%" y="575.50"></text></g><g><title>stress_test`parking::Inner::park (13 samples, 0.12%)</title><rect x="3.8307%" y="549" width="0.1158%" height="15" fill="rgb(221,225,9)" fg:x="430" fg:w="13"/><text x="4.0807%" y="559.50"></text></g><g><title>stress_test`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="3.9555%" y="389" width="0.0267%" height="15" fill="rgb(224,227,45)" fg:x="444" fg:w="3"/><text x="4.2055%" y="399.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (2 samples, 0.02%)</title><rect x="3.9644%" y="373" width="0.0178%" height="15" fill="rgb(229,198,43)" fg:x="445" fg:w="2"/><text x="4.2144%" y="383.50"></text></g><g><title>stress_test`async_executor::Executor::spawn (2 samples, 0.02%)</title><rect x="3.9644%" y="357" width="0.0178%" height="15" fill="rgb(206,209,35)" fg:x="445" fg:w="2"/><text x="4.2144%" y="367.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (2 samples, 0.02%)</title><rect x="3.9644%" y="341" width="0.0178%" height="15" fill="rgb(245,195,53)" fg:x="445" fg:w="2"/><text x="4.2144%" y="351.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="3.9822%" y="389" width="0.0178%" height="15" fill="rgb(240,92,26)" fg:x="447" fg:w="2"/><text x="4.2322%" y="399.50"></text></g><g><title>stress_test`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="3.9822%" y="373" width="0.0178%" height="15" fill="rgb(207,40,23)" fg:x="447" fg:w="2"/><text x="4.2322%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="3.9822%" y="357" width="0.0178%" height="15" fill="rgb(223,111,35)" fg:x="447" fg:w="2"/><text x="4.2322%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="3.9822%" y="341" width="0.0178%" height="15" fill="rgb(229,147,28)" fg:x="447" fg:w="2"/><text x="4.2322%" y="351.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (7 samples, 0.06%)</title><rect x="3.9465%" y="453" width="0.0624%" height="15" fill="rgb(211,29,28)" fg:x="443" fg:w="7"/><text x="4.1965%" y="463.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (7 samples, 0.06%)</title><rect x="3.9465%" y="437" width="0.0624%" height="15" fill="rgb(228,72,33)" fg:x="443" fg:w="7"/><text x="4.1965%" y="447.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor (6 samples, 0.05%)</title><rect x="3.9555%" y="421" width="0.0535%" height="15" fill="rgb(205,214,31)" fg:x="444" fg:w="6"/><text x="4.2055%" y="431.50"></text></g><g><title>stress_test`futures_lite::future::block_on (6 samples, 0.05%)</title><rect x="3.9555%" y="405" width="0.0535%" height="15" fill="rgb(224,111,15)" fg:x="444" fg:w="6"/><text x="4.2055%" y="415.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (65 samples, 0.58%)</title><rect x="3.4388%" y="661" width="0.5791%" height="15" fill="rgb(253,21,26)" fg:x="386" fg:w="65"/><text x="3.6888%" y="671.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (65 samples, 0.58%)</title><rect x="3.4388%" y="645" width="0.5791%" height="15" fill="rgb(245,139,43)" fg:x="386" fg:w="65"/><text x="3.6888%" y="655.50"></text></g><g><title>stress_test`bevy_ecs::world::World::try_schedule_scope (65 samples, 0.58%)</title><rect x="3.4388%" y="629" width="0.5791%" height="15" fill="rgb(252,170,7)" fg:x="386" fg:w="65"/><text x="3.6888%" y="639.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (65 samples, 0.58%)</title><rect x="3.4388%" y="613" width="0.5791%" height="15" fill="rgb(231,118,14)" fg:x="386" fg:w="65"/><text x="3.6888%" y="623.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (8 samples, 0.07%)</title><rect x="3.9465%" y="597" width="0.0713%" height="15" fill="rgb(238,83,0)" fg:x="443" fg:w="8"/><text x="4.1965%" y="607.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (8 samples, 0.07%)</title><rect x="3.9465%" y="581" width="0.0713%" height="15" fill="rgb(221,39,39)" fg:x="443" fg:w="8"/><text x="4.1965%" y="591.50"></text></g><g><title>stress_test`bevy_time::fixed::run_fixed_main_schedule (8 samples, 0.07%)</title><rect x="3.9465%" y="565" width="0.0713%" height="15" fill="rgb(222,119,46)" fg:x="443" fg:w="8"/><text x="4.1965%" y="575.50"></text></g><g><title>stress_test`bevy_ecs::world::World::try_schedule_scope (8 samples, 0.07%)</title><rect x="3.9465%" y="549" width="0.0713%" height="15" fill="rgb(222,165,49)" fg:x="443" fg:w="8"/><text x="4.1965%" y="559.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (8 samples, 0.07%)</title><rect x="3.9465%" y="533" width="0.0713%" height="15" fill="rgb(219,113,52)" fg:x="443" fg:w="8"/><text x="4.1965%" y="543.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (8 samples, 0.07%)</title><rect x="3.9465%" y="517" width="0.0713%" height="15" fill="rgb(214,7,15)" fg:x="443" fg:w="8"/><text x="4.1965%" y="527.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (8 samples, 0.07%)</title><rect x="3.9465%" y="501" width="0.0713%" height="15" fill="rgb(235,32,4)" fg:x="443" fg:w="8"/><text x="4.1965%" y="511.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (8 samples, 0.07%)</title><rect x="3.9465%" y="485" width="0.0713%" height="15" fill="rgb(238,90,54)" fg:x="443" fg:w="8"/><text x="4.1965%" y="495.50"></text></g><g><title>stress_test`bevy_ecs::world::World::try_schedule_scope (8 samples, 0.07%)</title><rect x="3.9465%" y="469" width="0.0713%" height="15" fill="rgb(213,208,19)" fg:x="443" fg:w="8"/><text x="4.1965%" y="479.50"></text></g><g><title>stress_test`bevy_app::app::App::update (350 samples, 3.12%)</title><rect x="0.9087%" y="725" width="3.1180%" height="15" fill="rgb(233,156,4)" fg:x="102" fg:w="350"/><text x="1.1587%" y="735.50">str..</text></g><g><title>stress_test`bevy_ecs::world::World::schedule_scope (68 samples, 0.61%)</title><rect x="3.4209%" y="709" width="0.6058%" height="15" fill="rgb(207,194,5)" fg:x="384" fg:w="68"/><text x="3.6709%" y="719.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (66 samples, 0.59%)</title><rect x="3.4388%" y="693" width="0.5880%" height="15" fill="rgb(206,111,30)" fg:x="386" fg:w="66"/><text x="3.6888%" y="703.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (66 samples, 0.59%)</title><rect x="3.4388%" y="677" width="0.5880%" height="15" fill="rgb(243,70,54)" fg:x="386" fg:w="66"/><text x="3.6888%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (388 samples, 3.46%)</title><rect x="0.5880%" y="885" width="3.4566%" height="15" fill="rgb(242,28,8)" fg:x="66" fg:w="388"/><text x="0.8380%" y="895.50">Cor..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (388 samples, 3.46%)</title><rect x="0.5880%" y="869" width="3.4566%" height="15" fill="rgb(219,106,18)" fg:x="66" fg:w="388"/><text x="0.8380%" y="879.50">Cor..</text></g><g><title>stress_test`winit::platform_impl::platform::observer::control_flow_end_handler (354 samples, 3.15%)</title><rect x="0.8909%" y="853" width="3.1537%" height="15" fill="rgb(244,222,10)" fg:x="100" fg:w="354"/><text x="1.1409%" y="863.50">str..</text></g><g><title>stress_test`std::panicking::try (354 samples, 3.15%)</title><rect x="0.8909%" y="837" width="3.1537%" height="15" fill="rgb(236,179,52)" fg:x="100" fg:w="354"/><text x="1.1409%" y="847.50">str..</text></g><g><title>stress_test`winit::platform_impl::platform::app_state::AppState::cleared (354 samples, 3.15%)</title><rect x="0.8909%" y="821" width="3.1537%" height="15" fill="rgb(213,23,39)" fg:x="100" fg:w="354"/><text x="1.1409%" y="831.50">str..</text></g><g><title>stress_test`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (354 samples, 3.15%)</title><rect x="0.8909%" y="805" width="3.1537%" height="15" fill="rgb(238,48,10)" fg:x="100" fg:w="354"/><text x="1.1409%" y="815.50">str..</text></g><g><title>stress_test`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (354 samples, 3.15%)</title><rect x="0.8909%" y="789" width="3.1537%" height="15" fill="rgb(251,196,23)" fg:x="100" fg:w="354"/><text x="1.1409%" y="799.50">str..</text></g><g><title>stress_test`bevy_winit::winit_runner::_{{closure}} (354 samples, 3.15%)</title><rect x="0.8909%" y="773" width="3.1537%" height="15" fill="rgb(250,152,24)" fg:x="100" fg:w="354"/><text x="1.1409%" y="783.50">str..</text></g><g><title>stress_test`bevy_winit::handle_winit_event (354 samples, 3.15%)</title><rect x="0.8909%" y="757" width="3.1537%" height="15" fill="rgb(209,150,17)" fg:x="100" fg:w="354"/><text x="1.1409%" y="767.50">str..</text></g><g><title>stress_test`bevy_winit::run_app_update_if_should (352 samples, 3.14%)</title><rect x="0.9087%" y="741" width="3.1359%" height="15" fill="rgb(234,202,34)" fg:x="102" fg:w="352"/><text x="1.1587%" y="751.50">str..</text></g><g><title>stress_test`bevy_winit::system::create_windows (2 samples, 0.02%)</title><rect x="4.0267%" y="725" width="0.0178%" height="15" fill="rgb(253,148,53)" fg:x="452" fg:w="2"/><text x="4.2767%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (15 samples, 0.13%)</title><rect x="4.0445%" y="885" width="0.1336%" height="15" fill="rgb(218,129,16)" fg:x="454" fg:w="15"/><text x="4.2945%" y="895.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (15 samples, 0.13%)</title><rect x="4.0445%" y="869" width="0.1336%" height="15" fill="rgb(216,85,19)" fg:x="454" fg:w="15"/><text x="4.2945%" y="879.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (408 samples, 3.63%)</title><rect x="0.5702%" y="917" width="3.6347%" height="15" fill="rgb(235,228,7)" fg:x="64" fg:w="408"/><text x="0.8202%" y="927.50">Core..</text></g><g><title>CoreFoundation`__CFRunLoopRun (407 samples, 3.63%)</title><rect x="0.5791%" y="901" width="3.6258%" height="15" fill="rgb(245,175,0)" fg:x="65" fg:w="407"/><text x="0.8291%" y="911.50">Core..</text></g><g><title>HIToolbox`InitTSMFirstEventTime (2 samples, 0.02%)</title><rect x="4.2049%" y="901" width="0.0178%" height="15" fill="rgb(208,168,36)" fg:x="472" fg:w="2"/><text x="4.4549%" y="911.50"></text></g><g><title>stress_test`bevy_app::app::App::run (473 samples, 4.21%)</title><rect x="0.0178%" y="1077" width="4.2138%" height="15" fill="rgb(246,171,24)" fg:x="2" fg:w="473"/><text x="0.2678%" y="1087.50">stres..</text></g><g><title>stress_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (473 samples, 4.21%)</title><rect x="0.0178%" y="1061" width="4.2138%" height="15" fill="rgb(215,142,24)" fg:x="2" fg:w="473"/><text x="0.2678%" y="1071.50">stres..</text></g><g><title>stress_test`bevy_winit::winit_runner (473 samples, 4.21%)</title><rect x="0.0178%" y="1045" width="4.2138%" height="15" fill="rgb(250,187,7)" fg:x="2" fg:w="473"/><text x="0.2678%" y="1055.50">stres..</text></g><g><title>stress_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (455 samples, 4.05%)</title><rect x="0.1782%" y="1029" width="4.0535%" height="15" fill="rgb(228,66,33)" fg:x="20" fg:w="455"/><text x="0.4282%" y="1039.50">stre..</text></g><g><title>AppKit`-[NSApplication run] (455 samples, 4.05%)</title><rect x="0.1782%" y="1013" width="4.0535%" height="15" fill="rgb(234,215,21)" fg:x="20" fg:w="455"/><text x="0.4282%" y="1023.50">AppK..</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (450 samples, 4.01%)</title><rect x="0.2227%" y="997" width="4.0089%" height="15" fill="rgb(222,191,20)" fg:x="25" fg:w="450"/><text x="0.4727%" y="1007.50">AppK..</text></g><g><title>AppKit`_DPSNextEvent (450 samples, 4.01%)</title><rect x="0.2227%" y="981" width="4.0089%" height="15" fill="rgb(245,79,54)" fg:x="25" fg:w="450"/><text x="0.4727%" y="991.50">AppK..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (419 samples, 3.73%)</title><rect x="0.4989%" y="965" width="3.7327%" height="15" fill="rgb(240,10,37)" fg:x="56" fg:w="419"/><text x="0.7489%" y="975.50">HITo..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (419 samples, 3.73%)</title><rect x="0.4989%" y="949" width="3.7327%" height="15" fill="rgb(214,192,32)" fg:x="56" fg:w="419"/><text x="0.7489%" y="959.50">HITo..</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (412 samples, 3.67%)</title><rect x="0.5612%" y="933" width="3.6704%" height="15" fill="rgb(209,36,54)" fg:x="63" fg:w="412"/><text x="0.8112%" y="943.50">HITo..</text></g><g><title>HIToolbox`_FirstEventTime (3 samples, 0.03%)</title><rect x="4.2049%" y="917" width="0.0267%" height="15" fill="rgb(220,10,11)" fg:x="472" fg:w="3"/><text x="4.4549%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="4.2584%" y="949" width="0.0178%" height="15" fill="rgb(221,106,17)" fg:x="478" fg:w="2"/><text x="4.5084%" y="959.50"></text></g><g><title>stress_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.05%)</title><rect x="4.2851%" y="949" width="0.0535%" height="15" fill="rgb(251,142,44)" fg:x="481" fg:w="6"/><text x="4.5351%" y="959.50"></text></g><g><title>stress_test`ruzstd::decoding::literals_section_decoder::decode_literals (2 samples, 0.02%)</title><rect x="4.3474%" y="901" width="0.0178%" height="15" fill="rgb(238,13,15)" fg:x="488" fg:w="2"/><text x="4.5974%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="4.3831%" y="885" width="0.0178%" height="15" fill="rgb(208,107,27)" fg:x="492" fg:w="2"/><text x="4.6331%" y="895.50"></text></g><g><title>stress_test`ruzstd::decoding::decodebuffer::Decodebuffer::repeat (3 samples, 0.03%)</title><rect x="4.4009%" y="885" width="0.0267%" height="15" fill="rgb(205,136,37)" fg:x="494" fg:w="3"/><text x="4.6509%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="4.4098%" y="869" width="0.0178%" height="15" fill="rgb(250,205,27)" fg:x="495" fg:w="2"/><text x="4.6598%" y="879.50"></text></g><g><title>stress_test`ruzstd::decoding::sequence_execution::execute_sequences (9 samples, 0.08%)</title><rect x="4.3653%" y="901" width="0.0802%" height="15" fill="rgb(210,80,43)" fg:x="490" fg:w="9"/><text x="4.6153%" y="911.50"></text></g><g><title>stress_test`ruzstd::decoding::ringbuffer::RingBuffer::reserve_amortized (2 samples, 0.02%)</title><rect x="4.4276%" y="885" width="0.0178%" height="15" fill="rgb(247,160,36)" fg:x="497" fg:w="2"/><text x="4.6776%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="4.4276%" y="869" width="0.0178%" height="15" fill="rgb(234,13,49)" fg:x="497" fg:w="2"/><text x="4.6776%" y="879.50"></text></g><g><title>stress_test`bevy_core_pipeline::tonemapping::setup_tonemapping_lut_image (27 samples, 0.24%)</title><rect x="4.2584%" y="997" width="0.2405%" height="15" fill="rgb(234,122,0)" fg:x="478" fg:w="27"/><text x="4.5084%" y="1007.50"></text></g><g><title>stress_test`bevy_render::texture::image::Image::from_buffer (27 samples, 0.24%)</title><rect x="4.2584%" y="981" width="0.2405%" height="15" fill="rgb(207,146,38)" fg:x="478" fg:w="27"/><text x="4.5084%" y="991.50"></text></g><g><title>stress_test`bevy_render::texture::ktx2::ktx2_buffer_to_image (27 samples, 0.24%)</title><rect x="4.2584%" y="965" width="0.2405%" height="15" fill="rgb(207,177,25)" fg:x="478" fg:w="27"/><text x="4.5084%" y="975.50"></text></g><g><title>stress_test`std::io::default_read_to_end::small_probe_read (17 samples, 0.15%)</title><rect x="4.3474%" y="949" width="0.1514%" height="15" fill="rgb(211,178,42)" fg:x="488" fg:w="17"/><text x="4.5974%" y="959.50"></text></g><g><title>stress_test`&lt;ruzstd::streaming_decoder::StreamingDecoder&lt;READ,DEC&gt; as std::io::Read&gt;::read (17 samples, 0.15%)</title><rect x="4.3474%" y="933" width="0.1514%" height="15" fill="rgb(230,69,54)" fg:x="488" fg:w="17"/><text x="4.5974%" y="943.50"></text></g><g><title>stress_test`ruzstd::decoding::block_decoder::BlockDecoder::decode_block_content (17 samples, 0.15%)</title><rect x="4.3474%" y="917" width="0.1514%" height="15" fill="rgb(214,135,41)" fg:x="488" fg:w="17"/><text x="4.5974%" y="927.50"></text></g><g><title>stress_test`ruzstd::decoding::sequence_section_decoder::decode_sequences (6 samples, 0.05%)</title><rect x="4.4454%" y="901" width="0.0535%" height="15" fill="rgb(237,67,25)" fg:x="499" fg:w="6"/><text x="4.6954%" y="911.50"></text></g><g><title>stress_test`ruzstd::fse::fse_decoder::FSEDecoder::update_state (3 samples, 0.03%)</title><rect x="4.4722%" y="885" width="0.0267%" height="15" fill="rgb(222,189,50)" fg:x="502" fg:w="3"/><text x="4.7222%" y="895.50"></text></g><g><title>stress_test`&lt;(S0,S1,S2,S3,S4,S5,S6,S7,S8,S9) as bevy_app::plugin::sealed::Plugins&lt;(bevy_app::plugin::sealed::PluginsTupleMarker,P0,P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;&gt;::add_to_app (31 samples, 0.28%)</title><rect x="4.2316%" y="1045" width="0.2762%" height="15" fill="rgb(245,148,34)" fg:x="475" fg:w="31"/><text x="4.4816%" y="1055.50"></text></g><g><title>stress_test`bevy_app::app::App::add_boxed_plugin (31 samples, 0.28%)</title><rect x="4.2316%" y="1029" width="0.2762%" height="15" fill="rgb(222,29,6)" fg:x="475" fg:w="31"/><text x="4.4816%" y="1039.50"></text></g><g><title>stress_test`&lt;bevy_core_pipeline::tonemapping::TonemappingPlugin as bevy_app::plugin::Plugin&gt;::build (28 samples, 0.25%)</title><rect x="4.2584%" y="1013" width="0.2494%" height="15" fill="rgb(221,189,43)" fg:x="478" fg:w="28"/><text x="4.5084%" y="1023.50"></text></g><g><title>AudioToolboxCore`0x7ff8148cbd7b (2 samples, 0.02%)</title><rect x="4.5434%" y="869" width="0.0178%" height="15" fill="rgb(207,36,27)" fg:x="510" fg:w="2"/><text x="4.7934%" y="879.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (2 samples, 0.02%)</title><rect x="4.5434%" y="853" width="0.0178%" height="15" fill="rgb(217,90,24)" fg:x="510" fg:w="2"/><text x="4.7934%" y="863.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadBundle (2 samples, 0.02%)</title><rect x="4.5434%" y="837" width="0.0178%" height="15" fill="rgb(224,66,35)" fg:x="510" fg:w="2"/><text x="4.7934%" y="847.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (2 samples, 0.02%)</title><rect x="4.5434%" y="821" width="0.0178%" height="15" fill="rgb(221,13,50)" fg:x="510" fg:w="2"/><text x="4.7934%" y="831.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator() (2 samples, 0.02%)</title><rect x="4.5434%" y="805" width="0.0178%" height="15" fill="rgb(236,68,49)" fg:x="510" fg:w="2"/><text x="4.7934%" y="815.50"></text></g><g><title>dyld`dyld4::JustInTimeLoader::applyFixups (2 samples, 0.02%)</title><rect x="4.5434%" y="789" width="0.0178%" height="15" fill="rgb(229,146,28)" fg:x="510" fg:w="2"/><text x="4.7934%" y="799.50"></text></g><g><title>AudioToolboxCore`0x7ff8148cad00 (3 samples, 0.03%)</title><rect x="4.5434%" y="885" width="0.0267%" height="15" fill="rgb(225,31,38)" fg:x="510" fg:w="3"/><text x="4.7934%" y="895.50"></text></g><g><title>stress_test`&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (6 samples, 0.05%)</title><rect x="4.5256%" y="997" width="0.0535%" height="15" fill="rgb(250,208,3)" fg:x="508" fg:w="6"/><text x="4.7756%" y="1007.50"></text></g><g><title>stress_test`cpal::host::coreaudio::macos::Device::default_config (6 samples, 0.05%)</title><rect x="4.5256%" y="981" width="0.0535%" height="15" fill="rgb(246,54,23)" fg:x="508" fg:w="6"/><text x="4.7756%" y="991.50"></text></g><g><title>stress_test`cpal::host::coreaudio::macos::audio_unit_from_device (5 samples, 0.04%)</title><rect x="4.5345%" y="965" width="0.0445%" height="15" fill="rgb(243,76,11)" fg:x="509" fg:w="5"/><text x="4.7845%" y="975.50"></text></g><g><title>AudioToolboxCore`0x7ff8149cb0cf (4 samples, 0.04%)</title><rect x="4.5434%" y="949" width="0.0356%" height="15" fill="rgb(245,21,50)" fg:x="510" fg:w="4"/><text x="4.7934%" y="959.50"></text></g><g><title>AudioToolboxCore`0x7ff81484932b (4 samples, 0.04%)</title><rect x="4.5434%" y="933" width="0.0356%" height="15" fill="rgb(228,9,43)" fg:x="510" fg:w="4"/><text x="4.7934%" y="943.50"></text></g><g><title>AudioToolboxCore`0x7ff8149cb2e7 (4 samples, 0.04%)</title><rect x="4.5434%" y="917" width="0.0356%" height="15" fill="rgb(208,100,47)" fg:x="510" fg:w="4"/><text x="4.7934%" y="927.50"></text></g><g><title>AudioToolboxCore`0x7ff8149cae97 (4 samples, 0.04%)</title><rect x="4.5434%" y="901" width="0.0356%" height="15" fill="rgb(232,26,8)" fg:x="510" fg:w="4"/><text x="4.7934%" y="911.50"></text></g><g><title>CoreAudio`0x7ff814e5d394 (3 samples, 0.03%)</title><rect x="4.5969%" y="885" width="0.0267%" height="15" fill="rgb(216,166,38)" fg:x="516" fg:w="3"/><text x="4.8469%" y="895.50"></text></g><g><title>CoreAudio`0x7ff814f787e0 (3 samples, 0.03%)</title><rect x="4.5969%" y="869" width="0.0267%" height="15" fill="rgb(251,202,51)" fg:x="516" fg:w="3"/><text x="4.8469%" y="879.50"></text></g><g><title>CoreAudio`0x7ff81516fb3a (3 samples, 0.03%)</title><rect x="4.5969%" y="853" width="0.0267%" height="15" fill="rgb(254,216,34)" fg:x="516" fg:w="3"/><text x="4.8469%" y="863.50"></text></g><g><title>CoreAudio`0x7ff814e5d90c (3 samples, 0.03%)</title><rect x="4.5969%" y="837" width="0.0267%" height="15" fill="rgb(251,32,27)" fg:x="516" fg:w="3"/><text x="4.8469%" y="847.50"></text></g><g><title>CoreAudio`0x7ff814dc9bef (3 samples, 0.03%)</title><rect x="4.5969%" y="821" width="0.0267%" height="15" fill="rgb(208,127,28)" fg:x="516" fg:w="3"/><text x="4.8469%" y="831.50"></text></g><g><title>stress_test`&lt;cpal::platform::platform_impl::Host as cpal::traits::HostTrait&gt;::default_output_device (7 samples, 0.06%)</title><rect x="4.5791%" y="997" width="0.0624%" height="15" fill="rgb(224,137,22)" fg:x="514" fg:w="7"/><text x="4.8291%" y="1007.50"></text></g><g><title>CoreAudio`0x7ff814cbf0b3 (7 samples, 0.06%)</title><rect x="4.5791%" y="981" width="0.0624%" height="15" fill="rgb(254,70,32)" fg:x="514" fg:w="7"/><text x="4.8291%" y="991.50"></text></g><g><title>CoreAudio`0x7ff814cbf4f0 (6 samples, 0.05%)</title><rect x="4.5880%" y="965" width="0.0535%" height="15" fill="rgb(229,75,37)" fg:x="515" fg:w="6"/><text x="4.8380%" y="975.50"></text></g><g><title>CoreAudio`0x7ff814cc2ae0 (6 samples, 0.05%)</title><rect x="4.5880%" y="949" width="0.0535%" height="15" fill="rgb(252,64,23)" fg:x="515" fg:w="6"/><text x="4.8380%" y="959.50"></text></g><g><title>CoreAudio`0x7ff814cc3745 (6 samples, 0.05%)</title><rect x="4.5880%" y="933" width="0.0535%" height="15" fill="rgb(232,162,48)" fg:x="515" fg:w="6"/><text x="4.8380%" y="943.50"></text></g><g><title>CoreAudio`0x7ff814e6120f (6 samples, 0.05%)</title><rect x="4.5880%" y="917" width="0.0535%" height="15" fill="rgb(246,160,12)" fg:x="515" fg:w="6"/><text x="4.8380%" y="927.50"></text></g><g><title>CoreAudio`0x7ff814e5e51b (5 samples, 0.04%)</title><rect x="4.5969%" y="901" width="0.0445%" height="15" fill="rgb(247,166,0)" fg:x="516" fg:w="5"/><text x="4.8469%" y="911.50"></text></g><g><title>CoreAudio`0x7ff814e5d3d8 (2 samples, 0.02%)</title><rect x="4.6236%" y="885" width="0.0178%" height="15" fill="rgb(249,219,21)" fg:x="519" fg:w="2"/><text x="4.8736%" y="895.50"></text></g><g><title>CoreAudio`0x7ff814d8dcf1 (2 samples, 0.02%)</title><rect x="4.6236%" y="869" width="0.0178%" height="15" fill="rgb(205,209,3)" fg:x="519" fg:w="2"/><text x="4.8736%" y="879.50"></text></g><g><title>CoreAudio`0x7ff814d8c17b (2 samples, 0.02%)</title><rect x="4.6236%" y="853" width="0.0178%" height="15" fill="rgb(243,44,1)" fg:x="519" fg:w="2"/><text x="4.8736%" y="863.50"></text></g><g><title>CoreAudio`0x7ff81520de67 (2 samples, 0.02%)</title><rect x="4.6236%" y="837" width="0.0178%" height="15" fill="rgb(206,159,16)" fg:x="519" fg:w="2"/><text x="4.8736%" y="847.50"></text></g><g><title>CoreAudio`0x7ff814cc5530 (2 samples, 0.02%)</title><rect x="4.6236%" y="821" width="0.0178%" height="15" fill="rgb(244,77,30)" fg:x="519" fg:w="2"/><text x="4.8736%" y="831.50"></text></g><g><title>CoreAudio`0x7ff814e6166e (2 samples, 0.02%)</title><rect x="4.6236%" y="805" width="0.0178%" height="15" fill="rgb(218,69,12)" fg:x="519" fg:w="2"/><text x="4.8736%" y="815.50"></text></g><g><title>CoreAudio`0x7ff814f764d9 (2 samples, 0.02%)</title><rect x="4.6236%" y="789" width="0.0178%" height="15" fill="rgb(212,87,7)" fg:x="519" fg:w="2"/><text x="4.8736%" y="799.50"></text></g><g><title>CoreAudio`0x7ff814f787e0 (2 samples, 0.02%)</title><rect x="4.6236%" y="773" width="0.0178%" height="15" fill="rgb(245,114,25)" fg:x="519" fg:w="2"/><text x="4.8736%" y="783.50"></text></g><g><title>CoreAudio`0x7ff81516fb3a (2 samples, 0.02%)</title><rect x="4.6236%" y="757" width="0.0178%" height="15" fill="rgb(210,61,42)" fg:x="519" fg:w="2"/><text x="4.8736%" y="767.50"></text></g><g><title>CoreAudio`0x7ff814f793ad (2 samples, 0.02%)</title><rect x="4.6236%" y="741" width="0.0178%" height="15" fill="rgb(211,52,33)" fg:x="519" fg:w="2"/><text x="4.8736%" y="751.50"></text></g><g><title>CoreAudio`0x7ff814d5e7b8 (2 samples, 0.02%)</title><rect x="4.6236%" y="725" width="0.0178%" height="15" fill="rgb(234,58,33)" fg:x="519" fg:w="2"/><text x="4.8736%" y="735.50"></text></g><g><title>stress_test`&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (14 samples, 0.12%)</title><rect x="4.5256%" y="1045" width="0.1247%" height="15" fill="rgb(220,115,36)" fg:x="508" fg:w="14"/><text x="4.7756%" y="1055.50"></text></g><g><title>stress_test`&lt;bevy_audio::audio_output::AudioOutput as core::default::Default&gt;::default (14 samples, 0.12%)</title><rect x="4.5256%" y="1029" width="0.1247%" height="15" fill="rgb(243,153,54)" fg:x="508" fg:w="14"/><text x="4.7756%" y="1039.50"></text></g><g><title>stress_test`rodio::stream::OutputStream::try_default (14 samples, 0.12%)</title><rect x="4.5256%" y="1013" width="0.1247%" height="15" fill="rgb(251,47,18)" fg:x="508" fg:w="14"/><text x="4.7756%" y="1023.50"></text></g><g><title>stress_test`&lt;(S0,S1,S2,S3,S4,S5,S6,S7,S8) as bevy_app::plugin::sealed::Plugins&lt;(bevy_app::plugin::sealed::PluginsTupleMarker,P0,P1,P2,P3,P4,P5,P6,P7,P8)&gt;&gt;::add_to_app (4 samples, 0.04%)</title><rect x="4.6682%" y="1029" width="0.0356%" height="15" fill="rgb(242,102,42)" fg:x="524" fg:w="4"/><text x="4.9182%" y="1039.50"></text></g><g><title>stress_test`bevy_app::app::App::add_boxed_plugin (3 samples, 0.03%)</title><rect x="4.6771%" y="1013" width="0.0267%" height="15" fill="rgb(234,31,38)" fg:x="525" fg:w="3"/><text x="4.9271%" y="1023.50"></text></g><g><title>stress_test`naga_oil::compose::parse_imports::substitute_identifiers (3 samples, 0.03%)</title><rect x="4.7394%" y="981" width="0.0267%" height="15" fill="rgb(221,117,51)" fg:x="532" fg:w="3"/><text x="4.9894%" y="991.50"></text></g><g><title>stress_test`&lt;bevy_pbr::PbrPlugin as bevy_app::plugin::Plugin&gt;::build (12 samples, 0.11%)</title><rect x="4.6682%" y="1045" width="0.1069%" height="15" fill="rgb(212,20,18)" fg:x="524" fg:w="12"/><text x="4.9182%" y="1055.50"></text></g><g><title>stress_test`bevy_render::render_resource::shader::Shader::preprocess (7 samples, 0.06%)</title><rect x="4.7127%" y="1029" width="0.0624%" height="15" fill="rgb(245,133,36)" fg:x="529" fg:w="7"/><text x="4.9627%" y="1039.50"></text></g><g><title>stress_test`naga_oil::compose::get_preprocessor_data (7 samples, 0.06%)</title><rect x="4.7127%" y="1013" width="0.0624%" height="15" fill="rgb(212,6,19)" fg:x="529" fg:w="7"/><text x="4.9627%" y="1023.50"></text></g><g><title>stress_test`naga_oil::compose::preprocess::Preprocessor::get_preprocessor_metadata (7 samples, 0.06%)</title><rect x="4.7127%" y="997" width="0.0624%" height="15" fill="rgb(218,1,36)" fg:x="529" fg:w="7"/><text x="4.9627%" y="1007.50"></text></g><g><title>stress_test`regex_automata::meta::strategy::new (4 samples, 0.04%)</title><rect x="4.7840%" y="789" width="0.0356%" height="15" fill="rgb(246,84,54)" fg:x="537" fg:w="4"/><text x="5.0340%" y="799.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 0.03%)</title><rect x="4.7929%" y="773" width="0.0267%" height="15" fill="rgb(242,110,6)" fg:x="538" fg:w="3"/><text x="5.0429%" y="783.50"></text></g><g><title>stress_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="4.7929%" y="757" width="0.0267%" height="15" fill="rgb(214,47,5)" fg:x="538" fg:w="3"/><text x="5.0429%" y="767.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.03%)</title><rect x="4.7929%" y="741" width="0.0267%" height="15" fill="rgb(218,159,25)" fg:x="538" fg:w="3"/><text x="5.0429%" y="751.50"></text></g><g><title>stress_test`regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.03%)</title><rect x="4.7929%" y="725" width="0.0267%" height="15" fill="rgb(215,211,28)" fg:x="538" fg:w="3"/><text x="5.0429%" y="735.50"></text></g><g><title>stress_test`&lt;(S0,S1,S2,S3,S4,S5,S6) as bevy_app::plugin::sealed::Plugins&lt;(bevy_app::plugin::sealed::PluginsTupleMarker,P0,P1,P2,P3,P4,P5,P6)&gt;&gt;::add_to_app (6 samples, 0.05%)</title><rect x="4.7751%" y="1029" width="0.0535%" height="15" fill="rgb(238,59,32)" fg:x="536" fg:w="6"/><text x="5.0251%" y="1039.50"></text></g><g><title>stress_test`bevy_app::app::App::add_boxed_plugin (6 samples, 0.05%)</title><rect x="4.7751%" y="1013" width="0.0535%" height="15" fill="rgb(226,82,3)" fg:x="536" fg:w="6"/><text x="5.0251%" y="1023.50"></text></g><g><title>stress_test`&lt;bevy_render::view::window::WindowRenderPlugin as bevy_app::plugin::Plugin&gt;::build (6 samples, 0.05%)</title><rect x="4.7751%" y="997" width="0.0535%" height="15" fill="rgb(240,164,32)" fg:x="536" fg:w="6"/><text x="5.0251%" y="1007.50"></text></g><g><title>stress_test`bevy_app::app::App::add_plugins (6 samples, 0.05%)</title><rect x="4.7751%" y="981" width="0.0535%" height="15" fill="rgb(232,46,7)" fg:x="536" fg:w="6"/><text x="5.0251%" y="991.50"></text></g><g><title>stress_test`bevy_app::app::App::add_boxed_plugin (6 samples, 0.05%)</title><rect x="4.7751%" y="965" width="0.0535%" height="15" fill="rgb(229,129,53)" fg:x="536" fg:w="6"/><text x="5.0251%" y="975.50"></text></g><g><title>stress_test`&lt;bevy_render::view::window::screenshot::ScreenshotPlugin as bevy_app::plugin::Plugin&gt;::build (6 samples, 0.05%)</title><rect x="4.7751%" y="949" width="0.0535%" height="15" fill="rgb(234,188,29)" fg:x="536" fg:w="6"/><text x="5.0251%" y="959.50"></text></g><g><title>stress_test`bevy_render::render_resource::shader::Shader::preprocess (6 samples, 0.05%)</title><rect x="4.7751%" y="933" width="0.0535%" height="15" fill="rgb(246,141,4)" fg:x="536" fg:w="6"/><text x="5.0251%" y="943.50"></text></g><g><title>stress_test`naga_oil::compose::get_preprocessor_data (6 samples, 0.05%)</title><rect x="4.7751%" y="917" width="0.0535%" height="15" fill="rgb(229,23,39)" fg:x="536" fg:w="6"/><text x="5.0251%" y="927.50"></text></g><g><title>stress_test`once_cell::imp::OnceCell&lt;T&gt;::initialize (5 samples, 0.04%)</title><rect x="4.7840%" y="901" width="0.0445%" height="15" fill="rgb(206,12,3)" fg:x="537" fg:w="5"/><text x="5.0340%" y="911.50"></text></g><g><title>stress_test`once_cell::imp::initialize_or_wait (5 samples, 0.04%)</title><rect x="4.7840%" y="885" width="0.0445%" height="15" fill="rgb(252,226,20)" fg:x="537" fg:w="5"/><text x="5.0340%" y="895.50"></text></g><g><title>stress_test`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (5 samples, 0.04%)</title><rect x="4.7840%" y="869" width="0.0445%" height="15" fill="rgb(216,123,35)" fg:x="537" fg:w="5"/><text x="5.0340%" y="879.50"></text></g><g><title>stress_test`&lt;naga_oil::compose::preprocess::Preprocessor as core::default::Default&gt;::default (5 samples, 0.04%)</title><rect x="4.7840%" y="853" width="0.0445%" height="15" fill="rgb(212,68,40)" fg:x="537" fg:w="5"/><text x="5.0340%" y="863.50"></text></g><g><title>stress_test`regex::regex::string::Regex::new (5 samples, 0.04%)</title><rect x="4.7840%" y="837" width="0.0445%" height="15" fill="rgb(254,125,32)" fg:x="537" fg:w="5"/><text x="5.0340%" y="847.50"></text></g><g><title>stress_test`regex::builders::Builder::build_one_string (5 samples, 0.04%)</title><rect x="4.7840%" y="821" width="0.0445%" height="15" fill="rgb(253,97,22)" fg:x="537" fg:w="5"/><text x="5.0340%" y="831.50"></text></g><g><title>stress_test`regex_automata::meta::regex::Builder::build (5 samples, 0.04%)</title><rect x="4.7840%" y="805" width="0.0445%" height="15" fill="rgb(241,101,14)" fg:x="537" fg:w="5"/><text x="5.0340%" y="815.50"></text></g><g><title>stress_test`&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build (9 samples, 0.08%)</title><rect x="4.7751%" y="1045" width="0.0802%" height="15" fill="rgb(238,103,29)" fg:x="536" fg:w="9"/><text x="5.0251%" y="1055.50"></text></g><g><title>stress_test`wgpu::Instance::request_adapter (2 samples, 0.02%)</title><rect x="4.8374%" y="1029" width="0.0178%" height="15" fill="rgb(233,195,47)" fg:x="543" fg:w="2"/><text x="5.0874%" y="1039.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (2 samples, 0.02%)</title><rect x="4.8374%" y="1013" width="0.0178%" height="15" fill="rgb(246,218,30)" fg:x="543" fg:w="2"/><text x="5.0874%" y="1023.50"></text></g><g><title>stress_test`wgpu_core::instance::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter (2 samples, 0.02%)</title><rect x="4.8374%" y="997" width="0.0178%" height="15" fill="rgb(219,145,47)" fg:x="543" fg:w="2"/><text x="5.0874%" y="1007.50"></text></g><g><title>stress_test`wgpu_core::instance::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::request_adapter::gather (2 samples, 0.02%)</title><rect x="4.8374%" y="981" width="0.0178%" height="15" fill="rgb(243,12,26)" fg:x="543" fg:w="2"/><text x="5.0874%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu_hal::metal::Instance as wgpu_hal::Instance&lt;wgpu_hal::metal::Api&gt;&gt;::enumerate_adapters (2 samples, 0.02%)</title><rect x="4.8374%" y="965" width="0.0178%" height="15" fill="rgb(214,87,16)" fg:x="543" fg:w="2"/><text x="5.0874%" y="975.50"></text></g><g><title>stress_test`metal::device::Device::all (2 samples, 0.02%)</title><rect x="4.8374%" y="949" width="0.0178%" height="15" fill="rgb(208,99,42)" fg:x="543" fg:w="2"/><text x="5.0874%" y="959.50"></text></g><g><title>Metal`0x7ff81c3a389e (2 samples, 0.02%)</title><rect x="4.8374%" y="933" width="0.0178%" height="15" fill="rgb(253,99,2)" fg:x="543" fg:w="2"/><text x="5.0874%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="4.8374%" y="917" width="0.0178%" height="15" fill="rgb(220,168,23)" fg:x="543" fg:w="2"/><text x="5.0874%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="4.8374%" y="901" width="0.0178%" height="15" fill="rgb(242,38,24)" fg:x="543" fg:w="2"/><text x="5.0874%" y="911.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (2 samples, 0.02%)</title><rect x="4.8731%" y="885" width="0.0178%" height="15" fill="rgb(225,182,9)" fg:x="547" fg:w="2"/><text x="5.1231%" y="895.50"></text></g><g><title>AppKit`+[NSAppearance _darkAquaAppearance] (2 samples, 0.02%)</title><rect x="4.8731%" y="869" width="0.0178%" height="15" fill="rgb(243,178,37)" fg:x="547" fg:w="2"/><text x="5.1231%" y="879.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preferences_load (3 samples, 0.03%)</title><rect x="4.8909%" y="773" width="0.0267%" height="15" fill="rgb(232,139,19)" fg:x="549" fg:w="3"/><text x="5.1409%" y="783.50"></text></g><g><title>libsystem_trace.dylib`_os_trace_read_plist_at (2 samples, 0.02%)</title><rect x="4.8998%" y="757" width="0.0178%" height="15" fill="rgb(225,201,24)" fg:x="550" fg:w="2"/><text x="5.1498%" y="767.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (6 samples, 0.05%)</title><rect x="4.8731%" y="981" width="0.0535%" height="15" fill="rgb(221,47,46)" fg:x="547" fg:w="6"/><text x="5.1231%" y="991.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (6 samples, 0.05%)</title><rect x="4.8731%" y="965" width="0.0535%" height="15" fill="rgb(249,23,13)" fg:x="547" fg:w="6"/><text x="5.1231%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (6 samples, 0.05%)</title><rect x="4.8731%" y="949" width="0.0535%" height="15" fill="rgb(219,9,5)" fg:x="547" fg:w="6"/><text x="5.1231%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.05%)</title><rect x="4.8731%" y="933" width="0.0535%" height="15" fill="rgb(254,171,16)" fg:x="547" fg:w="6"/><text x="5.1231%" y="943.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (6 samples, 0.05%)</title><rect x="4.8731%" y="917" width="0.0535%" height="15" fill="rgb(230,171,20)" fg:x="547" fg:w="6"/><text x="5.1231%" y="927.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (6 samples, 0.05%)</title><rect x="4.8731%" y="901" width="0.0535%" height="15" fill="rgb(210,71,41)" fg:x="547" fg:w="6"/><text x="5.1231%" y="911.50"></text></g><g><title>AppKit`_NSIsMenuBarDark (4 samples, 0.04%)</title><rect x="4.8909%" y="885" width="0.0356%" height="15" fill="rgb(206,173,20)" fg:x="549" fg:w="4"/><text x="5.1409%" y="895.50"></text></g><g><title>AppKit`__AppKitLogAppearance (4 samples, 0.04%)</title><rect x="4.8909%" y="869" width="0.0356%" height="15" fill="rgb(233,88,34)" fg:x="549" fg:w="4"/><text x="5.1409%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.04%)</title><rect x="4.8909%" y="853" width="0.0356%" height="15" fill="rgb(223,209,46)" fg:x="549" fg:w="4"/><text x="5.1409%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.04%)</title><rect x="4.8909%" y="837" width="0.0356%" height="15" fill="rgb(250,43,18)" fg:x="549" fg:w="4"/><text x="5.1409%" y="847.50"></text></g><g><title>AppKit`__createAllLogObjects_block_invoke (4 samples, 0.04%)</title><rect x="4.8909%" y="821" width="0.0356%" height="15" fill="rgb(208,13,10)" fg:x="549" fg:w="4"/><text x="5.1409%" y="831.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (4 samples, 0.04%)</title><rect x="4.8909%" y="805" width="0.0356%" height="15" fill="rgb(212,200,36)" fg:x="549" fg:w="4"/><text x="5.1409%" y="815.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preferences_refresh (4 samples, 0.04%)</title><rect x="4.8909%" y="789" width="0.0356%" height="15" fill="rgb(225,90,30)" fg:x="549" fg:w="4"/><text x="5.1409%" y="799.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (2 samples, 0.02%)</title><rect x="4.9265%" y="981" width="0.0178%" height="15" fill="rgb(236,182,39)" fg:x="553" fg:w="2"/><text x="5.1765%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="4.9265%" y="965" width="0.0178%" height="15" fill="rgb(212,144,35)" fg:x="553" fg:w="2"/><text x="5.1765%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="4.9265%" y="949" width="0.0178%" height="15" fill="rgb(228,63,44)" fg:x="553" fg:w="2"/><text x="5.1765%" y="959.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (2 samples, 0.02%)</title><rect x="4.9265%" y="933" width="0.0178%" height="15" fill="rgb(228,109,6)" fg:x="553" fg:w="2"/><text x="5.1765%" y="943.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (2 samples, 0.02%)</title><rect x="4.9265%" y="917" width="0.0178%" height="15" fill="rgb(238,117,24)" fg:x="553" fg:w="2"/><text x="5.1765%" y="927.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (2 samples, 0.02%)</title><rect x="4.9265%" y="901" width="0.0178%" height="15" fill="rgb(242,26,26)" fg:x="553" fg:w="2"/><text x="5.1765%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="4.9265%" y="885" width="0.0178%" height="15" fill="rgb(221,92,48)" fg:x="553" fg:w="2"/><text x="5.1765%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="4.9265%" y="869" width="0.0178%" height="15" fill="rgb(209,209,32)" fg:x="553" fg:w="2"/><text x="5.1765%" y="879.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (2 samples, 0.02%)</title><rect x="4.9265%" y="853" width="0.0178%" height="15" fill="rgb(221,70,22)" fg:x="553" fg:w="2"/><text x="5.1765%" y="863.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (2 samples, 0.02%)</title><rect x="4.9265%" y="837" width="0.0178%" height="15" fill="rgb(248,145,5)" fg:x="553" fg:w="2"/><text x="5.1765%" y="847.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (2 samples, 0.02%)</title><rect x="4.9265%" y="821" width="0.0178%" height="15" fill="rgb(226,116,26)" fg:x="553" fg:w="2"/><text x="5.1765%" y="831.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (2 samples, 0.02%)</title><rect x="4.9265%" y="805" width="0.0178%" height="15" fill="rgb(244,5,17)" fg:x="553" fg:w="2"/><text x="5.1765%" y="815.50"></text></g><g><title>SkyLight`0x7ff817bc6252 (2 samples, 0.02%)</title><rect x="4.9621%" y="837" width="0.0178%" height="15" fill="rgb(252,159,33)" fg:x="557" fg:w="2"/><text x="5.2121%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="4.9621%" y="821" width="0.0178%" height="15" fill="rgb(206,71,0)" fg:x="557" fg:w="2"/><text x="5.2121%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="4.9621%" y="805" width="0.0178%" height="15" fill="rgb(233,118,54)" fg:x="557" fg:w="2"/><text x="5.2121%" y="815.50"></text></g><g><title>HIToolbox`IsMenuBarVisible (5 samples, 0.04%)</title><rect x="4.9621%" y="965" width="0.0445%" height="15" fill="rgb(234,83,48)" fg:x="557" fg:w="5"/><text x="5.2121%" y="975.50"></text></g><g><title>HIToolbox`GetUserSpaceMenuBar() (5 samples, 0.04%)</title><rect x="4.9621%" y="949" width="0.0445%" height="15" fill="rgb(228,3,54)" fg:x="557" fg:w="5"/><text x="5.2121%" y="959.50"></text></g><g><title>HIToolbox`MenuBarInstance::MenuBarInstance (5 samples, 0.04%)</title><rect x="4.9621%" y="933" width="0.0445%" height="15" fill="rgb(226,155,13)" fg:x="557" fg:w="5"/><text x="5.2121%" y="943.50"></text></g><g><title>HIToolbox`MBWindows::Get (5 samples, 0.04%)</title><rect x="4.9621%" y="917" width="0.0445%" height="15" fill="rgb(241,28,37)" fg:x="557" fg:w="5"/><text x="5.2121%" y="927.50"></text></g><g><title>HIToolbox`MBWindows::MBWindows (5 samples, 0.04%)</title><rect x="4.9621%" y="901" width="0.0445%" height="15" fill="rgb(233,93,10)" fg:x="557" fg:w="5"/><text x="5.2121%" y="911.50"></text></g><g><title>HIToolbox`RegisterForDisplayConfigChangeNotificationsIfNecessary (5 samples, 0.04%)</title><rect x="4.9621%" y="885" width="0.0445%" height="15" fill="rgb(225,113,19)" fg:x="557" fg:w="5"/><text x="5.2121%" y="895.50"></text></g><g><title>HIToolbox`RegisterCallbackInternal(unsigned int, void (*)(unsigned int, void*, void*), unsigned int, void*, unsigned int) (5 samples, 0.04%)</title><rect x="4.9621%" y="869" width="0.0445%" height="15" fill="rgb(241,2,18)" fg:x="557" fg:w="5"/><text x="5.2121%" y="879.50"></text></g><g><title>SkyLight`0x7ff817bc888d (5 samples, 0.04%)</title><rect x="4.9621%" y="853" width="0.0445%" height="15" fill="rgb(228,207,21)" fg:x="557" fg:w="5"/><text x="5.2121%" y="863.50"></text></g><g><title>SkyLight`0x7ff817bc63ee (3 samples, 0.03%)</title><rect x="4.9800%" y="837" width="0.0267%" height="15" fill="rgb(213,211,35)" fg:x="559" fg:w="3"/><text x="5.2300%" y="847.50"></text></g><g><title>LaunchServices`0x7ff8131fd12f (2 samples, 0.02%)</title><rect x="5.0245%" y="901" width="0.0178%" height="15" fill="rgb(209,83,10)" fg:x="564" fg:w="2"/><text x="5.2745%" y="911.50"></text></g><g><title>AppKit`_NSInitializeAppContext (11 samples, 0.10%)</title><rect x="4.9532%" y="981" width="0.0980%" height="15" fill="rgb(209,164,1)" fg:x="556" fg:w="11"/><text x="5.2032%" y="991.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (5 samples, 0.04%)</title><rect x="5.0067%" y="965" width="0.0445%" height="15" fill="rgb(213,184,43)" fg:x="562" fg:w="5"/><text x="5.2567%" y="975.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (5 samples, 0.04%)</title><rect x="5.0067%" y="949" width="0.0445%" height="15" fill="rgb(231,61,34)" fg:x="562" fg:w="5"/><text x="5.2567%" y="959.50"></text></g><g><title>HIServices`0x7ff818570d86 (5 samples, 0.04%)</title><rect x="5.0067%" y="933" width="0.0445%" height="15" fill="rgb(235,75,3)" fg:x="562" fg:w="5"/><text x="5.2567%" y="943.50"></text></g><g><title>HIServices`0x7ff8185728dd (4 samples, 0.04%)</title><rect x="5.0156%" y="917" width="0.0356%" height="15" fill="rgb(220,106,47)" fg:x="563" fg:w="4"/><text x="5.2656%" y="927.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (24 samples, 0.21%)</title><rect x="4.8641%" y="1013" width="0.2138%" height="15" fill="rgb(210,196,33)" fg:x="546" fg:w="24"/><text x="5.1141%" y="1023.50"></text></g><g><title>AppKit`-[NSApplication init] (24 samples, 0.21%)</title><rect x="4.8641%" y="997" width="0.2138%" height="15" fill="rgb(229,154,42)" fg:x="546" fg:w="24"/><text x="5.1141%" y="1007.50"></text></g><g><title>dyld`start (570 samples, 5.08%)</title><rect x="0.0089%" y="1173" width="5.0780%" height="15" fill="rgb(228,114,26)" fg:x="1" fg:w="570"/><text x="0.2589%" y="1183.50">dyld`s..</text></g><g><title>stress_test`main (570 samples, 5.08%)</title><rect x="0.0089%" y="1157" width="5.0780%" height="15" fill="rgb(208,144,1)" fg:x="1" fg:w="570"/><text x="0.2589%" y="1167.50">stress..</text></g><g><title>stress_test`std::rt::lang_start_internal (570 samples, 5.08%)</title><rect x="0.0089%" y="1141" width="5.0780%" height="15" fill="rgb(239,112,37)" fg:x="1" fg:w="570"/><text x="0.2589%" y="1151.50">stress..</text></g><g><title>stress_test`std::rt::lang_start::_{{closure}} (570 samples, 5.08%)</title><rect x="0.0089%" y="1125" width="5.0780%" height="15" fill="rgb(210,96,50)" fg:x="1" fg:w="570"/><text x="0.2589%" y="1135.50">stress..</text></g><g><title>stress_test`std::sys_common::backtrace::__rust_begin_short_backtrace (570 samples, 5.08%)</title><rect x="0.0089%" y="1109" width="5.0780%" height="15" fill="rgb(222,178,2)" fg:x="1" fg:w="570"/><text x="0.2589%" y="1119.50">stress..</text></g><g><title>stress_test`stress_test::main (570 samples, 5.08%)</title><rect x="0.0089%" y="1093" width="5.0780%" height="15" fill="rgb(226,74,18)" fg:x="1" fg:w="570"/><text x="0.2589%" y="1103.50">stress..</text></g><g><title>stress_test`bevy_app::plugin_group::PluginGroupBuilder::finish (96 samples, 0.86%)</title><rect x="4.2316%" y="1077" width="0.8552%" height="15" fill="rgb(225,67,54)" fg:x="475" fg:w="96"/><text x="4.4816%" y="1087.50"></text></g><g><title>stress_test`bevy_app::app::App::add_boxed_plugin (96 samples, 0.86%)</title><rect x="4.2316%" y="1061" width="0.8552%" height="15" fill="rgb(251,92,32)" fg:x="475" fg:w="96"/><text x="4.4816%" y="1071.50"></text></g><g><title>stress_test`&lt;bevy_winit::WinitPlugin as bevy_app::plugin::Plugin&gt;::build (25 samples, 0.22%)</title><rect x="4.8641%" y="1045" width="0.2227%" height="15" fill="rgb(228,149,22)" fg:x="546" fg:w="25"/><text x="5.1141%" y="1055.50"></text></g><g><title>stress_test`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (25 samples, 0.22%)</title><rect x="4.8641%" y="1029" width="0.2227%" height="15" fill="rgb(243,54,13)" fg:x="546" fg:w="25"/><text x="5.1141%" y="1039.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (3 samples, 0.03%)</title><rect x="5.0869%" y="1173" width="0.0267%" height="15" fill="rgb(243,180,28)" fg:x="571" fg:w="3"/><text x="5.3369%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (41 samples, 0.37%)</title><rect x="5.1403%" y="1157" width="0.3653%" height="15" fill="rgb(208,167,24)" fg:x="577" fg:w="41"/><text x="5.3903%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.04%)</title><rect x="5.5412%" y="1093" width="0.0356%" height="15" fill="rgb(245,73,45)" fg:x="622" fg:w="4"/><text x="5.7912%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (3 samples, 0.03%)</title><rect x="5.5501%" y="1077" width="0.0267%" height="15" fill="rgb(237,203,48)" fg:x="623" fg:w="3"/><text x="5.8001%" y="1087.50"></text></g><g><title>Metal`0x7ff81c3c6ca6 (2,063 samples, 18.38%)</title><rect x="5.6303%" y="1045" width="18.3786%" height="15" fill="rgb(211,197,16)" fg:x="632" fg:w="2063"/><text x="5.8803%" y="1055.50">Metal`0x7ff81c3c6ca6</text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdQueue submitCommandBuffers:count:] (2,063 samples, 18.38%)</title><rect x="5.6303%" y="1029" width="18.3786%" height="15" fill="rgb(243,99,51)" fg:x="632" fg:w="2063"/><text x="5.8803%" y="1039.50">AMDMTLBronzeDriver`-[BronzeMt..</text></g><g><title>Metal`0x7ff81c3c7024 (2,062 samples, 18.37%)</title><rect x="5.6392%" y="1013" width="18.3697%" height="15" fill="rgb(215,123,29)" fg:x="633" fg:w="2062"/><text x="5.8892%" y="1023.50">Metal`0x7ff81c3c7024</text></g><g><title>IOAccelerator`0x7ff81c39c0ae (2,062 samples, 18.37%)</title><rect x="5.6392%" y="997" width="18.3697%" height="15" fill="rgb(239,186,37)" fg:x="633" fg:w="2062"/><text x="5.8892%" y="1007.50">IOAccelerator`0x7ff81c39c0ae</text></g><g><title>IOKit`0x7ff815d1a3f1 (2,062 samples, 18.37%)</title><rect x="5.6392%" y="981" width="18.3697%" height="15" fill="rgb(252,136,39)" fg:x="633" fg:w="2062"/><text x="5.8892%" y="991.50">IOKit`0x7ff815d1a3f1</text></g><g><title>IOKit`0x7ff815d1a5ea (2,062 samples, 18.37%)</title><rect x="5.6392%" y="965" width="18.3697%" height="15" fill="rgb(223,213,32)" fg:x="633" fg:w="2062"/><text x="5.8892%" y="975.50">IOKit`0x7ff815d1a5ea</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2,062 samples, 18.37%)</title><rect x="5.6392%" y="949" width="18.3697%" height="15" fill="rgb(233,115,5)" fg:x="633" fg:w="2062"/><text x="5.8892%" y="959.50">libsystem_kernel.dylib`mach_m..</text></g><g><title>Metal`0x7ff81c3c73f0 (3 samples, 0.03%)</title><rect x="24.0178%" y="965" width="0.0267%" height="15" fill="rgb(207,226,44)" fg:x="2696" fg:w="3"/><text x="24.2678%" y="975.50"></text></g><g><title>Metal`0x7ff81c4e4b2e (3 samples, 0.03%)</title><rect x="24.0178%" y="949" width="0.0267%" height="15" fill="rgb(208,126,0)" fg:x="2696" fg:w="3"/><text x="24.2678%" y="959.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (3 samples, 0.03%)</title><rect x="24.0178%" y="933" width="0.0267%" height="15" fill="rgb(244,66,21)" fg:x="2696" fg:w="3"/><text x="24.2678%" y="943.50"></text></g><g><title>Metal`0x7ff81c3c734a (4 samples, 0.04%)</title><rect x="24.0178%" y="981" width="0.0356%" height="15" fill="rgb(222,97,12)" fg:x="2696" fg:w="4"/><text x="24.2678%" y="991.50"></text></g><g><title>Metal`0x7ff81c3c79ec (3 samples, 0.03%)</title><rect x="24.0535%" y="949" width="0.0267%" height="15" fill="rgb(219,213,19)" fg:x="2700" fg:w="3"/><text x="24.3035%" y="959.50"></text></g><g><title>Metal`0x7ff81c3c7a89 (2 samples, 0.02%)</title><rect x="24.0624%" y="933" width="0.0178%" height="15" fill="rgb(252,169,30)" fg:x="2701" fg:w="2"/><text x="24.3124%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.03%)</title><rect x="24.0802%" y="933" width="0.0267%" height="15" fill="rgb(206,32,51)" fg:x="2703" fg:w="3"/><text x="24.3302%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.02%)</title><rect x="24.0891%" y="917" width="0.0178%" height="15" fill="rgb(250,172,42)" fg:x="2704" fg:w="2"/><text x="24.3391%" y="927.50"></text></g><g><title>Metal`0x7ff81c3c7590 (7 samples, 0.06%)</title><rect x="24.0535%" y="981" width="0.0624%" height="15" fill="rgb(209,34,43)" fg:x="2700" fg:w="7"/><text x="24.3035%" y="991.50"></text></g><g><title>Metal`0x7ff81c3c76c6 (7 samples, 0.06%)</title><rect x="24.0535%" y="965" width="0.0624%" height="15" fill="rgb(223,11,35)" fg:x="2700" fg:w="7"/><text x="24.3035%" y="975.50"></text></g><g><title>Metal`0x7ff81c3c7ceb (4 samples, 0.04%)</title><rect x="24.0802%" y="949" width="0.0356%" height="15" fill="rgb(251,219,26)" fg:x="2703" fg:w="4"/><text x="24.3302%" y="959.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (3 samples, 0.03%)</title><rect x="24.1158%" y="965" width="0.0267%" height="15" fill="rgb(231,119,3)" fg:x="2707" fg:w="3"/><text x="24.3658%" y="975.50"></text></g><g><title>IOAccelerator`0x7ff81c39c10d (15 samples, 0.13%)</title><rect x="24.0178%" y="997" width="0.1336%" height="15" fill="rgb(216,97,11)" fg:x="2696" fg:w="15"/><text x="24.2678%" y="1007.50"></text></g><g><title>Metal`0x7ff81c3c75ba (4 samples, 0.04%)</title><rect x="24.1158%" y="981" width="0.0356%" height="15" fill="rgb(223,59,9)" fg:x="2707" fg:w="4"/><text x="24.3658%" y="991.50"></text></g><g><title>IOAccelerator`0x7ff81c39c115 (3 samples, 0.03%)</title><rect x="24.1514%" y="997" width="0.0267%" height="15" fill="rgb(233,93,31)" fg:x="2711" fg:w="3"/><text x="24.4014%" y="1007.50"></text></g><g><title>IOKit`0x7ff815d1c690 (19 samples, 0.17%)</title><rect x="24.0178%" y="1029" width="0.1693%" height="15" fill="rgb(239,81,33)" fg:x="2696" fg:w="19"/><text x="24.2678%" y="1039.50"></text></g><g><title>IOKit`0x7ff815d1c80d (19 samples, 0.17%)</title><rect x="24.0178%" y="1013" width="0.1693%" height="15" fill="rgb(213,120,34)" fg:x="2696" fg:w="19"/><text x="24.2678%" y="1023.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (33 samples, 0.29%)</title><rect x="24.0178%" y="1045" width="0.2940%" height="15" fill="rgb(243,49,53)" fg:x="2696" fg:w="33"/><text x="24.2678%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (14 samples, 0.12%)</title><rect x="24.1871%" y="1029" width="0.1247%" height="15" fill="rgb(247,216,33)" fg:x="2715" fg:w="14"/><text x="24.4371%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (14 samples, 0.12%)</title><rect x="24.1871%" y="1013" width="0.1247%" height="15" fill="rgb(226,26,14)" fg:x="2715" fg:w="14"/><text x="24.4371%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (14 samples, 0.12%)</title><rect x="24.1871%" y="997" width="0.1247%" height="15" fill="rgb(215,49,53)" fg:x="2715" fg:w="14"/><text x="24.4371%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (2,103 samples, 18.73%)</title><rect x="5.5947%" y="1093" width="18.7350%" height="15" fill="rgb(245,162,40)" fg:x="628" fg:w="2103"/><text x="5.8447%" y="1103.50">libdispatch.dylib`_dispatch_s..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (2,102 samples, 18.73%)</title><rect x="5.6036%" y="1077" width="18.7261%" height="15" fill="rgb(229,68,17)" fg:x="629" fg:w="2102"/><text x="5.8536%" y="1087.50">libdispatch.dylib`_dispatch_c..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2,102 samples, 18.73%)</title><rect x="5.6036%" y="1061" width="18.7261%" height="15" fill="rgb(213,182,10)" fg:x="629" fg:w="2102"/><text x="5.8536%" y="1071.50">libdispatch.dylib`_dispatch_c..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (2,110 samples, 18.80%)</title><rect x="5.5412%" y="1109" width="18.7973%" height="15" fill="rgb(245,125,30)" fg:x="622" fg:w="2110"/><text x="5.7912%" y="1119.50">libdispatch.dylib`_dispatch_l..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (2,159 samples, 19.23%)</title><rect x="5.1136%" y="1173" width="19.2339%" height="15" fill="rgb(232,202,2)" fg:x="574" fg:w="2159"/><text x="5.3636%" y="1183.50">libsystem_pthread.dylib`start_..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (2,115 samples, 18.84%)</title><rect x="5.5056%" y="1157" width="18.8419%" height="15" fill="rgb(237,140,51)" fg:x="618" fg:w="2115"/><text x="5.7556%" y="1167.50">libsystem_pthread.dylib`_pthr..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (2,113 samples, 18.82%)</title><rect x="5.5234%" y="1141" width="18.8241%" height="15" fill="rgb(236,157,25)" fg:x="620" fg:w="2113"/><text x="5.7734%" y="1151.50">libdispatch.dylib`_dispatch_w..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (2,111 samples, 18.81%)</title><rect x="5.5412%" y="1125" width="18.8062%" height="15" fill="rgb(219,209,0)" fg:x="622" fg:w="2111"/><text x="5.7912%" y="1135.50">libdispatch.dylib`_dispatch_l..</text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.02%)</title><rect x="24.3920%" y="1045" width="0.0178%" height="15" fill="rgb(240,116,54)" fg:x="2738" fg:w="2"/><text x="24.6420%" y="1055.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (2 samples, 0.02%)</title><rect x="24.3920%" y="1029" width="0.0178%" height="15" fill="rgb(216,10,36)" fg:x="2738" fg:w="2"/><text x="24.6420%" y="1039.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (2 samples, 0.02%)</title><rect x="24.3920%" y="1013" width="0.0178%" height="15" fill="rgb(222,72,44)" fg:x="2738" fg:w="2"/><text x="24.6420%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (2 samples, 0.02%)</title><rect x="24.3920%" y="997" width="0.0178%" height="15" fill="rgb(232,159,9)" fg:x="2738" fg:w="2"/><text x="24.6420%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="24.3920%" y="981" width="0.0178%" height="15" fill="rgb(210,39,32)" fg:x="2738" fg:w="2"/><text x="24.6420%" y="991.50"></text></g><g><title>CoreFoundation`CFRunLoopPerformBlock (2 samples, 0.02%)</title><rect x="24.4187%" y="1013" width="0.0178%" height="15" fill="rgb(216,194,45)" fg:x="2741" fg:w="2"/><text x="24.6687%" y="1023.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (3 samples, 0.03%)</title><rect x="24.4365%" y="1013" width="0.0267%" height="15" fill="rgb(218,18,35)" fg:x="2743" fg:w="3"/><text x="24.6865%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.03%)</title><rect x="24.4365%" y="997" width="0.0267%" height="15" fill="rgb(207,83,51)" fg:x="2743" fg:w="3"/><text x="24.6865%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.03%)</title><rect x="24.4365%" y="981" width="0.0267%" height="15" fill="rgb(225,63,43)" fg:x="2743" fg:w="3"/><text x="24.6865%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.03%)</title><rect x="24.4365%" y="965" width="0.0267%" height="15" fill="rgb(207,57,36)" fg:x="2743" fg:w="3"/><text x="24.6865%" y="975.50"></text></g><g><title>SkyLight`0x7ff81797e67c (18 samples, 0.16%)</title><rect x="24.4811%" y="981" width="0.1604%" height="15" fill="rgb(216,99,33)" fg:x="2748" fg:w="18"/><text x="24.7311%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (18 samples, 0.16%)</title><rect x="24.4811%" y="965" width="0.1604%" height="15" fill="rgb(225,42,16)" fg:x="2748" fg:w="18"/><text x="24.7311%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (18 samples, 0.16%)</title><rect x="24.4811%" y="949" width="0.1604%" height="15" fill="rgb(220,201,45)" fg:x="2748" fg:w="18"/><text x="24.7311%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (18 samples, 0.16%)</title><rect x="24.4811%" y="933" width="0.1604%" height="15" fill="rgb(225,33,4)" fg:x="2748" fg:w="18"/><text x="24.7311%" y="943.50"></text></g><g><title>IOKit`0x7ff815d1e190 (2 samples, 0.02%)</title><rect x="24.6682%" y="901" width="0.0178%" height="15" fill="rgb(224,33,50)" fg:x="2769" fg:w="2"/><text x="24.9182%" y="911.50"></text></g><g><title>SkyLight`0x7ff81797f4bd (5 samples, 0.04%)</title><rect x="24.6503%" y="949" width="0.0445%" height="15" fill="rgb(246,198,51)" fg:x="2767" fg:w="5"/><text x="24.9003%" y="959.50"></text></g><g><title>SkyLight`0x7ff817ab8c80 (4 samples, 0.04%)</title><rect x="24.6592%" y="933" width="0.0356%" height="15" fill="rgb(205,22,4)" fg:x="2768" fg:w="4"/><text x="24.9092%" y="943.50"></text></g><g><title>SkyLight`0x7ff817ab96ea (3 samples, 0.03%)</title><rect x="24.6682%" y="917" width="0.0267%" height="15" fill="rgb(206,3,8)" fg:x="2769" fg:w="3"/><text x="24.9182%" y="927.50"></text></g><g><title>SkyLight`0x7ff817c98f77 (6 samples, 0.05%)</title><rect x="24.6503%" y="965" width="0.0535%" height="15" fill="rgb(251,23,15)" fg:x="2767" fg:w="6"/><text x="24.9003%" y="975.50"></text></g><g><title>SkyLight`0x7ff81797e997 (8 samples, 0.07%)</title><rect x="24.6414%" y="981" width="0.0713%" height="15" fill="rgb(252,88,28)" fg:x="2766" fg:w="8"/><text x="24.8914%" y="991.50"></text></g><g><title>SkyLight`0x7ff817c997f9 (31 samples, 0.28%)</title><rect x="24.4811%" y="997" width="0.2762%" height="15" fill="rgb(212,127,14)" fg:x="2748" fg:w="31"/><text x="24.7311%" y="1007.50"></text></g><g><title>SkyLight`0x7ff81797f326 (4 samples, 0.04%)</title><rect x="24.7216%" y="981" width="0.0356%" height="15" fill="rgb(247,145,37)" fg:x="2775" fg:w="4"/><text x="24.9716%" y="991.50"></text></g><g><title>SkyLight`0x7ff817c9f27d (4 samples, 0.04%)</title><rect x="24.7216%" y="965" width="0.0356%" height="15" fill="rgb(209,117,53)" fg:x="2775" fg:w="4"/><text x="24.9716%" y="975.50"></text></g><g><title>SkyLight`0x7ff817c9f2b2 (4 samples, 0.04%)</title><rect x="24.7216%" y="949" width="0.0356%" height="15" fill="rgb(212,90,42)" fg:x="2775" fg:w="4"/><text x="24.9716%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.04%)</title><rect x="24.7216%" y="933" width="0.0356%" height="15" fill="rgb(218,164,37)" fg:x="2775" fg:w="4"/><text x="24.9716%" y="943.50"></text></g><g><title>SkyLight`0x7ff817ac9b3f (3 samples, 0.03%)</title><rect x="24.7572%" y="965" width="0.0267%" height="15" fill="rgb(246,65,34)" fg:x="2779" fg:w="3"/><text x="25.0072%" y="975.50"></text></g><g><title>SkyLight`0x7ff817ac8782 (3 samples, 0.03%)</title><rect x="24.7572%" y="949" width="0.0267%" height="15" fill="rgb(231,100,33)" fg:x="2779" fg:w="3"/><text x="25.0072%" y="959.50"></text></g><g><title>libsystem_c.dylib`0x7ff812bb20d4 (3 samples, 0.03%)</title><rect x="24.7572%" y="933" width="0.0267%" height="15" fill="rgb(228,126,14)" fg:x="2779" fg:w="3"/><text x="25.0072%" y="943.50"></text></g><g><title>libsystem_c.dylib`0x7ff812bb2020 (3 samples, 0.03%)</title><rect x="24.7572%" y="917" width="0.0267%" height="15" fill="rgb(215,173,21)" fg:x="2779" fg:w="3"/><text x="25.0072%" y="927.50"></text></g><g><title>libsystem_c.dylib`0x7ff812bd47ce (3 samples, 0.03%)</title><rect x="24.7572%" y="901" width="0.0267%" height="15" fill="rgb(210,6,40)" fg:x="2779" fg:w="3"/><text x="25.0072%" y="911.50"></text></g><g><title>SkyLight`0x7ff817ac7da8 (4 samples, 0.04%)</title><rect x="24.7572%" y="981" width="0.0356%" height="15" fill="rgb(212,48,18)" fg:x="2779" fg:w="4"/><text x="25.0072%" y="991.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (44 samples, 0.39%)</title><rect x="24.4098%" y="1029" width="0.3920%" height="15" fill="rgb(230,214,11)" fg:x="2740" fg:w="44"/><text x="24.6598%" y="1039.50"></text></g><g><title>SkyLight`0x7ff817ab892c (38 samples, 0.34%)</title><rect x="24.4633%" y="1013" width="0.3385%" height="15" fill="rgb(254,105,39)" fg:x="2746" fg:w="38"/><text x="24.7133%" y="1023.50"></text></g><g><title>SkyLight`0x7ff817c99820 (5 samples, 0.04%)</title><rect x="24.7572%" y="997" width="0.0445%" height="15" fill="rgb(245,158,5)" fg:x="2779" fg:w="5"/><text x="25.0072%" y="1007.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (48 samples, 0.43%)</title><rect x="24.3831%" y="1093" width="0.4276%" height="15" fill="rgb(249,208,11)" fg:x="2737" fg:w="48"/><text x="24.6331%" y="1103.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (48 samples, 0.43%)</title><rect x="24.3831%" y="1077" width="0.4276%" height="15" fill="rgb(210,39,28)" fg:x="2737" fg:w="48"/><text x="24.6331%" y="1087.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (48 samples, 0.43%)</title><rect x="24.3831%" y="1061" width="0.4276%" height="15" fill="rgb(211,56,53)" fg:x="2737" fg:w="48"/><text x="24.6331%" y="1071.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (45 samples, 0.40%)</title><rect x="24.4098%" y="1045" width="0.4009%" height="15" fill="rgb(226,201,30)" fg:x="2740" fg:w="45"/><text x="24.6598%" y="1055.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (7 samples, 0.06%)</title><rect x="24.8107%" y="1093" width="0.0624%" height="15" fill="rgb(239,101,34)" fg:x="2785" fg:w="7"/><text x="25.0607%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (6 samples, 0.05%)</title><rect x="24.8196%" y="1077" width="0.0535%" height="15" fill="rgb(226,209,5)" fg:x="2786" fg:w="6"/><text x="25.0696%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (6 samples, 0.05%)</title><rect x="24.8196%" y="1061" width="0.0535%" height="15" fill="rgb(250,105,47)" fg:x="2786" fg:w="6"/><text x="25.0696%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.05%)</title><rect x="24.8196%" y="1045" width="0.0535%" height="15" fill="rgb(230,72,3)" fg:x="2786" fg:w="6"/><text x="25.0696%" y="1055.50"></text></g><g><title>AppKit`_NSEventThread (59 samples, 0.53%)</title><rect x="24.3563%" y="1141" width="0.5256%" height="15" fill="rgb(232,218,39)" fg:x="2734" fg:w="59"/><text x="24.6063%" y="1151.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (59 samples, 0.53%)</title><rect x="24.3563%" y="1125" width="0.5256%" height="15" fill="rgb(248,166,6)" fg:x="2734" fg:w="59"/><text x="24.6063%" y="1135.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (59 samples, 0.53%)</title><rect x="24.3563%" y="1109" width="0.5256%" height="15" fill="rgb(247,89,20)" fg:x="2734" fg:w="59"/><text x="24.6063%" y="1119.50"></text></g><g><title>CoreAudio`0x7ff814e96699 (7 samples, 0.06%)</title><rect x="24.8998%" y="1109" width="0.0624%" height="15" fill="rgb(248,130,54)" fg:x="2795" fg:w="7"/><text x="25.1498%" y="1119.50"></text></g><g><title>CoreAudio`0x7ff814fac16d (7 samples, 0.06%)</title><rect x="24.8998%" y="1093" width="0.0624%" height="15" fill="rgb(234,196,4)" fg:x="2795" fg:w="7"/><text x="25.1498%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (7 samples, 0.06%)</title><rect x="24.8998%" y="1077" width="0.0624%" height="15" fill="rgb(250,143,31)" fg:x="2795" fg:w="7"/><text x="25.1498%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (7 samples, 0.06%)</title><rect x="24.8998%" y="1061" width="0.0624%" height="15" fill="rgb(211,110,34)" fg:x="2795" fg:w="7"/><text x="25.1498%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.04%)</title><rect x="24.9176%" y="1045" width="0.0445%" height="15" fill="rgb(215,124,48)" fg:x="2797" fg:w="5"/><text x="25.1676%" y="1055.50"></text></g><g><title>CoreAudio`0x7ff814e968c4 (2 samples, 0.02%)</title><rect x="24.9621%" y="1109" width="0.0178%" height="15" fill="rgb(216,46,13)" fg:x="2802" fg:w="2"/><text x="25.2121%" y="1119.50"></text></g><g><title>CoreAudio`0x7ff814e98508 (2 samples, 0.02%)</title><rect x="24.9621%" y="1093" width="0.0178%" height="15" fill="rgb(205,184,25)" fg:x="2802" fg:w="2"/><text x="25.2121%" y="1103.50"></text></g><g><title>stress_test`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_render_callback::_{{closure}} (4 samples, 0.04%)</title><rect x="24.9889%" y="1045" width="0.0356%" height="15" fill="rgb(228,1,10)" fg:x="2805" fg:w="4"/><text x="25.2389%" y="1055.50"></text></g><g><title>stress_test`rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (3 samples, 0.03%)</title><rect x="24.9978%" y="1029" width="0.0267%" height="15" fill="rgb(213,116,27)" fg:x="2806" fg:w="3"/><text x="25.2478%" y="1039.50"></text></g><g><title>CoreAudio`0x000000010e9a9470 (6 samples, 0.05%)</title><rect x="24.9800%" y="1077" width="0.0535%" height="15" fill="rgb(241,95,50)" fg:x="2804" fg:w="6"/><text x="25.2300%" y="1087.50"></text></g><g><title>CoreAudio`0x000000010e89ff04 (6 samples, 0.05%)</title><rect x="24.9800%" y="1061" width="0.0535%" height="15" fill="rgb(238,48,32)" fg:x="2804" fg:w="6"/><text x="25.2300%" y="1071.50"></text></g><g><title>CoreAudio`0x7ff81500493e (18 samples, 0.16%)</title><rect x="24.8820%" y="1141" width="0.1604%" height="15" fill="rgb(235,113,49)" fg:x="2793" fg:w="18"/><text x="25.1320%" y="1151.50"></text></g><g><title>CoreAudio`0x7ff814e95041 (18 samples, 0.16%)</title><rect x="24.8820%" y="1125" width="0.1604%" height="15" fill="rgb(205,127,43)" fg:x="2793" fg:w="18"/><text x="25.1320%" y="1135.50"></text></g><g><title>CoreAudio`0x7ff814e9750c (7 samples, 0.06%)</title><rect x="24.9800%" y="1109" width="0.0624%" height="15" fill="rgb(250,162,2)" fg:x="2804" fg:w="7"/><text x="25.2300%" y="1119.50"></text></g><g><title>CoreAudio`0x000000010e8a389e (7 samples, 0.06%)</title><rect x="24.9800%" y="1093" width="0.0624%" height="15" fill="rgb(220,13,41)" fg:x="2804" fg:w="7"/><text x="25.2300%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="25.0423%" y="1093" width="0.0178%" height="15" fill="rgb(249,221,25)" fg:x="2811" fg:w="2"/><text x="25.2923%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (25 samples, 0.22%)</title><rect x="25.1136%" y="885" width="0.2227%" height="15" fill="rgb(215,208,19)" fg:x="2819" fg:w="25"/><text x="25.3636%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`madvise (24 samples, 0.21%)</title><rect x="25.1225%" y="869" width="0.2138%" height="15" fill="rgb(236,175,2)" fg:x="2820" fg:w="24"/><text x="25.3725%" y="879.50"></text></g><g><title>stress_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="25.3363%" y="837" width="0.0178%" height="15" fill="rgb(241,52,2)" fg:x="2844" fg:w="2"/><text x="25.5863%" y="847.50"></text></g><g><title>stress_test`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.03%)</title><rect x="25.3363%" y="885" width="0.0267%" height="15" fill="rgb(248,140,14)" fg:x="2844" fg:w="3"/><text x="25.5863%" y="895.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::bind_group_drop (3 samples, 0.03%)</title><rect x="25.3363%" y="869" width="0.0267%" height="15" fill="rgb(253,22,42)" fg:x="2844" fg:w="3"/><text x="25.5863%" y="879.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::bind_group_drop (3 samples, 0.03%)</title><rect x="25.3363%" y="853" width="0.0267%" height="15" fill="rgb(234,61,47)" fg:x="2844" fg:w="3"/><text x="25.5863%" y="863.50"></text></g><g><title>stress_test`bevy_ecs::world::World::clear_entities (36 samples, 0.32%)</title><rect x="25.1047%" y="901" width="0.3207%" height="15" fill="rgb(208,226,15)" fg:x="2818" fg:w="36"/><text x="25.3547%" y="911.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;bevy_render::render_resource::storage_buffer::StorageBuffer&lt;bevy_pbr::render::light::GpuClusterOffsetsAndCountsStorage&gt;&gt; (7 samples, 0.06%)</title><rect x="25.3630%" y="885" width="0.0624%" height="15" fill="rgb(217,221,4)" fg:x="2847" fg:w="7"/><text x="25.6130%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (7 samples, 0.06%)</title><rect x="25.3630%" y="869" width="0.0624%" height="15" fill="rgb(212,174,34)" fg:x="2847" fg:w="7"/><text x="25.6130%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.06%)</title><rect x="25.3630%" y="853" width="0.0624%" height="15" fill="rgb(253,83,4)" fg:x="2847" fg:w="7"/><text x="25.6130%" y="863.50"></text></g><g><title>stress_test`bevy_ecs::entity::Entities::alloc_at_without_replacement (2 samples, 0.02%)</title><rect x="25.4521%" y="837" width="0.0178%" height="15" fill="rgb(250,195,49)" fg:x="2857" fg:w="2"/><text x="25.7021%" y="847.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.02%)</title><rect x="25.6214%" y="821" width="0.0178%" height="15" fill="rgb(241,192,25)" fg:x="2876" fg:w="2"/><text x="25.8714%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.07%)</title><rect x="25.6392%" y="821" width="0.0713%" height="15" fill="rgb(208,124,10)" fg:x="2878" fg:w="8"/><text x="25.8892%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.25%)</title><rect x="25.9688%" y="805" width="0.2494%" height="15" fill="rgb(222,33,0)" fg:x="2915" fg:w="28"/><text x="26.2188%" y="815.50"></text></g><g><title>stress_test`bevy_ecs::bundle::BundleSpawner::spawn_non_existent (73 samples, 0.65%)</title><rect x="25.7105%" y="821" width="0.6503%" height="15" fill="rgb(234,209,28)" fg:x="2886" fg:w="73"/><text x="25.9605%" y="831.50"></text></g><g><title>stress_test`bevy_ecs::storage::table::Table::allocate (16 samples, 0.14%)</title><rect x="26.2183%" y="805" width="0.1425%" height="15" fill="rgb(224,11,23)" fg:x="2943" fg:w="16"/><text x="26.4683%" y="815.50"></text></g><g><title>stress_test`bevy_ecs::world::World::insert_or_spawn_batch (109 samples, 0.97%)</title><rect x="25.4699%" y="837" width="0.9710%" height="15" fill="rgb(232,99,1)" fg:x="2859" fg:w="109"/><text x="25.7199%" y="847.50"></text></g><g><title>stress_test`bevy_ecs::entity::Entities::alloc_at_without_replacement (8 samples, 0.07%)</title><rect x="26.3697%" y="821" width="0.0713%" height="15" fill="rgb(237,95,45)" fg:x="2960" fg:w="8"/><text x="26.6197%" y="831.50"></text></g><g><title>stress_test`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (114 samples, 1.02%)</title><rect x="25.4343%" y="869" width="1.0156%" height="15" fill="rgb(208,109,11)" fg:x="2855" fg:w="114"/><text x="25.6843%" y="879.50"></text></g><g><title>stress_test`core::ops::function::FnOnce::call_once (113 samples, 1.01%)</title><rect x="25.4432%" y="853" width="1.0067%" height="15" fill="rgb(216,190,48)" fg:x="2856" fg:w="113"/><text x="25.6932%" y="863.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (116 samples, 1.03%)</title><rect x="25.4254%" y="901" width="1.0334%" height="15" fill="rgb(251,171,36)" fg:x="2854" fg:w="116"/><text x="25.6754%" y="911.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::apply_deferred (115 samples, 1.02%)</title><rect x="25.4343%" y="885" width="1.0245%" height="15" fill="rgb(230,62,22)" fg:x="2855" fg:w="115"/><text x="25.6843%" y="895.50"></text></g><g><title>stress_test`bevy_ecs::world::World::resource_scope (3 samples, 0.03%)</title><rect x="26.4588%" y="885" width="0.0267%" height="15" fill="rgb(225,114,35)" fg:x="2970" fg:w="3"/><text x="26.7088%" y="895.50"></text></g><g><title>stress_test`bevy_render::render_graph::graph::RenderGraph::update (2 samples, 0.02%)</title><rect x="26.4677%" y="869" width="0.0178%" height="15" fill="rgb(215,118,42)" fg:x="2971" fg:w="2"/><text x="26.7177%" y="879.50"></text></g><g><title>stress_test`bevy_render::render_graph::graph::RenderGraph::update (2 samples, 0.02%)</title><rect x="26.4677%" y="853" width="0.0178%" height="15" fill="rgb(243,119,21)" fg:x="2971" fg:w="2"/><text x="26.7177%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdBuffer commit] (3 samples, 0.03%)</title><rect x="27.5813%" y="805" width="0.0267%" height="15" fill="rgb(252,177,53)" fg:x="3096" fg:w="3"/><text x="27.8313%" y="815.50"></text></g><g><title>stress_test`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (5 samples, 0.04%)</title><rect x="27.5813%" y="837" width="0.0445%" height="15" fill="rgb(237,209,29)" fg:x="3096" fg:w="5"/><text x="27.8313%" y="847.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (5 samples, 0.04%)</title><rect x="27.5813%" y="821" width="0.0445%" height="15" fill="rgb(212,65,23)" fg:x="3096" fg:w="5"/><text x="27.8313%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.04%)</title><rect x="27.6347%" y="821" width="0.0445%" height="15" fill="rgb(230,222,46)" fg:x="3102" fg:w="5"/><text x="27.8847%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.04%)</title><rect x="27.6347%" y="805" width="0.0445%" height="15" fill="rgb(215,135,32)" fg:x="3102" fg:w="5"/><text x="27.8847%" y="815.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::metal::Api&gt;&gt; (35 samples, 0.31%)</title><rect x="27.6258%" y="837" width="0.3118%" height="15" fill="rgb(246,101,22)" fg:x="3101" fg:w="35"/><text x="27.8758%" y="847.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::metal::Api,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::resource::Buffer&lt;wgpu_hal::metal::Api&gt;&gt;&gt; (29 samples, 0.26%)</title><rect x="27.6793%" y="821" width="0.2584%" height="15" fill="rgb(206,107,13)" fg:x="3107" fg:w="29"/><text x="27.9293%" y="831.50"></text></g><g><title>stress_test`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (2 samples, 0.02%)</title><rect x="27.9555%" y="837" width="0.0178%" height="15" fill="rgb(250,100,44)" fg:x="3138" fg:w="2"/><text x="28.2055%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="28.0624%" y="789" width="0.0178%" height="15" fill="rgb(231,147,38)" fg:x="3150" fg:w="2"/><text x="28.3124%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="28.1069%" y="773" width="0.0178%" height="15" fill="rgb(229,8,40)" fg:x="3155" fg:w="2"/><text x="28.3569%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="28.1247%" y="773" width="0.0267%" height="15" fill="rgb(221,135,30)" fg:x="3157" fg:w="3"/><text x="28.3747%" y="783.50"></text></g><g><title>Metal`0x7ff81c3cc4de (2 samples, 0.02%)</title><rect x="28.1514%" y="725" width="0.0178%" height="15" fill="rgb(249,193,18)" fg:x="3160" fg:w="2"/><text x="28.4014%" y="735.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.04%)</title><rect x="28.1782%" y="709" width="0.0356%" height="15" fill="rgb(209,133,39)" fg:x="3163" fg:w="4"/><text x="28.4282%" y="719.50"></text></g><g><title>IOAccelerator`0x7ff81c39b92b (6 samples, 0.05%)</title><rect x="28.2405%" y="693" width="0.0535%" height="15" fill="rgb(232,100,14)" fg:x="3170" fg:w="6"/><text x="28.4905%" y="703.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (1,508 samples, 13.43%)</title><rect x="28.2940%" y="661" width="13.4343%" height="15" fill="rgb(224,185,1)" fg:x="3176" fg:w="1508"/><text x="28.5440%" y="671.50">IOKit`0x7ff815d1a5ea</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,508 samples, 13.43%)</title><rect x="28.2940%" y="645" width="13.4343%" height="15" fill="rgb(223,139,8)" fg:x="3176" fg:w="1508"/><text x="28.5440%" y="655.50">libsystem_kernel.dyl..</text></g><g><title>IOAccelerator`0x7ff81c39b9b5 (1,509 samples, 13.44%)</title><rect x="28.2940%" y="693" width="13.4432%" height="15" fill="rgb(232,213,38)" fg:x="3176" fg:w="1509"/><text x="28.5440%" y="703.50">IOAccelerator`0x7ff8..</text></g><g><title>IOKit`0x7ff815d1a3f1 (1,509 samples, 13.44%)</title><rect x="28.2940%" y="677" width="13.4432%" height="15" fill="rgb(207,94,22)" fg:x="3176" fg:w="1509"/><text x="28.5440%" y="687.50">IOKit`0x7ff815d1a3f1</text></g><g><title>IOAccelerator`0x7ff81c39b9d4 (2 samples, 0.02%)</title><rect x="41.7550%" y="693" width="0.0178%" height="15" fill="rgb(219,183,54)" fg:x="4687" fg:w="2"/><text x="42.0050%" y="703.50"></text></g><g><title>CoreFoundation`CFRelease (2 samples, 0.02%)</title><rect x="41.7550%" y="677" width="0.0178%" height="15" fill="rgb(216,185,54)" fg:x="4687" fg:w="2"/><text x="42.0050%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="41.7728%" y="693" width="0.0178%" height="15" fill="rgb(254,217,39)" fg:x="4689" fg:w="2"/><text x="42.0228%" y="703.50"></text></g><g><title>CoreFoundation`_CFRelease (1,526 samples, 13.59%)</title><rect x="28.2138%" y="709" width="13.5947%" height="15" fill="rgb(240,178,23)" fg:x="3167" fg:w="1526"/><text x="28.4638%" y="719.50">CoreFoundation`_CFRel..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_free (2 samples, 0.02%)</title><rect x="41.7906%" y="693" width="0.0178%" height="15" fill="rgb(218,11,47)" fg:x="4691" fg:w="2"/><text x="42.0406%" y="703.50"></text></g><g><title>Metal`0x7ff81c3cc4f8 (1,533 samples, 13.66%)</title><rect x="28.1693%" y="725" width="13.6570%" height="15" fill="rgb(218,51,51)" fg:x="3162" fg:w="1533"/><text x="28.4193%" y="735.50">Metal`0x7ff81c3cc4f8</text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.04%)</title><rect x="41.8352%" y="709" width="0.0356%" height="15" fill="rgb(238,126,27)" fg:x="4696" fg:w="4"/><text x="42.0852%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="41.8352%" y="693" width="0.0356%" height="15" fill="rgb(249,202,22)" fg:x="4696" fg:w="4"/><text x="42.0852%" y="703.50"></text></g><g><title>Metal`0x7ff81c3cc520 (5 samples, 0.04%)</title><rect x="41.8352%" y="725" width="0.0445%" height="15" fill="rgb(254,195,49)" fg:x="4696" fg:w="5"/><text x="42.0852%" y="735.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (6 samples, 0.05%)</title><rect x="41.8797%" y="693" width="0.0535%" height="15" fill="rgb(208,123,14)" fg:x="4701" fg:w="6"/><text x="42.1297%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (6 samples, 0.05%)</title><rect x="41.8797%" y="677" width="0.0535%" height="15" fill="rgb(224,200,8)" fg:x="4701" fg:w="6"/><text x="42.1297%" y="687.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (6 samples, 0.05%)</title><rect x="41.8797%" y="661" width="0.0535%" height="15" fill="rgb(217,61,36)" fg:x="4701" fg:w="6"/><text x="42.1297%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (5 samples, 0.04%)</title><rect x="41.8886%" y="645" width="0.0445%" height="15" fill="rgb(206,35,45)" fg:x="4702" fg:w="5"/><text x="42.1386%" y="655.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (3 samples, 0.03%)</title><rect x="41.9065%" y="629" width="0.0267%" height="15" fill="rgb(217,65,33)" fg:x="4704" fg:w="3"/><text x="42.1565%" y="639.50"></text></g><g><title>Metal`0x7ff81c3cc543 (7 samples, 0.06%)</title><rect x="41.8797%" y="725" width="0.0624%" height="15" fill="rgb(222,158,48)" fg:x="4701" fg:w="7"/><text x="42.1297%" y="735.50"></text></g><g><title>Metal`0x7ff81c3c6175 (7 samples, 0.06%)</title><rect x="41.8797%" y="709" width="0.0624%" height="15" fill="rgb(254,2,54)" fg:x="4701" fg:w="7"/><text x="42.1297%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="41.9421%" y="725" width="0.0267%" height="15" fill="rgb(250,143,38)" fg:x="4708" fg:w="3"/><text x="42.1921%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer dealloc] (1,554 samples, 13.84%)</title><rect x="28.1514%" y="757" width="13.8441%" height="15" fill="rgb(248,25,0)" fg:x="3160" fg:w="1554"/><text x="28.4014%" y="767.50">AMDMTLBronzeDriver`-[..</text></g><g><title>Metal`0x7ff81c3cc3d5 (1,554 samples, 13.84%)</title><rect x="28.1514%" y="741" width="13.8441%" height="15" fill="rgb(206,152,27)" fg:x="3160" fg:w="1554"/><text x="28.4014%" y="751.50">Metal`0x7ff81c3cc3d5</text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.03%)</title><rect x="41.9688%" y="725" width="0.0267%" height="15" fill="rgb(240,77,30)" fg:x="4711" fg:w="3"/><text x="42.2188%" y="735.50"></text></g><g><title>stress_test`&lt;wgpu_core::resource::Buffer&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1,556 samples, 13.86%)</title><rect x="28.1514%" y="773" width="13.8619%" height="15" fill="rgb(231,5,3)" fg:x="3160" fg:w="1556"/><text x="28.4014%" y="783.50">stress_test`&lt;wgpu_cor..</text></g><g><title>IOKit`0x7ff815d1a5ea (204 samples, 1.82%)</title><rect x="42.0223%" y="661" width="1.8174%" height="15" fill="rgb(207,226,32)" fg:x="4717" fg:w="204"/><text x="42.2723%" y="671.50">I..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (203 samples, 1.81%)</title><rect x="42.0312%" y="645" width="1.8085%" height="15" fill="rgb(222,207,47)" fg:x="4718" fg:w="203"/><text x="42.2812%" y="655.50">l..</text></g><g><title>Metal`0x7ff81c3cc4f8 (206 samples, 1.84%)</title><rect x="42.0134%" y="725" width="1.8352%" height="15" fill="rgb(229,115,45)" fg:x="4716" fg:w="206"/><text x="42.2634%" y="735.50">M..</text></g><g><title>CoreFoundation`_CFRelease (205 samples, 1.83%)</title><rect x="42.0223%" y="709" width="1.8263%" height="15" fill="rgb(224,191,6)" fg:x="4717" fg:w="205"/><text x="42.2723%" y="719.50">C..</text></g><g><title>IOAccelerator`0x7ff81c39b9b5 (205 samples, 1.83%)</title><rect x="42.0223%" y="693" width="1.8263%" height="15" fill="rgb(230,227,24)" fg:x="4717" fg:w="205"/><text x="42.2723%" y="703.50">I..</text></g><g><title>IOKit`0x7ff815d1a3f1 (205 samples, 1.83%)</title><rect x="42.0223%" y="677" width="1.8263%" height="15" fill="rgb(228,80,19)" fg:x="4717" fg:w="205"/><text x="42.2723%" y="687.50">I..</text></g><g><title>stress_test`&lt;wgpu_core::resource::StagingBuffer&lt;A&gt; as core::ops::drop::Drop&gt;::drop (208 samples, 1.85%)</title><rect x="42.0134%" y="773" width="1.8530%" height="15" fill="rgb(247,229,0)" fg:x="4716" fg:w="208"/><text x="42.2634%" y="783.50">s..</text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer dealloc] (208 samples, 1.85%)</title><rect x="42.0134%" y="757" width="1.8530%" height="15" fill="rgb(237,194,15)" fg:x="4716" fg:w="208"/><text x="42.2634%" y="767.50">A..</text></g><g><title>Metal`0x7ff81c3cc3d5 (208 samples, 1.85%)</title><rect x="42.0134%" y="741" width="1.8530%" height="15" fill="rgb(219,203,20)" fg:x="4716" fg:w="208"/><text x="42.2634%" y="751.50">M..</text></g><g><title>stress_test`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (1,784 samples, 15.89%)</title><rect x="28.0089%" y="821" width="15.8931%" height="15" fill="rgb(234,128,8)" fg:x="3144" fg:w="1784"/><text x="28.2589%" y="831.50">stress_test`wgpu_core::d..</text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::device::life::ResourceMaps&lt;wgpu_hal::metal::Api&gt;&gt; (1,783 samples, 15.88%)</title><rect x="28.0178%" y="805" width="15.8842%" height="15" fill="rgb(248,202,8)" fg:x="3145" fg:w="1783"/><text x="28.2678%" y="815.50">stress_test`core::ptr::d..</text></g><g><title>stress_test`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,776 samples, 15.82%)</title><rect x="28.0802%" y="789" width="15.8218%" height="15" fill="rgb(206,104,37)" fg:x="3152" fg:w="1776"/><text x="28.3302%" y="799.50">stress_test`alloc::sync:..</text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::resource::ResourceInfo&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="43.8664%" y="773" width="0.0356%" height="15" fill="rgb(223,8,27)" fg:x="4924" fg:w="4"/><text x="44.1164%" y="783.50"></text></g><g><title>stress_test`wgpu_core::identity::IdentityManager&lt;I&gt;::free (4 samples, 0.04%)</title><rect x="43.8664%" y="757" width="0.0356%" height="15" fill="rgb(216,217,28)" fg:x="4924" fg:w="4"/><text x="44.1164%" y="767.50"></text></g><g><title>stress_test`&lt;wgpu_core::binding_model::BindGroup&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="43.9287%" y="789" width="0.0178%" height="15" fill="rgb(249,199,1)" fg:x="4931" fg:w="2"/><text x="44.1787%" y="799.50"></text></g><g><title>stress_test`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.04%)</title><rect x="43.9198%" y="805" width="0.0445%" height="15" fill="rgb(240,85,17)" fg:x="4930" fg:w="5"/><text x="44.1698%" y="815.50"></text></g><g><title>stress_test`&lt;wgpu_core::resource::Buffer&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="43.9465%" y="789" width="0.0178%" height="15" fill="rgb(206,108,45)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="799.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer dealloc] (2 samples, 0.02%)</title><rect x="43.9465%" y="773" width="0.0178%" height="15" fill="rgb(245,210,41)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="783.50"></text></g><g><title>Metal`0x7ff81c3cc3d5 (2 samples, 0.02%)</title><rect x="43.9465%" y="757" width="0.0178%" height="15" fill="rgb(206,13,37)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="767.50"></text></g><g><title>Metal`0x7ff81c3cc4f8 (2 samples, 0.02%)</title><rect x="43.9465%" y="741" width="0.0178%" height="15" fill="rgb(250,61,18)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="751.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.02%)</title><rect x="43.9465%" y="725" width="0.0178%" height="15" fill="rgb(235,172,48)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="735.50"></text></g><g><title>IOAccelerator`0x7ff81c39b9b5 (2 samples, 0.02%)</title><rect x="43.9465%" y="709" width="0.0178%" height="15" fill="rgb(249,201,17)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="719.50"></text></g><g><title>IOKit`0x7ff815d1a3f1 (2 samples, 0.02%)</title><rect x="43.9465%" y="693" width="0.0178%" height="15" fill="rgb(219,208,6)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="703.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (2 samples, 0.02%)</title><rect x="43.9465%" y="677" width="0.0178%" height="15" fill="rgb(248,31,23)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="43.9465%" y="661" width="0.0178%" height="15" fill="rgb(245,15,42)" fg:x="4933" fg:w="2"/><text x="44.1965%" y="671.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::maintain (1,797 samples, 16.01%)</title><rect x="27.9822%" y="837" width="16.0089%" height="15" fill="rgb(222,217,39)" fg:x="3141" fg:w="1797"/><text x="28.2322%" y="847.50">stress_test`wgpu_core::de..</text></g><g><title>stress_test`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (10 samples, 0.09%)</title><rect x="43.9020%" y="821" width="0.0891%" height="15" fill="rgb(210,219,27)" fg:x="4928" fg:w="10"/><text x="44.1520%" y="831.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_submit (1,980 samples, 17.64%)</title><rect x="26.4855%" y="869" width="17.6392%" height="15" fill="rgb(252,166,36)" fg:x="2973" fg:w="1980"/><text x="26.7355%" y="879.50">stress_test`&lt;T as wgpu::con..</text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_submit (1,980 samples, 17.64%)</title><rect x="26.4855%" y="853" width="17.6392%" height="15" fill="rgb(245,132,34)" fg:x="2973" fg:w="1980"/><text x="26.7355%" y="863.50">stress_test`wgpu_core::devi..</text></g><g><title>stress_test`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (15 samples, 0.13%)</title><rect x="43.9911%" y="837" width="0.1336%" height="15" fill="rgb(236,54,3)" fg:x="4938" fg:w="15"/><text x="44.2411%" y="847.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&lt;wgpu_hal::metal::Api&gt;&gt; (2 samples, 0.02%)</title><rect x="44.1425%" y="645" width="0.0178%" height="15" fill="rgb(241,173,43)" fg:x="4955" fg:w="2"/><text x="44.3925%" y="655.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::metal::Api,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::resource::Buffer&lt;wgpu_hal::metal::Api&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="44.1425%" y="629" width="0.0178%" height="15" fill="rgb(215,190,9)" fg:x="4955" fg:w="2"/><text x="44.3925%" y="639.50"></text></g><g><title>stress_test`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (2 samples, 0.02%)</title><rect x="44.1604%" y="645" width="0.0178%" height="15" fill="rgb(242,101,16)" fg:x="4957" fg:w="2"/><text x="44.4104%" y="655.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (2 samples, 0.02%)</title><rect x="44.1604%" y="629" width="0.0178%" height="15" fill="rgb(223,190,21)" fg:x="4957" fg:w="2"/><text x="44.4104%" y="639.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder endEncoding] (2 samples, 0.02%)</title><rect x="44.1604%" y="613" width="0.0178%" height="15" fill="rgb(215,228,25)" fg:x="4957" fg:w="2"/><text x="44.4104%" y="623.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeHandleStoreActions(BronzeDeviceMembersRec*, BronzeSurfSyncMgrRec*, BronzeCmdBufInfoRec*, AMDBitVectorRec*, AMDBitVectorRec*, BronzeLoadStoreInfo const*, ATI_BOOL, BronzeRenderEncoderHwCtxRegsRec const*, unsigned long long) (2 samples, 0.02%)</title><rect x="44.1604%" y="597" width="0.0178%" height="15" fill="rgb(225,36,22)" fg:x="4957" fg:w="2"/><text x="44.4104%" y="607.50"></text></g><g><title>AMDMTLBronzeDriver`BltMgr::Clear (3 samples, 0.03%)</title><rect x="44.1871%" y="517" width="0.0267%" height="15" fill="rgb(251,106,46)" fg:x="4960" fg:w="3"/><text x="44.4371%" y="527.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::Execute3dBlt (2 samples, 0.02%)</title><rect x="44.1960%" y="501" width="0.0178%" height="15" fill="rgb(208,90,1)" fg:x="4961" fg:w="2"/><text x="44.4460%" y="511.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::ExecuteFastColorClear (2 samples, 0.02%)</title><rect x="44.1960%" y="485" width="0.0178%" height="15" fill="rgb(243,10,4)" fg:x="4961" fg:w="2"/><text x="44.4460%" y="495.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::Execute3dBlt (2 samples, 0.02%)</title><rect x="44.1960%" y="469" width="0.0178%" height="15" fill="rgb(212,137,27)" fg:x="4961" fg:w="2"/><text x="44.4460%" y="479.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::Execute3dDrawBlt (2 samples, 0.02%)</title><rect x="44.1960%" y="453" width="0.0178%" height="15" fill="rgb(231,220,49)" fg:x="4961" fg:w="2"/><text x="44.4460%" y="463.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeDoColorClear(BronzeDeviceMembersRec*, BronzeCmdBufInfoRec*, BronzeMtlTexture*, unsigned int, unsigned int, unsigned int, MTLClearColor, unsigned int const*, bool) (4 samples, 0.04%)</title><rect x="44.1871%" y="549" width="0.0356%" height="15" fill="rgb(237,96,20)" fg:x="4960" fg:w="4"/><text x="44.4371%" y="559.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeDoClear(BronzeDeviceMembersRec*, BronzeCmdBufInfoRec*, _UBM_CLEARINFO*, RgpSqttMarkerEventType) (4 samples, 0.04%)</title><rect x="44.1871%" y="533" width="0.0356%" height="15" fill="rgb(239,229,30)" fg:x="4960" fg:w="4"/><text x="44.4371%" y="543.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder initWithCommandBuffer:descriptor:] (5 samples, 0.04%)</title><rect x="44.1871%" y="581" width="0.0445%" height="15" fill="rgb(219,65,33)" fg:x="4960" fg:w="5"/><text x="44.4371%" y="591.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeHandleLoadActions(BronzeDeviceMembersRec*, BronzeSurfSyncMgrRec*, BronzeCmdBufInfoRec*, AMDBitVectorRec*, MTLRenderPassDescriptor const*, BronzeLoadStoreInfo*, ATI_BOOL) (5 samples, 0.04%)</title><rect x="44.1871%" y="565" width="0.0445%" height="15" fill="rgb(243,134,7)" fg:x="4960" fg:w="5"/><text x="44.4371%" y="575.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdBuffer renderCommandEncoderWithDescriptor:] (6 samples, 0.05%)</title><rect x="44.1871%" y="597" width="0.0535%" height="15" fill="rgb(216,177,54)" fg:x="4960" fg:w="6"/><text x="44.4371%" y="607.50"></text></g><g><title>stress_test`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (8 samples, 0.07%)</title><rect x="44.1782%" y="645" width="0.0713%" height="15" fill="rgb(211,160,20)" fg:x="4959" fg:w="8"/><text x="44.4282%" y="655.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (7 samples, 0.06%)</title><rect x="44.1871%" y="629" width="0.0624%" height="15" fill="rgb(239,85,39)" fg:x="4960" fg:w="7"/><text x="44.4371%" y="639.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (7 samples, 0.06%)</title><rect x="44.1871%" y="613" width="0.0624%" height="15" fill="rgb(232,125,22)" fg:x="4960" fg:w="7"/><text x="44.4371%" y="623.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (17 samples, 0.15%)</title><rect x="44.1425%" y="725" width="0.1514%" height="15" fill="rgb(244,57,34)" fg:x="4955" fg:w="17"/><text x="44.3925%" y="735.50"></text></g><g><title>stress_test`&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (17 samples, 0.15%)</title><rect x="44.1425%" y="709" width="0.1514%" height="15" fill="rgb(214,203,32)" fg:x="4955" fg:w="17"/><text x="44.3925%" y="719.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (17 samples, 0.15%)</title><rect x="44.1425%" y="693" width="0.1514%" height="15" fill="rgb(207,58,43)" fg:x="4955" fg:w="17"/><text x="44.3925%" y="703.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_end_render_pass (17 samples, 0.15%)</title><rect x="44.1425%" y="677" width="0.1514%" height="15" fill="rgb(215,193,15)" fg:x="4955" fg:w="17"/><text x="44.3925%" y="687.50"></text></g><g><title>stress_test`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (17 samples, 0.15%)</title><rect x="44.1425%" y="661" width="0.1514%" height="15" fill="rgb(232,15,44)" fg:x="4955" fg:w="17"/><text x="44.3925%" y="671.50"></text></g><g><title>stress_test`wgpu_core::track::Tracker&lt;A&gt;::set_size (5 samples, 0.04%)</title><rect x="44.2494%" y="645" width="0.0445%" height="15" fill="rgb(212,3,48)" fg:x="4967" fg:w="5"/><text x="44.4994%" y="655.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_size (5 samples, 0.04%)</title><rect x="44.2494%" y="629" width="0.0445%" height="15" fill="rgb(218,128,7)" fg:x="4967" fg:w="5"/><text x="44.4994%" y="639.50"></text></g><g><title>stress_test`alloc::vec::Vec&lt;T,A&gt;::resize (4 samples, 0.04%)</title><rect x="44.2584%" y="613" width="0.0356%" height="15" fill="rgb(226,216,39)" fg:x="4968" fg:w="4"/><text x="44.5084%" y="623.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.17%)</title><rect x="44.1336%" y="821" width="0.1693%" height="15" fill="rgb(243,47,51)" fg:x="4954" fg:w="19"/><text x="44.3836%" y="831.50"></text></g><g><title>stress_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.17%)</title><rect x="44.1336%" y="805" width="0.1693%" height="15" fill="rgb(241,183,40)" fg:x="4954" fg:w="19"/><text x="44.3836%" y="815.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (19 samples, 0.17%)</title><rect x="44.1336%" y="789" width="0.1693%" height="15" fill="rgb(231,217,32)" fg:x="4954" fg:w="19"/><text x="44.3836%" y="799.50"></text></g><g><title>stress_test`std::panicking::try (19 samples, 0.17%)</title><rect x="44.1336%" y="773" width="0.1693%" height="15" fill="rgb(229,61,38)" fg:x="4954" fg:w="19"/><text x="44.3836%" y="783.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.17%)</title><rect x="44.1336%" y="757" width="0.1693%" height="15" fill="rgb(225,210,5)" fg:x="4954" fg:w="19"/><text x="44.3836%" y="767.50"></text></g><g><title>stress_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.17%)</title><rect x="44.1336%" y="741" width="0.1693%" height="15" fill="rgb(231,79,45)" fg:x="4954" fg:w="19"/><text x="44.3836%" y="751.50"></text></g><g><title>stress_test`bevy_render::renderer::RenderContext::finish (21 samples, 0.19%)</title><rect x="44.1247%" y="869" width="0.1871%" height="15" fill="rgb(224,100,7)" fg:x="4953" fg:w="21"/><text x="44.3747%" y="879.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope (20 samples, 0.18%)</title><rect x="44.1336%" y="853" width="0.1782%" height="15" fill="rgb(241,198,18)" fg:x="4954" fg:w="20"/><text x="44.3836%" y="863.50"></text></g><g><title>stress_test`futures_lite::future::block_on (20 samples, 0.18%)</title><rect x="44.1336%" y="837" width="0.1782%" height="15" fill="rgb(252,97,53)" fg:x="4954" fg:w="20"/><text x="44.3836%" y="847.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (3 samples, 0.03%)</title><rect x="44.7751%" y="757" width="0.0267%" height="15" fill="rgb(220,88,7)" fg:x="5026" fg:w="3"/><text x="45.0251%" y="767.50"></text></g><g><title>stress_test`bevy_render::render_asset::RenderAssets&lt;A&gt;::get (129 samples, 1.15%)</title><rect x="45.1047%" y="741" width="1.1492%" height="15" fill="rgb(213,176,14)" fg:x="5063" fg:w="129"/><text x="45.3547%" y="751.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::render_pass_set_index_buffer (2 samples, 0.02%)</title><rect x="46.3341%" y="709" width="0.0178%" height="15" fill="rgb(246,73,7)" fg:x="5201" fg:w="2"/><text x="46.5841%" y="719.50"></text></g><g><title>stress_test`wgpu::RenderPass::set_index_buffer (20 samples, 0.18%)</title><rect x="46.2628%" y="725" width="0.1782%" height="15" fill="rgb(245,64,36)" fg:x="5193" fg:w="20"/><text x="46.5128%" y="735.50"></text></g><g><title>stress_test`wgpu_core::command::render::RenderPass::set_index_buffer (10 samples, 0.09%)</title><rect x="46.3519%" y="709" width="0.0891%" height="15" fill="rgb(245,80,10)" fg:x="5203" fg:w="10"/><text x="46.6019%" y="719.50"></text></g><g><title>stress_test`bevy_render::render_phase::draw_state::TrackedRenderPass::set_index_buffer (21 samples, 0.19%)</title><rect x="46.2628%" y="741" width="0.1871%" height="15" fill="rgb(232,107,50)" fg:x="5193" fg:w="21"/><text x="46.5128%" y="751.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::render_pass_set_vertex_buffer (4 samples, 0.04%)</title><rect x="46.4677%" y="725" width="0.0356%" height="15" fill="rgb(253,3,0)" fg:x="5216" fg:w="4"/><text x="46.7177%" y="735.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::render_pass_set_vertex_buffer (3 samples, 0.03%)</title><rect x="47.5902%" y="709" width="0.0267%" height="15" fill="rgb(212,99,53)" fg:x="5342" fg:w="3"/><text x="47.8402%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.05%)</title><rect x="47.6704%" y="613" width="0.0535%" height="15" fill="rgb(249,111,54)" fg:x="5351" fg:w="6"/><text x="47.9204%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.05%)</title><rect x="47.6704%" y="597" width="0.0535%" height="15" fill="rgb(249,55,30)" fg:x="5351" fg:w="6"/><text x="47.9204%" y="607.50"></text></g><g><title>stress_test`bevy_render::render_phase::draw_state::TrackedRenderPass::set_vertex_buffer (161 samples, 1.43%)</title><rect x="46.4499%" y="741" width="1.4343%" height="15" fill="rgb(237,47,42)" fg:x="5214" fg:w="161"/><text x="46.6999%" y="751.50"></text></g><g><title>stress_test`wgpu::RenderPass::set_vertex_buffer (155 samples, 1.38%)</title><rect x="46.5033%" y="725" width="1.3808%" height="15" fill="rgb(211,20,18)" fg:x="5220" fg:w="155"/><text x="46.7533%" y="735.50"></text></g><g><title>stress_test`wgpu_render_pass_set_vertex_buffer (30 samples, 0.27%)</title><rect x="47.6169%" y="709" width="0.2673%" height="15" fill="rgb(231,203,46)" fg:x="5345" fg:w="30"/><text x="47.8669%" y="719.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.21%)</title><rect x="47.6704%" y="693" width="0.2138%" height="15" fill="rgb(237,142,3)" fg:x="5351" fg:w="24"/><text x="47.9204%" y="703.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (24 samples, 0.21%)</title><rect x="47.6704%" y="677" width="0.2138%" height="15" fill="rgb(241,107,1)" fg:x="5351" fg:w="24"/><text x="47.9204%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`realloc (24 samples, 0.21%)</title><rect x="47.6704%" y="661" width="0.2138%" height="15" fill="rgb(229,83,13)" fg:x="5351" fg:w="24"/><text x="47.9204%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (24 samples, 0.21%)</title><rect x="47.6704%" y="645" width="0.2138%" height="15" fill="rgb(241,91,40)" fg:x="5351" fg:w="24"/><text x="47.9204%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (24 samples, 0.21%)</title><rect x="47.6704%" y="629" width="0.2138%" height="15" fill="rgb(225,3,45)" fg:x="5351" fg:w="24"/><text x="47.9204%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.16%)</title><rect x="47.7238%" y="613" width="0.1604%" height="15" fill="rgb(244,223,14)" fg:x="5357" fg:w="18"/><text x="47.9738%" y="623.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::pipeline::DrawBillboardMesh as bevy_render::render_phase::draw::RenderCommand&lt;bevy_core_pipeline::core_3d::Transparent3d&gt;&gt;::render (352 samples, 3.14%)</title><rect x="44.8196%" y="757" width="3.1359%" height="15" fill="rgb(224,124,37)" fg:x="5031" fg:w="352"/><text x="45.0696%" y="767.50">str..</text></g><g><title>stress_test`wgpu::RenderPass::draw_indexed (8 samples, 0.07%)</title><rect x="47.8842%" y="741" width="0.0713%" height="15" fill="rgb(251,171,30)" fg:x="5375" fg:w="8"/><text x="48.1342%" y="751.50"></text></g><g><title>stress_test`wgpu_render_pass_draw_indexed (4 samples, 0.04%)</title><rect x="47.9198%" y="725" width="0.0356%" height="15" fill="rgb(236,46,54)" fg:x="5379" fg:w="4"/><text x="48.1698%" y="735.50"></text></g><g><title>stress_test`bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (5 samples, 0.04%)</title><rect x="48.4009%" y="741" width="0.0445%" height="15" fill="rgb(245,213,5)" fg:x="5433" fg:w="5"/><text x="48.6509%" y="751.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::pipeline::SetBillboardTextureBindGroup&lt;_&gt; as bevy_render::render_phase::draw::RenderCommand&lt;bevy_core_pipeline::core_3d::Transparent3d&gt;&gt;::render (56 samples, 0.50%)</title><rect x="47.9555%" y="757" width="0.4989%" height="15" fill="rgb(230,144,27)" fg:x="5383" fg:w="56"/><text x="48.2055%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.05%)</title><rect x="48.5791%" y="741" width="0.0535%" height="15" fill="rgb(220,86,6)" fg:x="5453" fg:w="6"/><text x="48.8291%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="48.6325%" y="741" width="0.0267%" height="15" fill="rgb(240,20,13)" fg:x="5459" fg:w="3"/><text x="48.8825%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="48.7572%" y="709" width="0.0267%" height="15" fill="rgb(217,89,34)" fg:x="5473" fg:w="3"/><text x="49.0072%" y="719.50"></text></g><g><title>stress_test`wgpu::RenderPass::set_bind_group (16 samples, 0.14%)</title><rect x="48.6592%" y="741" width="0.1425%" height="15" fill="rgb(229,13,5)" fg:x="5462" fg:w="16"/><text x="48.9092%" y="751.50"></text></g><g><title>stress_test`wgpu_render_pass_set_bind_group (13 samples, 0.12%)</title><rect x="48.6860%" y="725" width="0.1158%" height="15" fill="rgb(244,67,35)" fg:x="5465" fg:w="13"/><text x="48.9360%" y="735.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="48.7840%" y="709" width="0.0178%" height="15" fill="rgb(221,40,2)" fg:x="5476" fg:w="2"/><text x="49.0340%" y="719.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="48.7840%" y="693" width="0.0178%" height="15" fill="rgb(237,157,21)" fg:x="5476" fg:w="2"/><text x="49.0340%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="48.7840%" y="677" width="0.0178%" height="15" fill="rgb(222,94,11)" fg:x="5476" fg:w="2"/><text x="49.0340%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="48.7840%" y="661" width="0.0178%" height="15" fill="rgb(249,113,6)" fg:x="5476" fg:w="2"/><text x="49.0340%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="48.7840%" y="645" width="0.0178%" height="15" fill="rgb(238,137,36)" fg:x="5476" fg:w="2"/><text x="49.0340%" y="655.50"></text></g><g><title>stress_test`bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (36 samples, 0.32%)</title><rect x="48.4900%" y="757" width="0.3207%" height="15" fill="rgb(210,102,26)" fg:x="5443" fg:w="36"/><text x="48.7400%" y="767.50"></text></g><g><title>stress_test`&lt;(C0,C1,C2,C3,C4) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (464 samples, 4.13%)</title><rect x="44.7038%" y="773" width="4.1336%" height="15" fill="rgb(218,30,30)" fg:x="5018" fg:w="464"/><text x="44.9538%" y="783.50">stres..</text></g><g><title>stress_test`bevy_render::render_phase::draw_state::TrackedRenderPass::set_render_pipeline (3 samples, 0.03%)</title><rect x="48.8107%" y="757" width="0.0267%" height="15" fill="rgb(214,67,26)" fg:x="5479" fg:w="3"/><text x="49.0607%" y="767.50"></text></g><g><title>stress_test`bevy_ecs::query::state::QueryState&lt;D,F&gt;::get_unchecked_manual (42 samples, 0.37%)</title><rect x="48.8374%" y="773" width="0.3742%" height="15" fill="rgb(251,9,53)" fg:x="5482" fg:w="42"/><text x="49.0874%" y="783.50"></text></g><g><title>stress_test`bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (2 samples, 0.02%)</title><rect x="49.2116%" y="773" width="0.0178%" height="15" fill="rgb(228,204,25)" fg:x="5524" fg:w="2"/><text x="49.4616%" y="783.50"></text></g><g><title>stress_test`&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (528 samples, 4.70%)</title><rect x="44.5345%" y="789" width="4.7038%" height="15" fill="rgb(207,153,8)" fg:x="4999" fg:w="528"/><text x="44.7845%" y="799.50">stres..</text></g><g><title>stress_test`bevy_render::render_phase::RenderPhase&lt;I&gt;::render_range (548 samples, 4.88%)</title><rect x="44.3742%" y="805" width="4.8820%" height="15" fill="rgb(242,9,16)" fg:x="4981" fg:w="548"/><text x="44.6242%" y="815.50">stress..</text></g><g><title>stress_test`bevy_ecs::query::state::QueryState&lt;D,F&gt;::get_unchecked_manual (2 samples, 0.02%)</title><rect x="49.2383%" y="789" width="0.0178%" height="15" fill="rgb(217,211,10)" fg:x="5527" fg:w="2"/><text x="49.4883%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="49.2829%" y="741" width="0.0267%" height="15" fill="rgb(219,228,52)" fg:x="5532" fg:w="3"/><text x="49.5329%" y="751.50"></text></g><g><title>stress_test`log::__private_api::log_impl (4 samples, 0.04%)</title><rect x="49.3452%" y="741" width="0.0356%" height="15" fill="rgb(231,92,29)" fg:x="5539" fg:w="4"/><text x="49.5952%" y="751.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd1c (12 samples, 0.11%)</title><rect x="53.9955%" y="693" width="0.1069%" height="15" fill="rgb(232,8,23)" fg:x="6061" fg:w="12"/><text x="54.2455%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd25 (3 samples, 0.03%)</title><rect x="54.1114%" y="693" width="0.0267%" height="15" fill="rgb(216,211,34)" fg:x="6074" fg:w="3"/><text x="54.3614%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd3c (3 samples, 0.03%)</title><rect x="54.1381%" y="693" width="0.0267%" height="15" fill="rgb(236,151,0)" fg:x="6077" fg:w="3"/><text x="54.3881%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd46 (18 samples, 0.16%)</title><rect x="54.1648%" y="693" width="0.1604%" height="15" fill="rgb(209,168,3)" fg:x="6080" fg:w="18"/><text x="54.4148%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd58 (7 samples, 0.06%)</title><rect x="54.3252%" y="693" width="0.0624%" height="15" fill="rgb(208,129,28)" fg:x="6098" fg:w="7"/><text x="54.5752%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bda4 (9 samples, 0.08%)</title><rect x="54.4143%" y="693" width="0.0802%" height="15" fill="rgb(229,78,22)" fg:x="6108" fg:w="9"/><text x="54.6643%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdb2 (17 samples, 0.15%)</title><rect x="54.4944%" y="693" width="0.1514%" height="15" fill="rgb(228,187,13)" fg:x="6117" fg:w="17"/><text x="54.7444%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdb8 (499 samples, 4.45%)</title><rect x="54.6459%" y="693" width="4.4454%" height="15" fill="rgb(240,119,24)" fg:x="6134" fg:w="499"/><text x="54.8959%" y="703.50">IOAcc..</text></g><g><title>IOAccelerator`0x7ff81c39bdbd (14 samples, 0.12%)</title><rect x="59.0913%" y="693" width="0.1247%" height="15" fill="rgb(209,194,42)" fg:x="6633" fg:w="14"/><text x="59.3413%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdc3 (2 samples, 0.02%)</title><rect x="59.2160%" y="693" width="0.0178%" height="15" fill="rgb(247,200,46)" fg:x="6647" fg:w="2"/><text x="59.4660%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdc9 (107 samples, 0.95%)</title><rect x="59.2428%" y="693" width="0.9532%" height="15" fill="rgb(218,76,16)" fg:x="6650" fg:w="107"/><text x="59.4928%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdd9 (10 samples, 0.09%)</title><rect x="60.2138%" y="693" width="0.0891%" height="15" fill="rgb(225,21,48)" fg:x="6759" fg:w="10"/><text x="60.4638%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bde8 (4 samples, 0.04%)</title><rect x="60.3207%" y="693" width="0.0356%" height="15" fill="rgb(239,223,50)" fg:x="6771" fg:w="4"/><text x="60.5707%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdff (9 samples, 0.08%)</title><rect x="60.3653%" y="693" width="0.0802%" height="15" fill="rgb(244,45,21)" fg:x="6776" fg:w="9"/><text x="60.6153%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bf0d (3 samples, 0.03%)</title><rect x="60.4811%" y="693" width="0.0267%" height="15" fill="rgb(232,33,43)" fg:x="6789" fg:w="3"/><text x="60.7311%" y="703.50"></text></g><g><title>IOAccelerator`0x7ff81c39bf14 (4 samples, 0.04%)</title><rect x="60.5078%" y="693" width="0.0356%" height="15" fill="rgb(209,8,3)" fg:x="6792" fg:w="4"/><text x="60.7578%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeCmdBufUpdateRsrc(BronzeCmdBufInfoRec*, MTLIOAccelResource*, unsigned int, unsigned int) (880 samples, 7.84%)</title><rect x="52.7483%" y="709" width="7.8396%" height="15" fill="rgb(214,25,53)" fg:x="5921" fg:w="880"/><text x="52.9983%" y="719.50">AMDMTLBronz..</text></g><g><title>IOAccelerator`0x7ff81c39bf40 (5 samples, 0.04%)</title><rect x="60.5434%" y="693" width="0.0445%" height="15" fill="rgb(254,186,54)" fg:x="6796" fg:w="5"/><text x="60.7934%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder setVertexBuffer:offset:atIndex:] (886 samples, 7.89%)</title><rect x="52.7038%" y="725" width="7.8931%" height="15" fill="rgb(208,174,49)" fg:x="5916" fg:w="886"/><text x="52.9538%" y="735.50">AMDMTLBronz..</text></g><g><title>libobjc.A.dylib`objc_msgSend (24 samples, 0.21%)</title><rect x="60.5969%" y="725" width="0.2138%" height="15" fill="rgb(233,191,51)" fg:x="6802" fg:w="24"/><text x="60.8469%" y="735.50"></text></g><g><title>stress_test`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.06%)</title><rect x="60.8196%" y="725" width="0.0624%" height="15" fill="rgb(222,134,10)" fg:x="6827" fg:w="7"/><text x="61.0696%" y="735.50"></text></g><g><title>stress_test`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (4 samples, 0.04%)</title><rect x="60.8909%" y="725" width="0.0356%" height="15" fill="rgb(230,226,20)" fg:x="6835" fg:w="4"/><text x="61.1409%" y="735.50"></text></g><g><title>stress_test`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.09%)</title><rect x="60.9265%" y="725" width="0.0891%" height="15" fill="rgb(251,111,25)" fg:x="6839" fg:w="10"/><text x="61.1765%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.04%)</title><rect x="60.9710%" y="709" width="0.0445%" height="15" fill="rgb(224,40,46)" fg:x="6844" fg:w="5"/><text x="61.2210%" y="719.50"></text></g><g><title>stress_test`arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::extend_from_iter (2 samples, 0.02%)</title><rect x="61.0156%" y="725" width="0.0178%" height="15" fill="rgb(236,108,47)" fg:x="6849" fg:w="2"/><text x="61.2656%" y="735.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&lt;wgpu_hal::metal::Api&gt;&gt; (41 samples, 0.37%)</title><rect x="61.0423%" y="725" width="0.3653%" height="15" fill="rgb(234,93,0)" fg:x="6852" fg:w="41"/><text x="61.2923%" y="735.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::metal::Api,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::resource::Buffer&lt;wgpu_hal::metal::Api&gt;&gt;&gt; (40 samples, 0.36%)</title><rect x="61.0512%" y="709" width="0.3563%" height="15" fill="rgb(224,213,32)" fg:x="6853" fg:w="40"/><text x="61.3012%" y="719.50"></text></g><g><title>stress_test`log::__private_api::log_impl (36 samples, 0.32%)</title><rect x="61.4076%" y="725" width="0.3207%" height="15" fill="rgb(251,11,48)" fg:x="6893" fg:w="36"/><text x="61.6576%" y="735.50"></text></g><g><title>stress_test`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (8 samples, 0.07%)</title><rect x="61.6570%" y="709" width="0.0713%" height="15" fill="rgb(236,173,5)" fg:x="6921" fg:w="8"/><text x="61.9070%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeBeginCmdBuf(BronzeCmdBufInfoRec*, unsigned int) (2 samples, 0.02%)</title><rect x="61.9777%" y="677" width="0.0178%" height="15" fill="rgb(230,95,12)" fg:x="6957" fg:w="2"/><text x="62.2277%" y="687.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd46 (5 samples, 0.04%)</title><rect x="62.0846%" y="661" width="0.0445%" height="15" fill="rgb(232,209,1)" fg:x="6969" fg:w="5"/><text x="62.3346%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd58 (4 samples, 0.04%)</title><rect x="62.1381%" y="661" width="0.0356%" height="15" fill="rgb(232,6,1)" fg:x="6975" fg:w="4"/><text x="62.3881%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bd68 (2 samples, 0.02%)</title><rect x="62.1737%" y="661" width="0.0178%" height="15" fill="rgb(210,224,50)" fg:x="6979" fg:w="2"/><text x="62.4237%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bda4 (8 samples, 0.07%)</title><rect x="62.1915%" y="661" width="0.0713%" height="15" fill="rgb(228,127,35)" fg:x="6981" fg:w="8"/><text x="62.4415%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdb2 (18 samples, 0.16%)</title><rect x="62.2717%" y="661" width="0.1604%" height="15" fill="rgb(245,102,45)" fg:x="6990" fg:w="18"/><text x="62.5217%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdb8 (453 samples, 4.04%)</title><rect x="62.4321%" y="661" width="4.0356%" height="15" fill="rgb(214,1,49)" fg:x="7008" fg:w="453"/><text x="62.6821%" y="671.50">IOAc..</text></g><g><title>IOAccelerator`0x7ff81c39bdbd (14 samples, 0.12%)</title><rect x="66.4677%" y="661" width="0.1247%" height="15" fill="rgb(226,163,40)" fg:x="7461" fg:w="14"/><text x="66.7177%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdc3 (3 samples, 0.03%)</title><rect x="66.5924%" y="661" width="0.0267%" height="15" fill="rgb(239,212,28)" fg:x="7475" fg:w="3"/><text x="66.8424%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdc9 (76 samples, 0.68%)</title><rect x="66.6192%" y="661" width="0.6771%" height="15" fill="rgb(220,20,13)" fg:x="7478" fg:w="76"/><text x="66.8692%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdd1 (2 samples, 0.02%)</title><rect x="67.2962%" y="661" width="0.0178%" height="15" fill="rgb(210,164,35)" fg:x="7554" fg:w="2"/><text x="67.5462%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bdd9 (10 samples, 0.09%)</title><rect x="67.3229%" y="661" width="0.0891%" height="15" fill="rgb(248,109,41)" fg:x="7557" fg:w="10"/><text x="67.5729%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bddc (2 samples, 0.02%)</title><rect x="67.4120%" y="661" width="0.0178%" height="15" fill="rgb(238,23,50)" fg:x="7567" fg:w="2"/><text x="67.6620%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bde2 (2 samples, 0.02%)</title><rect x="67.4298%" y="661" width="0.0178%" height="15" fill="rgb(211,48,49)" fg:x="7569" fg:w="2"/><text x="67.6798%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bde8 (6 samples, 0.05%)</title><rect x="67.4477%" y="661" width="0.0535%" height="15" fill="rgb(223,36,21)" fg:x="7571" fg:w="6"/><text x="67.6977%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39be15 (2 samples, 0.02%)</title><rect x="67.5189%" y="661" width="0.0178%" height="15" fill="rgb(207,123,46)" fg:x="7579" fg:w="2"/><text x="67.7689%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39be95 (2 samples, 0.02%)</title><rect x="67.5457%" y="661" width="0.0178%" height="15" fill="rgb(240,218,32)" fg:x="7582" fg:w="2"/><text x="67.7957%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bed7 (2 samples, 0.02%)</title><rect x="67.5724%" y="661" width="0.0178%" height="15" fill="rgb(252,5,43)" fg:x="7585" fg:w="2"/><text x="67.8224%" y="671.50"></text></g><g><title>Metal`0x7ff81c3cc8d8 (2 samples, 0.02%)</title><rect x="67.5724%" y="645" width="0.0178%" height="15" fill="rgb(252,84,19)" fg:x="7585" fg:w="2"/><text x="67.8224%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="67.5724%" y="629" width="0.0178%" height="15" fill="rgb(243,152,39)" fg:x="7585" fg:w="2"/><text x="67.8224%" y="639.50"></text></g><g><title>IOAccelerator`0x7ff81c39bf0d (3 samples, 0.03%)</title><rect x="67.5991%" y="661" width="0.0267%" height="15" fill="rgb(234,160,15)" fg:x="7588" fg:w="3"/><text x="67.8491%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39bf14 (7 samples, 0.06%)</title><rect x="67.6258%" y="661" width="0.0624%" height="15" fill="rgb(237,34,20)" fg:x="7591" fg:w="7"/><text x="67.8758%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeCmdBufUpdateRsrc(BronzeCmdBufInfoRec*, MTLIOAccelResource*, unsigned int, unsigned int) (642 samples, 5.72%)</title><rect x="61.9955%" y="677" width="5.7194%" height="15" fill="rgb(229,97,13)" fg:x="6959" fg:w="642"/><text x="62.2455%" y="687.50">AMDMTLB..</text></g><g><title>IOAccelerator`0x7ff81c39bf40 (2 samples, 0.02%)</title><rect x="67.6971%" y="661" width="0.0178%" height="15" fill="rgb(234,71,50)" fg:x="7599" fg:w="2"/><text x="67.9471%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeSetIndexBuffer(BronzeRenderCmdEncoderMembersRec*, BronzeMtlBuffer*, unsigned int, MTLIndexType) (664 samples, 5.92%)</title><rect x="61.8708%" y="693" width="5.9154%" height="15" fill="rgb(253,155,4)" fg:x="6945" fg:w="664"/><text x="62.1208%" y="703.50">AMDMTLBr..</text></g><g><title>Metal`0x7ff81c3c5b29 (5 samples, 0.04%)</title><rect x="67.7416%" y="677" width="0.0445%" height="15" fill="rgb(222,185,37)" fg:x="7604" fg:w="5"/><text x="67.9916%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzePostSplitSegmentCallback(BronzeCmdBufInfoRec*, void*) (5 samples, 0.04%)</title><rect x="67.9287%" y="661" width="0.0445%" height="15" fill="rgb(251,177,13)" fg:x="7625" fg:w="5"/><text x="68.1787%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeWriteRenderPipelineHwCtxRegs(BronzeRenderPipelineHwCtxRegsRec const*, unsigned int*, BronzeHwInfoRec const*) (2 samples, 0.02%)</title><rect x="67.9555%" y="645" width="0.0178%" height="15" fill="rgb(250,179,40)" fg:x="7628" fg:w="2"/><text x="68.2055%" y="655.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeBeginCmdBuf(BronzeCmdBufInfoRec*, unsigned int) (10 samples, 0.09%)</title><rect x="67.9109%" y="677" width="0.0891%" height="15" fill="rgb(242,44,2)" fg:x="7623" fg:w="10"/><text x="68.1609%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeSplitCmdBufInternal(BronzeCmdBufInfoRec*, unsigned int) (3 samples, 0.03%)</title><rect x="67.9733%" y="661" width="0.0267%" height="15" fill="rgb(216,177,13)" fg:x="7630" fg:w="3"/><text x="68.2233%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronze_VI_DrawIndexPrims(BronzeRenderCmdEncoderMembersRec*, unsigned int, unsigned int, unsigned int, unsigned int, int, unsigned int) (65 samples, 0.58%)</title><rect x="67.7862%" y="693" width="0.5791%" height="15" fill="rgb(216,106,43)" fg:x="7609" fg:w="65"/><text x="68.0362%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeResourceMgrValidateConstantState(BronzeCmdBufInfoRec*, BronzeRsrcMgrRec*, BronzeRsrcMgrConstStateRec const*) (41 samples, 0.37%)</title><rect x="68.0000%" y="677" width="0.3653%" height="15" fill="rgb(216,183,2)" fg:x="7633" fg:w="41"/><text x="68.2500%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeBeginCmdBuf(BronzeCmdBufInfoRec*, unsigned int) (2 samples, 0.02%)</title><rect x="68.3474%" y="661" width="0.0178%" height="15" fill="rgb(249,75,3)" fg:x="7672" fg:w="2"/><text x="68.5974%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (857 samples, 7.63%)</title><rect x="61.7817%" y="709" width="7.6347%" height="15" fill="rgb(219,67,39)" fg:x="6935" fg:w="857"/><text x="62.0317%" y="719.50">AMDMTLBron..</text></g><g><title>libobjc.A.dylib`objc_msgSend (117 samples, 1.04%)</title><rect x="68.3742%" y="693" width="1.0423%" height="15" fill="rgb(253,228,2)" fg:x="7675" fg:w="117"/><text x="68.6242%" y="703.50"></text></g><g><title>stress_test`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (864 samples, 7.70%)</title><rect x="61.7283%" y="725" width="7.6971%" height="15" fill="rgb(235,138,27)" fg:x="6929" fg:w="864"/><text x="61.9783%" y="735.50">stress_test..</text></g><g><title>stress_test`metal::encoder::RenderCommandEncoderRef::set_vertex_buffer (2 samples, 0.02%)</title><rect x="69.4254%" y="725" width="0.0178%" height="15" fill="rgb(236,97,51)" fg:x="7793" fg:w="2"/><text x="69.6754%" y="735.50"></text></g><g><title>stress_test`wgpu_core::binding_model::BindGroup&lt;A&gt;::validate_dynamic_bindings (3 samples, 0.03%)</title><rect x="69.4432%" y="725" width="0.0267%" height="15" fill="rgb(240,80,30)" fg:x="7795" fg:w="3"/><text x="69.6932%" y="735.50"></text></g><g><title>stress_test`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (202 samples, 1.80%)</title><rect x="69.4788%" y="725" width="1.7996%" height="15" fill="rgb(230,178,19)" fg:x="7799" fg:w="202"/><text x="69.7288%" y="735.50">s..</text></g><g><title>stress_test`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (202 samples, 1.80%)</title><rect x="69.4788%" y="709" width="1.7996%" height="15" fill="rgb(210,190,27)" fg:x="7799" fg:w="202"/><text x="69.7288%" y="719.50">s..</text></g><g><title>stress_test`log::__private_api::log_impl (23 samples, 0.20%)</title><rect x="71.0735%" y="693" width="0.2049%" height="15" fill="rgb(222,107,31)" fg:x="7978" fg:w="23"/><text x="71.3235%" y="703.50"></text></g><g><title>stress_test`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (8 samples, 0.07%)</title><rect x="71.2071%" y="677" width="0.0713%" height="15" fill="rgb(216,127,34)" fg:x="7993" fg:w="8"/><text x="71.4571%" y="687.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (2 samples, 0.02%)</title><rect x="71.2873%" y="661" width="0.0178%" height="15" fill="rgb(234,116,52)" fg:x="8002" fg:w="2"/><text x="71.5373%" y="671.50"></text></g><g><title>stress_test`wgpu_core::command::CommandEncoder&lt;A&gt;::open (4 samples, 0.04%)</title><rect x="71.2784%" y="725" width="0.0356%" height="15" fill="rgb(222,124,15)" fg:x="8001" fg:w="4"/><text x="71.5284%" y="735.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (4 samples, 0.04%)</title><rect x="71.2784%" y="709" width="0.0356%" height="15" fill="rgb(231,179,28)" fg:x="8001" fg:w="4"/><text x="71.5284%" y="719.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (4 samples, 0.04%)</title><rect x="71.2784%" y="693" width="0.0356%" height="15" fill="rgb(226,93,45)" fg:x="8001" fg:w="4"/><text x="71.5284%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdQueue commandBufferWithUnretainedReferences] (4 samples, 0.04%)</title><rect x="71.2784%" y="677" width="0.0356%" height="15" fill="rgb(215,8,51)" fg:x="8001" fg:w="4"/><text x="71.5284%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="71.7595%" y="709" width="0.0178%" height="15" fill="rgb(223,106,5)" fg:x="8055" fg:w="2"/><text x="72.0095%" y="719.50"></text></g><g><title>stress_test`log::__private_api::log_impl (11 samples, 0.10%)</title><rect x="71.7773%" y="709" width="0.0980%" height="15" fill="rgb(250,191,5)" fg:x="8057" fg:w="11"/><text x="72.0273%" y="719.50"></text></g><g><title>stress_test`wgpu_core::command::bind::Binder&lt;A&gt;::assign_group (85 samples, 0.76%)</title><rect x="71.3140%" y="725" width="0.7572%" height="15" fill="rgb(242,132,44)" fg:x="8005" fg:w="85"/><text x="71.5640%" y="735.50"></text></g><g><title>stress_test`wgpu_core::command::bind::compat::BoundBindGroupLayouts&lt;A&gt;::assign (22 samples, 0.20%)</title><rect x="71.8753%" y="709" width="0.1960%" height="15" fill="rgb(251,152,29)" fg:x="8068" fg:w="22"/><text x="72.1253%" y="719.50"></text></g><g><title>stress_test`wgpu_core::resource::Resource::is_equal (4 samples, 0.04%)</title><rect x="72.0356%" y="693" width="0.0356%" height="15" fill="rgb(218,179,5)" fg:x="8086" fg:w="4"/><text x="72.2856%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeHandleStoreActions(BronzeDeviceMembersRec*, BronzeSurfSyncMgrRec*, BronzeCmdBufInfoRec*, AMDBitVectorRec*, AMDBitVectorRec*, BronzeLoadStoreInfo const*, ATI_BOOL, BronzeRenderEncoderHwCtxRegsRec const*, unsigned long long) (5 samples, 0.04%)</title><rect x="72.0713%" y="677" width="0.0445%" height="15" fill="rgb(227,67,19)" fg:x="8090" fg:w="5"/><text x="72.3213%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`clearMaskRam(_UBM_SURFINFO*, BronzeMtlTexture*, BronzeCmdBufInfoRec*, BronzeUBMInterfaceRec*) (3 samples, 0.03%)</title><rect x="72.0891%" y="661" width="0.0267%" height="15" fill="rgb(233,119,31)" fg:x="8092" fg:w="3"/><text x="72.3391%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeDoMemset(BronzeUBMInterfaceRec*, BronzeCmdBufInfoRec*, _UBM_MEMSETINFO*, RgpSqttMarkerEventType, RgpBarrierReason) (3 samples, 0.03%)</title><rect x="72.0891%" y="645" width="0.0267%" height="15" fill="rgb(241,120,22)" fg:x="8092" fg:w="3"/><text x="72.3391%" y="655.50"></text></g><g><title>AMDMTLBronzeDriver`BltMgr::Memset (3 samples, 0.03%)</title><rect x="72.0891%" y="629" width="0.0267%" height="15" fill="rgb(224,102,30)" fg:x="8092" fg:w="3"/><text x="72.3391%" y="639.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::Execute3dBlt (3 samples, 0.03%)</title><rect x="72.0891%" y="613" width="0.0267%" height="15" fill="rgb(210,164,37)" fg:x="8092" fg:w="3"/><text x="72.3391%" y="623.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::Execute3dDrawBlt (2 samples, 0.02%)</title><rect x="72.0980%" y="597" width="0.0178%" height="15" fill="rgb(226,191,16)" fg:x="8093" fg:w="2"/><text x="72.3480%" y="607.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltMgr::Init3dDrawBlt (2 samples, 0.02%)</title><rect x="72.0980%" y="581" width="0.0178%" height="15" fill="rgb(214,40,45)" fg:x="8093" fg:w="2"/><text x="72.3480%" y="591.50"></text></g><g><title>stress_test`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (22 samples, 0.20%)</title><rect x="72.0713%" y="725" width="0.1960%" height="15" fill="rgb(244,29,26)" fg:x="8090" fg:w="22"/><text x="72.3213%" y="735.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (22 samples, 0.20%)</title><rect x="72.0713%" y="709" width="0.1960%" height="15" fill="rgb(216,16,5)" fg:x="8090" fg:w="22"/><text x="72.3213%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder endEncoding] (22 samples, 0.20%)</title><rect x="72.0713%" y="693" width="0.1960%" height="15" fill="rgb(249,76,35)" fg:x="8090" fg:w="22"/><text x="72.3213%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtl_CmdBuffer_EndEncoder(BronzeMtlCmdBuffer*, bool) (17 samples, 0.15%)</title><rect x="72.1158%" y="677" width="0.1514%" height="15" fill="rgb(207,11,44)" fg:x="8095" fg:w="17"/><text x="72.3658%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeEndSegment(BronzeCmdBufInfoRec*, bool) (17 samples, 0.15%)</title><rect x="72.1158%" y="661" width="0.1514%" height="15" fill="rgb(228,190,49)" fg:x="8095" fg:w="17"/><text x="72.3658%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeCompactSegmentRsrcList(BronzeCmdBufInfoRec*) (17 samples, 0.15%)</title><rect x="72.1158%" y="645" width="0.1514%" height="15" fill="rgb(214,173,12)" fg:x="8095" fg:w="17"/><text x="72.3658%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="72.2673%" y="693" width="0.0178%" height="15" fill="rgb(218,26,35)" fg:x="8112" fg:w="2"/><text x="72.5173%" y="703.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (8 samples, 0.07%)</title><rect x="72.2673%" y="709" width="0.0713%" height="15" fill="rgb(220,200,19)" fg:x="8112" fg:w="8"/><text x="72.5173%" y="719.50"></text></g><g><title>stress_test`alloc::vec::Vec&lt;T,A&gt;::resize (6 samples, 0.05%)</title><rect x="72.2851%" y="693" width="0.0535%" height="15" fill="rgb(239,95,49)" fg:x="8114" fg:w="6"/><text x="72.5351%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder initWithCommandBuffer:descriptor:] (4 samples, 0.04%)</title><rect x="72.3474%" y="661" width="0.0356%" height="15" fill="rgb(235,85,53)" fg:x="8121" fg:w="4"/><text x="72.5974%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdBuffer renderCommandEncoderWithDescriptor:] (6 samples, 0.05%)</title><rect x="72.3474%" y="677" width="0.0535%" height="15" fill="rgb(233,133,31)" fg:x="8121" fg:w="6"/><text x="72.5974%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtl_CmdBuffer_ReserveIndirectTable(BronzeMtlCmdBuffer*) (2 samples, 0.02%)</title><rect x="72.3831%" y="661" width="0.0178%" height="15" fill="rgb(218,25,20)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtl_CmdBuffer_AllocTempBufferBytes(BronzeMtlCmdBuffer*, unsigned int, unsigned long long*, unsigned long long) (2 samples, 0.02%)</title><rect x="72.3831%" y="645" width="0.0178%" height="15" fill="rgb(252,210,38)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="655.50"></text></g><g><title>Metal`0x7ff81c3bd5d4 (2 samples, 0.02%)</title><rect x="72.3831%" y="629" width="0.0178%" height="15" fill="rgb(242,134,21)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="639.50"></text></g><g><title>Metal`0x7ff81c3bd779 (2 samples, 0.02%)</title><rect x="72.3831%" y="613" width="0.0178%" height="15" fill="rgb(213,28,48)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="623.50"></text></g><g><title>Metal`0x7ff81c3acc27 (2 samples, 0.02%)</title><rect x="72.3831%" y="597" width="0.0178%" height="15" fill="rgb(250,196,2)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="607.50"></text></g><g><title>Metal`0x7ff81c3ace52 (2 samples, 0.02%)</title><rect x="72.3831%" y="581" width="0.0178%" height="15" fill="rgb(227,5,17)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="591.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (2 samples, 0.02%)</title><rect x="72.3831%" y="565" width="0.0178%" height="15" fill="rgb(221,226,24)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="575.50"></text></g><g><title>IOKit`0x7ff815d1a42b (2 samples, 0.02%)</title><rect x="72.3831%" y="549" width="0.0178%" height="15" fill="rgb(211,5,48)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="559.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (2 samples, 0.02%)</title><rect x="72.3831%" y="533" width="0.0178%" height="15" fill="rgb(219,150,6)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="72.3831%" y="517" width="0.0178%" height="15" fill="rgb(251,46,16)" fg:x="8125" fg:w="2"/><text x="72.6331%" y="527.50"></text></g><g><title>stress_test`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (16 samples, 0.14%)</title><rect x="72.2673%" y="725" width="0.1425%" height="15" fill="rgb(220,204,40)" fg:x="8112" fg:w="16"/><text x="72.5173%" y="735.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (7 samples, 0.06%)</title><rect x="72.3474%" y="709" width="0.0624%" height="15" fill="rgb(211,85,2)" fg:x="8121" fg:w="7"/><text x="72.5974%" y="719.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (7 samples, 0.06%)</title><rect x="72.3474%" y="693" width="0.0624%" height="15" fill="rgb(229,17,7)" fg:x="8121" fg:w="7"/><text x="72.5974%" y="703.50"></text></g><g><title>stress_test`wgpu_core::command::render::State&lt;A&gt;::is_ready (38 samples, 0.34%)</title><rect x="72.4098%" y="725" width="0.3385%" height="15" fill="rgb(239,72,28)" fg:x="8128" fg:w="38"/><text x="72.6598%" y="735.50"></text></g><g><title>stress_test`wgpu_core::resource::Resource::is_equal (13 samples, 0.12%)</title><rect x="72.6325%" y="709" width="0.1158%" height="15" fill="rgb(230,47,54)" fg:x="8153" fg:w="13"/><text x="72.8825%" y="719.50"></text></g><g><title>stress_test`wgpu_core::command::render::VertexState::update_limits (13 samples, 0.12%)</title><rect x="72.7483%" y="725" width="0.1158%" height="15" fill="rgb(214,50,8)" fg:x="8166" fg:w="13"/><text x="72.9983%" y="735.50"></text></g><g><title>stress_test`wgpu_core::init_tracker::buffer::_&lt;impl wgpu_core::init_tracker::InitTracker&lt;u64&gt;&gt;::create_action (5 samples, 0.04%)</title><rect x="72.8641%" y="725" width="0.0445%" height="15" fill="rgb(216,198,43)" fg:x="8179" fg:w="5"/><text x="73.1141%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="72.9354%" y="693" width="0.0267%" height="15" fill="rgb(234,20,35)" fg:x="8187" fg:w="3"/><text x="73.1854%" y="703.50"></text></g><g><title>stress_test`wgpu_core::track::Tracker&lt;A&gt;::set_size (18 samples, 0.16%)</title><rect x="72.9176%" y="725" width="0.1604%" height="15" fill="rgb(254,45,19)" fg:x="8185" fg:w="18"/><text x="73.1676%" y="735.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_size (16 samples, 0.14%)</title><rect x="72.9354%" y="709" width="0.1425%" height="15" fill="rgb(219,14,44)" fg:x="8187" fg:w="16"/><text x="73.1854%" y="719.50"></text></g><g><title>stress_test`alloc::vec::Vec&lt;T,A&gt;::resize (13 samples, 0.12%)</title><rect x="72.9621%" y="693" width="0.1158%" height="15" fill="rgb(217,220,26)" fg:x="8190" fg:w="13"/><text x="73.2121%" y="703.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (39 samples, 0.35%)</title><rect x="73.1136%" y="709" width="0.3474%" height="15" fill="rgb(213,158,28)" fg:x="8207" fg:w="39"/><text x="73.3636%" y="719.50"></text></g><g><title>stress_test`log::__private_api::log_impl (7 samples, 0.06%)</title><rect x="73.3987%" y="693" width="0.0624%" height="15" fill="rgb(252,51,52)" fg:x="8239" fg:w="7"/><text x="73.6487%" y="703.50"></text></g><g><title>stress_test`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (3 samples, 0.03%)</title><rect x="73.4343%" y="677" width="0.0267%" height="15" fill="rgb(246,89,16)" fg:x="8243" fg:w="3"/><text x="73.6843%" y="687.50"></text></g><g><title>stress_test`wgpu_core::track::UsageScope&lt;A&gt;::merge_bind_group (71 samples, 0.63%)</title><rect x="73.0780%" y="725" width="0.6325%" height="15" fill="rgb(216,158,49)" fg:x="8203" fg:w="71"/><text x="73.3280%" y="735.50"></text></g><g><title>stress_test`wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_bind_group (28 samples, 0.25%)</title><rect x="73.4610%" y="709" width="0.2494%" height="15" fill="rgb(236,107,19)" fg:x="8246" fg:w="28"/><text x="73.7110%" y="719.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (2 samples, 0.02%)</title><rect x="73.7105%" y="725" width="0.0178%" height="15" fill="rgb(228,185,30)" fg:x="8274" fg:w="2"/><text x="73.9605%" y="735.50"></text></g><g><title>stress_test`log::__private_api::log_impl (21 samples, 0.19%)</title><rect x="75.6793%" y="709" width="0.1871%" height="15" fill="rgb(246,134,8)" fg:x="8495" fg:w="21"/><text x="75.9293%" y="719.50"></text></g><g><title>stress_test`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (6 samples, 0.05%)</title><rect x="75.8129%" y="693" width="0.0535%" height="15" fill="rgb(214,143,50)" fg:x="8510" fg:w="6"/><text x="76.0629%" y="703.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_single (427 samples, 3.80%)</title><rect x="73.7283%" y="725" width="3.8040%" height="15" fill="rgb(228,75,8)" fg:x="8276" fg:w="427"/><text x="73.9783%" y="735.50">stre..</text></g><g><title>stress_test`wgpu_core::storage::Storage&lt;T,I&gt;::get (187 samples, 1.67%)</title><rect x="75.8664%" y="709" width="1.6659%" height="15" fill="rgb(207,175,4)" fg:x="8516" fg:w="187"/><text x="76.1164%" y="719.50"></text></g><g><title>stress_test`wgpu_core::track::stateless::StatelessTracker&lt;A,Id,T&gt;::add_single (88 samples, 0.78%)</title><rect x="77.5323%" y="725" width="0.7840%" height="15" fill="rgb(205,108,24)" fg:x="8703" fg:w="88"/><text x="77.7823%" y="735.50"></text></g><g><title>stress_test`wgpu_core::storage::Storage&lt;T,I&gt;::get (5 samples, 0.04%)</title><rect x="78.2717%" y="709" width="0.0445%" height="15" fill="rgb(244,120,49)" fg:x="8786" fg:w="5"/><text x="78.5217%" y="719.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::draw_indexed (4 samples, 0.04%)</title><rect x="78.3252%" y="725" width="0.0356%" height="15" fill="rgb(223,47,38)" fg:x="8792" fg:w="4"/><text x="78.5752%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder setFragmentSamplerState:atIndex:] (3 samples, 0.03%)</title><rect x="78.6192%" y="709" width="0.0267%" height="15" fill="rgb(229,179,11)" fg:x="8825" fg:w="3"/><text x="78.8692%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder setVertexBuffer:offset:atIndex:] (5 samples, 0.04%)</title><rect x="78.6459%" y="709" width="0.0445%" height="15" fill="rgb(231,122,1)" fg:x="8828" fg:w="5"/><text x="78.8959%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`void amdMtl_HWL_SetTexture&lt;(AMDMtl_SqttMode)0&gt;(BronzeRenderCmdEncoderMembersRec*, unsigned int, id&lt;MTLTexture&gt;, unsigned int, unsigned int) (6 samples, 0.05%)</title><rect x="78.7082%" y="709" width="0.0535%" height="15" fill="rgb(245,119,9)" fg:x="8835" fg:w="6"/><text x="78.9582%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`bool amdMtlBronzePrepareTexture&lt;(AMDMtl_SqttMode)0, true&gt;(BronzeRenderCmdEncoderMembersRec*, BronzeMtlTexture*, RgpSqttMarkerEventType) (4 samples, 0.04%)</title><rect x="78.7261%" y="693" width="0.0356%" height="15" fill="rgb(241,163,25)" fg:x="8837" fg:w="4"/><text x="78.9761%" y="703.50"></text></g><g><title>stress_test`metal::encoder::RenderCommandEncoderRef::set_fragment_sampler_state (2 samples, 0.02%)</title><rect x="78.7617%" y="709" width="0.0178%" height="15" fill="rgb(217,214,3)" fg:x="8841" fg:w="2"/><text x="79.0117%" y="719.50"></text></g><g><title>stress_test`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3,304 samples, 29.43%)</title><rect x="49.3808%" y="741" width="29.4343%" height="15" fill="rgb(240,86,28)" fg:x="5543" fg:w="3304"/><text x="49.6308%" y="751.50">stress_test`wgpu_core::command::render::_&lt;impl ..</text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (51 samples, 0.45%)</title><rect x="78.3608%" y="725" width="0.4543%" height="15" fill="rgb(215,47,9)" fg:x="8796" fg:w="51"/><text x="78.6108%" y="735.50"></text></g><g><title>stress_test`metal::encoder::RenderCommandEncoderRef::set_vertex_buffer (3 samples, 0.03%)</title><rect x="78.7884%" y="709" width="0.0267%" height="15" fill="rgb(252,25,45)" fg:x="8844" fg:w="3"/><text x="79.0384%" y="719.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (2 samples, 0.02%)</title><rect x="78.8330%" y="741" width="0.0178%" height="15" fill="rgb(251,164,9)" fg:x="8849" fg:w="2"/><text x="79.0830%" y="751.50"></text></g><g><title>stress_test`&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (3,321 samples, 29.59%)</title><rect x="49.2739%" y="789" width="29.5857%" height="15" fill="rgb(233,194,0)" fg:x="5531" fg:w="3321"/><text x="49.5239%" y="799.50">stress_test`&lt;wgpu::RenderPass as core::ops::drop..</text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (3,321 samples, 29.59%)</title><rect x="49.2739%" y="773" width="29.5857%" height="15" fill="rgb(249,111,24)" fg:x="5531" fg:w="3321"/><text x="49.5239%" y="783.50">stress_test`&lt;T as wgpu::context::DynContext&gt;::co..</text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_end_render_pass (3,321 samples, 29.59%)</title><rect x="49.2739%" y="757" width="29.5857%" height="15" fill="rgb(250,223,3)" fg:x="5531" fg:w="3321"/><text x="49.5239%" y="767.50">stress_test`&lt;wgpu::backend::wgpu_core::ContextWg..</text></g><g><title>stress_test`&lt;bevy_core_pipeline::core_3d::main_transparent_pass_3d_node::MainTransparentPass3dNode as bevy_render::render_graph::node::ViewNode&gt;::run (3,898 samples, 34.73%)</title><rect x="44.3563%" y="821" width="34.7261%" height="15" fill="rgb(236,178,37)" fg:x="4979" fg:w="3898"/><text x="44.6063%" y="831.50">stress_test`&lt;bevy_core_pipeline::core_3d::main_transpare..</text></g><g><title>stress_test`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (3,347 samples, 29.82%)</title><rect x="49.2650%" y="805" width="29.8174%" height="15" fill="rgb(241,158,50)" fg:x="5530" fg:w="3347"/><text x="49.5150%" y="815.50">stress_test`core::ptr::drop_in_place&lt;bevy_render..</text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPass&gt; (25 samples, 0.22%)</title><rect x="78.8597%" y="789" width="0.2227%" height="15" fill="rgb(213,121,41)" fg:x="8852" fg:w="25"/><text x="79.1097%" y="799.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::command::BasePass&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (25 samples, 0.22%)</title><rect x="78.8597%" y="773" width="0.2227%" height="15" fill="rgb(240,92,3)" fg:x="8852" fg:w="25"/><text x="79.1097%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (25 samples, 0.22%)</title><rect x="78.8597%" y="757" width="0.2227%" height="15" fill="rgb(205,123,3)" fg:x="8852" fg:w="25"/><text x="79.1097%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`madvise (25 samples, 0.22%)</title><rect x="78.8597%" y="741" width="0.2227%" height="15" fill="rgb(205,97,47)" fg:x="8852" fg:w="25"/><text x="79.1097%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (4 samples, 0.04%)</title><rect x="79.1002%" y="709" width="0.0356%" height="15" fill="rgb(247,152,14)" fg:x="8879" fg:w="4"/><text x="79.3502%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.04%)</title><rect x="79.1002%" y="693" width="0.0356%" height="15" fill="rgb(248,195,53)" fg:x="8879" fg:w="4"/><text x="79.3502%" y="703.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&lt;wgpu_hal::metal::Api&gt;&gt; (7 samples, 0.06%)</title><rect x="79.1002%" y="725" width="0.0624%" height="15" fill="rgb(226,201,16)" fg:x="8879" fg:w="7"/><text x="79.3502%" y="735.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::metal::Api,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;,wgpu_core::resource::Buffer&lt;wgpu_hal::metal::Api&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="79.1359%" y="709" width="0.0267%" height="15" fill="rgb(205,98,0)" fg:x="8883" fg:w="3"/><text x="79.3859%" y="719.50"></text></g><g><title>stress_test`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (5 samples, 0.04%)</title><rect x="79.1804%" y="709" width="0.0445%" height="15" fill="rgb(214,191,48)" fg:x="8888" fg:w="5"/><text x="79.4304%" y="719.50"></text></g><g><title>stress_test`alloc::vec::Vec&lt;T,A&gt;::resize (5 samples, 0.04%)</title><rect x="79.1804%" y="693" width="0.0445%" height="15" fill="rgb(237,112,39)" fg:x="8888" fg:w="5"/><text x="79.4304%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeHandleLoadActions(BronzeDeviceMembersRec*, BronzeSurfSyncMgrRec*, BronzeCmdBufInfoRec*, AMDBitVectorRec*, MTLRenderPassDescriptor const*, BronzeLoadStoreInfo*, ATI_BOOL) (2 samples, 0.02%)</title><rect x="79.2249%" y="645" width="0.0178%" height="15" fill="rgb(247,203,27)" fg:x="8893" fg:w="2"/><text x="79.4749%" y="655.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlRenderCmdEncoder initWithCommandBuffer:descriptor:] (4 samples, 0.04%)</title><rect x="79.2249%" y="661" width="0.0356%" height="15" fill="rgb(235,124,28)" fg:x="8893" fg:w="4"/><text x="79.4749%" y="671.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtl_CmdBuffer_GetRsrcMgr(BronzeMtlCmdBuffer*) (2 samples, 0.02%)</title><rect x="79.2428%" y="645" width="0.0178%" height="15" fill="rgb(208,207,46)" fg:x="8895" fg:w="2"/><text x="79.4928%" y="655.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeResourceMgrAlloc(BronzeDeviceMembersRec*) (2 samples, 0.02%)</title><rect x="79.2428%" y="629" width="0.0178%" height="15" fill="rgb(234,176,4)" fg:x="8895" fg:w="2"/><text x="79.4928%" y="639.50"></text></g><g><title>stress_test`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (11 samples, 0.10%)</title><rect x="79.1715%" y="725" width="0.0980%" height="15" fill="rgb(230,133,28)" fg:x="8887" fg:w="11"/><text x="79.4215%" y="735.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (5 samples, 0.04%)</title><rect x="79.2249%" y="709" width="0.0445%" height="15" fill="rgb(211,137,40)" fg:x="8893" fg:w="5"/><text x="79.4749%" y="719.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (5 samples, 0.04%)</title><rect x="79.2249%" y="693" width="0.0445%" height="15" fill="rgb(254,35,13)" fg:x="8893" fg:w="5"/><text x="79.4749%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdBuffer renderCommandEncoderWithDescriptor:] (5 samples, 0.04%)</title><rect x="79.2249%" y="677" width="0.0445%" height="15" fill="rgb(225,49,51)" fg:x="8893" fg:w="5"/><text x="79.4749%" y="687.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (23 samples, 0.20%)</title><rect x="79.0913%" y="805" width="0.2049%" height="15" fill="rgb(251,10,15)" fg:x="8878" fg:w="23"/><text x="79.3413%" y="815.50"></text></g><g><title>stress_test`&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (23 samples, 0.20%)</title><rect x="79.0913%" y="789" width="0.2049%" height="15" fill="rgb(228,207,15)" fg:x="8878" fg:w="23"/><text x="79.3413%" y="799.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (22 samples, 0.20%)</title><rect x="79.1002%" y="773" width="0.1960%" height="15" fill="rgb(241,99,19)" fg:x="8879" fg:w="22"/><text x="79.3502%" y="783.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_end_render_pass (22 samples, 0.20%)</title><rect x="79.1002%" y="757" width="0.1960%" height="15" fill="rgb(207,104,49)" fg:x="8879" fg:w="22"/><text x="79.3502%" y="767.50"></text></g><g><title>stress_test`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (22 samples, 0.20%)</title><rect x="79.1002%" y="741" width="0.1960%" height="15" fill="rgb(234,99,18)" fg:x="8879" fg:w="22"/><text x="79.3502%" y="751.50"></text></g><g><title>stress_test`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (2 samples, 0.02%)</title><rect x="79.2784%" y="725" width="0.0178%" height="15" fill="rgb(213,191,49)" fg:x="8899" fg:w="2"/><text x="79.5284%" y="735.50"></text></g><g><title>stress_test`&lt;bevy_core_pipeline::upscaling::node::UpscalingNode as bevy_render::render_graph::node::ViewNode&gt;::run (25 samples, 0.22%)</title><rect x="79.0824%" y="821" width="0.2227%" height="15" fill="rgb(210,226,19)" fg:x="8877" fg:w="25"/><text x="79.3324%" y="831.50"></text></g><g><title>stress_test`&lt;bevy_render::render_graph::node::ViewNodeRunner&lt;T&gt; as bevy_render::render_graph::node::Node&gt;::run (3,924 samples, 34.96%)</title><rect x="44.3563%" y="837" width="34.9577%" height="15" fill="rgb(229,97,18)" fg:x="4979" fg:w="3924"/><text x="44.6063%" y="847.50">stress_test`&lt;bevy_render::render_graph::node::ViewNodeRun..</text></g><g><title>stress_test`bevy_render::renderer::graph_runner::RenderGraphRunner::run (5,933 samples, 52.86%)</title><rect x="26.4855%" y="885" width="52.8552%" height="15" fill="rgb(211,167,15)" fg:x="2973" fg:w="5933"/><text x="26.7355%" y="895.50">stress_test`bevy_render::renderer::graph_runner::RenderGraphRunner::run</text></g><g><title>stress_test`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (3,932 samples, 35.03%)</title><rect x="44.3118%" y="869" width="35.0290%" height="15" fill="rgb(210,169,34)" fg:x="4974" fg:w="3932"/><text x="44.5618%" y="879.50">stress_test`bevy_render::renderer::graph_runner::RenderGr..</text></g><g><title>stress_test`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (3,932 samples, 35.03%)</title><rect x="44.3118%" y="853" width="35.0290%" height="15" fill="rgb(241,121,31)" fg:x="4974" fg:w="3932"/><text x="44.5618%" y="863.50">stress_test`bevy_render::renderer::graph_runner::RenderGr..</text></g><g><title>stress_test`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="79.3229%" y="837" width="0.0178%" height="15" fill="rgb(232,40,11)" fg:x="8904" fg:w="2"/><text x="79.5729%" y="847.50"></text></g><g><title>stress_test`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="79.3229%" y="821" width="0.0178%" height="15" fill="rgb(205,86,26)" fg:x="8904" fg:w="2"/><text x="79.5729%" y="831.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdBuffer presentDrawable:] (2 samples, 0.02%)</title><rect x="79.3675%" y="789" width="0.0178%" height="15" fill="rgb(231,126,28)" fg:x="8909" fg:w="2"/><text x="79.6175%" y="799.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (6,098 samples, 54.33%)</title><rect x="25.0958%" y="917" width="54.3252%" height="15" fill="rgb(219,221,18)" fg:x="2817" fg:w="6098"/><text x="25.3458%" y="927.50">stress_test`&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F..</text></g><g><title>stress_test`bevy_render::renderer::render_system (5,945 samples, 52.96%)</title><rect x="26.4588%" y="901" width="52.9621%" height="15" fill="rgb(211,40,0)" fg:x="2970" fg:w="5945"/><text x="26.7088%" y="911.50">stress_test`bevy_render::renderer::render_system</text></g><g><title>stress_test`wgpu::SurfaceTexture::present (6 samples, 0.05%)</title><rect x="79.3675%" y="885" width="0.0535%" height="15" fill="rgb(239,85,43)" fg:x="8909" fg:w="6"/><text x="79.6175%" y="895.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::surface_present (6 samples, 0.05%)</title><rect x="79.3675%" y="869" width="0.0535%" height="15" fill="rgb(231,55,21)" fg:x="8909" fg:w="6"/><text x="79.6175%" y="879.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_present (6 samples, 0.05%)</title><rect x="79.3675%" y="853" width="0.0535%" height="15" fill="rgb(225,184,43)" fg:x="8909" fg:w="6"/><text x="79.6175%" y="863.50"></text></g><g><title>stress_test`wgpu_core::present::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_present (6 samples, 0.05%)</title><rect x="79.3675%" y="837" width="0.0535%" height="15" fill="rgb(251,158,41)" fg:x="8909" fg:w="6"/><text x="79.6175%" y="847.50"></text></g><g><title>stress_test`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (6 samples, 0.05%)</title><rect x="79.3675%" y="821" width="0.0535%" height="15" fill="rgb(234,159,37)" fg:x="8909" fg:w="6"/><text x="79.6175%" y="831.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.05%)</title><rect x="79.3675%" y="805" width="0.0535%" height="15" fill="rgb(216,204,22)" fg:x="8909" fg:w="6"/><text x="79.6175%" y="815.50"></text></g><g><title>stress_test`metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.03%)</title><rect x="79.3942%" y="789" width="0.0267%" height="15" fill="rgb(214,17,3)" fg:x="8912" fg:w="3"/><text x="79.6442%" y="799.50"></text></g><g><title>stress_test`metal::nsstring_from_str (2 samples, 0.02%)</title><rect x="79.4031%" y="773" width="0.0178%" height="15" fill="rgb(212,111,17)" fg:x="8913" fg:w="2"/><text x="79.6531%" y="783.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (2 samples, 0.02%)</title><rect x="79.4031%" y="757" width="0.0178%" height="15" fill="rgb(221,157,24)" fg:x="8913" fg:w="2"/><text x="79.6531%" y="767.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (2 samples, 0.02%)</title><rect x="79.4031%" y="741" width="0.0178%" height="15" fill="rgb(252,16,13)" fg:x="8913" fg:w="2"/><text x="79.6531%" y="751.50"></text></g><g><title>stress_test`async_channel::Sender&lt;T&gt;::try_send (5 samples, 0.04%)</title><rect x="79.4298%" y="917" width="0.0445%" height="15" fill="rgb(221,62,2)" fg:x="8916" fg:w="5"/><text x="79.6798%" y="927.50"></text></g><g><title>stress_test`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (5 samples, 0.04%)</title><rect x="79.4298%" y="901" width="0.0445%" height="15" fill="rgb(247,87,22)" fg:x="8916" fg:w="5"/><text x="79.6798%" y="911.50"></text></g><g><title>stress_test`event_listener::sys::Inner&lt;T&gt;::notify (5 samples, 0.04%)</title><rect x="79.4298%" y="885" width="0.0445%" height="15" fill="rgb(215,73,9)" fg:x="8916" fg:w="5"/><text x="79.6798%" y="895.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (5 samples, 0.04%)</title><rect x="79.4298%" y="869" width="0.0445%" height="15" fill="rgb(207,175,33)" fg:x="8916" fg:w="5"/><text x="79.6798%" y="879.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (4 samples, 0.04%)</title><rect x="79.4388%" y="853" width="0.0356%" height="15" fill="rgb(243,129,54)" fg:x="8917" fg:w="4"/><text x="79.6888%" y="863.50"></text></g><g><title>stress_test`parking::Inner::unpark (4 samples, 0.04%)</title><rect x="79.4388%" y="837" width="0.0356%" height="15" fill="rgb(227,119,45)" fg:x="8917" fg:w="4"/><text x="79.6888%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.04%)</title><rect x="79.4388%" y="821" width="0.0356%" height="15" fill="rgb(205,109,36)" fg:x="8917" fg:w="4"/><text x="79.6888%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (11 samples, 0.10%)</title><rect x="79.9822%" y="853" width="0.0980%" height="15" fill="rgb(205,6,39)" fg:x="8978" fg:w="11"/><text x="80.2322%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.10%)</title><rect x="79.9822%" y="837" width="0.0980%" height="15" fill="rgb(221,32,16)" fg:x="8978" fg:w="11"/><text x="80.2322%" y="847.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.02%)</title><rect x="80.4187%" y="837" width="0.0178%" height="15" fill="rgb(228,144,50)" fg:x="9027" fg:w="2"/><text x="80.6687%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.18%)</title><rect x="80.4365%" y="837" width="0.1782%" height="15" fill="rgb(229,201,53)" fg:x="9029" fg:w="20"/><text x="80.6865%" y="847.50"></text></g><g><title>stress_test`DYLD-STUB$$memmove (6 samples, 0.05%)</title><rect x="80.6236%" y="837" width="0.0535%" height="15" fill="rgb(249,153,27)" fg:x="9050" fg:w="6"/><text x="80.8736%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.32%)</title><rect x="81.6392%" y="821" width="0.3207%" height="15" fill="rgb(227,106,25)" fg:x="9164" fg:w="36"/><text x="81.8892%" y="831.50"></text></g><g><title>stress_test`bevy_ecs::bundle::BundleInserter::insert (226 samples, 2.01%)</title><rect x="80.0980%" y="853" width="2.0134%" height="15" fill="rgb(230,65,29)" fg:x="8991" fg:w="226"/><text x="80.3480%" y="863.50">s..</text></g><g><title>stress_test`bevy_ecs::storage::table::Table::move_to_superset_unchecked (161 samples, 1.43%)</title><rect x="80.6771%" y="837" width="1.4343%" height="15" fill="rgb(221,57,46)" fg:x="9056" fg:w="161"/><text x="80.9271%" y="847.50"></text></g><g><title>stress_test`bevy_ecs::storage::table::Table::allocate (17 samples, 0.15%)</title><rect x="81.9599%" y="821" width="0.1514%" height="15" fill="rgb(229,161,17)" fg:x="9200" fg:w="17"/><text x="82.2099%" y="831.50"></text></g><g><title>stress_test`bevy_ecs::entity::Entities::alloc_at_without_replacement (21 samples, 0.19%)</title><rect x="82.1114%" y="853" width="0.1871%" height="15" fill="rgb(222,213,11)" fg:x="9217" fg:w="21"/><text x="82.3614%" y="863.50"></text></g><g><title>stress_test`bevy_ecs::world::World::insert_or_spawn_batch (316 samples, 2.82%)</title><rect x="79.4922%" y="869" width="2.8151%" height="15" fill="rgb(235,35,13)" fg:x="8923" fg:w="316"/><text x="79.7422%" y="879.50">st..</text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (6,427 samples, 57.26%)</title><rect x="25.0690%" y="997" width="57.2561%" height="15" fill="rgb(233,158,34)" fg:x="2814" fg:w="6427"/><text x="25.3190%" y="1007.50">stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::po..</text></g><g><title>stress_test`bevy_tasks::thread_executor::ThreadExecutorTicker::tick::_{{closure}} (6,427 samples, 57.26%)</title><rect x="25.0690%" y="981" width="57.2561%" height="15" fill="rgb(215,151,48)" fg:x="2814" fg:w="6427"/><text x="25.3190%" y="991.50">stress_test`bevy_tasks::thread_executor::ThreadExecutorTicker::tick::_{{closure}}</text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (6,425 samples, 57.24%)</title><rect x="25.0869%" y="965" width="57.2383%" height="15" fill="rgb(229,84,14)" fg:x="2816" fg:w="6425"/><text x="25.3369%" y="975.50">stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run</text></g><g><title>stress_test`std::panicking::try (6,425 samples, 57.24%)</title><rect x="25.0869%" y="949" width="57.2383%" height="15" fill="rgb(229,68,14)" fg:x="2816" fg:w="6425"/><text x="25.3369%" y="959.50">stress_test`std::panicking::try</text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (6,424 samples, 57.23%)</title><rect x="25.0958%" y="933" width="57.2294%" height="15" fill="rgb(243,106,26)" fg:x="2817" fg:w="6424"/><text x="25.3458%" y="943.50">stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::p..</text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (320 samples, 2.85%)</title><rect x="79.4744%" y="917" width="2.8508%" height="15" fill="rgb(206,45,38)" fg:x="8921" fg:w="320"/><text x="79.7244%" y="927.50">st..</text></g><g><title>stress_test`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (320 samples, 2.85%)</title><rect x="79.4744%" y="901" width="2.8508%" height="15" fill="rgb(226,6,15)" fg:x="8921" fg:w="320"/><text x="79.7244%" y="911.50">st..</text></g><g><title>stress_test`core::ops::function::FnOnce::call_once (319 samples, 2.84%)</title><rect x="79.4833%" y="885" width="2.8419%" height="15" fill="rgb(232,22,54)" fg:x="8922" fg:w="319"/><text x="79.7333%" y="895.50">st..</text></g><g><title>stress_test`bevy_ecs::world::entity_ref::EntityWorldMut::insert (2 samples, 0.02%)</title><rect x="82.3073%" y="869" width="0.0178%" height="15" fill="rgb(229,222,32)" fg:x="9239" fg:w="2"/><text x="82.5573%" y="879.50"></text></g><g><title>stress_test`bevy_ecs::storage::table::Table::move_to_superset_unchecked (2 samples, 0.02%)</title><rect x="82.3073%" y="853" width="0.0178%" height="15" fill="rgb(228,62,29)" fg:x="9239" fg:w="2"/><text x="82.5573%" y="863.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="82.3252%" y="997" width="0.0178%" height="15" fill="rgb(251,103,34)" fg:x="9241" fg:w="2"/><text x="82.5752%" y="1007.50"></text></g><g><title>stress_test`&lt;async_task::task::FallibleTask&lt;T,M&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="82.3252%" y="981" width="0.0178%" height="15" fill="rgb(233,12,30)" fg:x="9241" fg:w="2"/><text x="82.5752%" y="991.50"></text></g><g><title>stress_test`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (6,434 samples, 57.32%)</title><rect x="25.0690%" y="1045" width="57.3185%" height="15" fill="rgb(238,52,0)" fg:x="2814" fg:w="6434"/><text x="25.3190%" y="1055.50">stress_test`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::s..</text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor (6,434 samples, 57.32%)</title><rect x="25.0690%" y="1029" width="57.3185%" height="15" fill="rgb(223,98,5)" fg:x="2814" fg:w="6434"/><text x="25.3190%" y="1039.50">stress_test`bevy_tasks::task_pool::TaskPool::scope_with_executor</text></g><g><title>stress_test`futures_lite::future::block_on (6,434 samples, 57.32%)</title><rect x="25.0690%" y="1013" width="57.3185%" height="15" fill="rgb(228,75,37)" fg:x="2814" fg:w="6434"/><text x="25.3190%" y="1023.50">stress_test`futures_lite::future::block_on</text></g><g><title>stress_test`parking::Inner::park (5 samples, 0.04%)</title><rect x="82.3430%" y="997" width="0.0445%" height="15" fill="rgb(205,115,49)" fg:x="9243" fg:w="5"/><text x="82.5930%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (5 samples, 0.04%)</title><rect x="82.3430%" y="981" width="0.0445%" height="15" fill="rgb(250,154,43)" fg:x="9243" fg:w="5"/><text x="82.5930%" y="991.50"></text></g><g><title>stress_test`bevy_ecs::schedule::graph_utils::check_graph (3 samples, 0.03%)</title><rect x="82.3875%" y="1013" width="0.0267%" height="15" fill="rgb(226,43,29)" fg:x="9248" fg:w="3"/><text x="82.6375%" y="1023.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::ScheduleGraph::build_schedule (4 samples, 0.04%)</title><rect x="82.3875%" y="1029" width="0.0356%" height="15" fill="rgb(249,228,39)" fg:x="9248" fg:w="4"/><text x="82.6375%" y="1039.50"></text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::run (6,439 samples, 57.36%)</title><rect x="25.0690%" y="1061" width="57.3630%" height="15" fill="rgb(216,79,43)" fg:x="2814" fg:w="6439"/><text x="25.3190%" y="1071.50">stress_test`bevy_ecs::schedule::schedule::Schedule::run</text></g><g><title>stress_test`bevy_ecs::schedule::schedule::Schedule::initialize (5 samples, 0.04%)</title><rect x="82.3875%" y="1045" width="0.0445%" height="15" fill="rgb(228,95,12)" fg:x="9248" fg:w="5"/><text x="82.6375%" y="1055.50"></text></g><g><title>stress_test`bevy_app::app::SubApp::run (6,441 samples, 57.38%)</title><rect x="25.0690%" y="1093" width="57.3808%" height="15" fill="rgb(249,221,15)" fg:x="2814" fg:w="6441"/><text x="25.3190%" y="1103.50">stress_test`bevy_app::app::SubApp::run</text></g><g><title>stress_test`bevy_ecs::world::World::schedule_scope (6,441 samples, 57.38%)</title><rect x="25.0690%" y="1077" width="57.3808%" height="15" fill="rgb(233,34,13)" fg:x="2814" fg:w="6441"/><text x="25.3190%" y="1087.50">stress_test`bevy_ecs::world::World::schedule_scope</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.03%)</title><rect x="82.4944%" y="981" width="0.0267%" height="15" fill="rgb(214,103,39)" fg:x="9260" fg:w="3"/><text x="82.7444%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.03%)</title><rect x="82.4944%" y="965" width="0.0267%" height="15" fill="rgb(251,126,39)" fg:x="9260" fg:w="3"/><text x="82.7444%" y="975.50"></text></g><g><title>stress_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="82.4944%" y="997" width="0.0356%" height="15" fill="rgb(214,216,36)" fg:x="9260" fg:w="4"/><text x="82.7444%" y="1007.50"></text></g><g><title>stress_test`bevy_mod_billboard::text::extract_billboard_text (17 samples, 0.15%)</title><rect x="82.5390%" y="965" width="0.1514%" height="15" fill="rgb(220,221,8)" fg:x="9265" fg:w="17"/><text x="82.7890%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="82.7439%" y="949" width="0.0178%" height="15" fill="rgb(240,216,3)" fg:x="9288" fg:w="2"/><text x="82.9939%" y="959.50"></text></g><g><title>stress_test`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.09%)</title><rect x="82.7617%" y="949" width="0.0891%" height="15" fill="rgb(232,218,17)" fg:x="9290" fg:w="10"/><text x="83.0117%" y="959.50"></text></g><g><title>stress_test`&lt;bevy_render::mesh::mesh::MeshAttributeData as core::clone::Clone&gt;::clone (6 samples, 0.05%)</title><rect x="82.7973%" y="933" width="0.0535%" height="15" fill="rgb(229,163,45)" fg:x="9294" fg:w="6"/><text x="83.0473%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.04%)</title><rect x="82.8062%" y="917" width="0.0445%" height="15" fill="rgb(231,110,42)" fg:x="9295" fg:w="5"/><text x="83.0562%" y="927.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (37 samples, 0.33%)</title><rect x="82.5301%" y="981" width="0.3296%" height="15" fill="rgb(208,170,48)" fg:x="9264" fg:w="37"/><text x="82.7801%" y="991.50"></text></g><g><title>stress_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.15%)</title><rect x="82.7082%" y="965" width="0.1514%" height="15" fill="rgb(239,116,25)" fg:x="9284" fg:w="17"/><text x="82.9582%" y="975.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (46 samples, 0.41%)</title><rect x="82.4677%" y="1061" width="0.4098%" height="15" fill="rgb(219,200,50)" fg:x="9257" fg:w="46"/><text x="82.7177%" y="1071.50"></text></g><g><title>stress_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (46 samples, 0.41%)</title><rect x="82.4677%" y="1045" width="0.4098%" height="15" fill="rgb(245,200,0)" fg:x="9257" fg:w="46"/><text x="82.7177%" y="1055.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (45 samples, 0.40%)</title><rect x="82.4766%" y="1029" width="0.4009%" height="15" fill="rgb(245,119,33)" fg:x="9258" fg:w="45"/><text x="82.7266%" y="1039.50"></text></g><g><title>stress_test`std::panicking::try (43 samples, 0.38%)</title><rect x="82.4944%" y="1013" width="0.3831%" height="15" fill="rgb(231,125,12)" fg:x="9260" fg:w="43"/><text x="82.7444%" y="1023.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.35%)</title><rect x="82.5301%" y="997" width="0.3474%" height="15" fill="rgb(216,96,41)" fg:x="9264" fg:w="39"/><text x="82.7801%" y="1007.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope (51 samples, 0.45%)</title><rect x="82.4499%" y="1093" width="0.4543%" height="15" fill="rgb(248,43,45)" fg:x="9255" fg:w="51"/><text x="82.6999%" y="1103.50"></text></g><g><title>stress_test`futures_lite::future::block_on (50 samples, 0.45%)</title><rect x="82.4588%" y="1077" width="0.4454%" height="15" fill="rgb(217,222,7)" fg:x="9256" fg:w="50"/><text x="82.7088%" y="1087.50"></text></g><g><title>stress_test`parking::Inner::park (3 samples, 0.03%)</title><rect x="82.8775%" y="1061" width="0.0267%" height="15" fill="rgb(233,28,6)" fg:x="9303" fg:w="3"/><text x="83.1275%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 0.03%)</title><rect x="82.8775%" y="1045" width="0.0267%" height="15" fill="rgb(231,218,15)" fg:x="9303" fg:w="3"/><text x="83.1275%" y="1055.50"></text></g><g><title>stress_test`blocking::Executor::main_loop (2 samples, 0.02%)</title><rect x="82.9042%" y="1093" width="0.0178%" height="15" fill="rgb(226,171,48)" fg:x="9306" fg:w="2"/><text x="83.1542%" y="1103.50"></text></g><g><title>stress_test`event_listener_strategy::EventListenerFuture::wait (2 samples, 0.02%)</title><rect x="82.9220%" y="1093" width="0.0178%" height="15" fill="rgb(235,201,9)" fg:x="9308" fg:w="2"/><text x="83.1720%" y="1103.50"></text></g><g><title>stress_test`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (2 samples, 0.02%)</title><rect x="82.9220%" y="1077" width="0.0178%" height="15" fill="rgb(217,80,15)" fg:x="9308" fg:w="2"/><text x="83.1720%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (12 samples, 0.11%)</title><rect x="82.9666%" y="1045" width="0.1069%" height="15" fill="rgb(219,152,8)" fg:x="9313" fg:w="12"/><text x="83.2166%" y="1055.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (13 samples, 0.12%)</title><rect x="82.9666%" y="1077" width="0.1158%" height="15" fill="rgb(243,107,38)" fg:x="9313" fg:w="13"/><text x="83.2166%" y="1087.50"></text></g><g><title>stress_test`parking::Inner::unpark (13 samples, 0.12%)</title><rect x="82.9666%" y="1061" width="0.1158%" height="15" fill="rgb(231,17,5)" fg:x="9313" fg:w="13"/><text x="83.2166%" y="1071.50"></text></g><g><title>stress_test`async_executor::State::notify (3 samples, 0.03%)</title><rect x="83.0824%" y="1077" width="0.0267%" height="15" fill="rgb(209,25,54)" fg:x="9326" fg:w="3"/><text x="83.3324%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="83.1091%" y="1061" width="0.0178%" height="15" fill="rgb(219,0,2)" fg:x="9329" fg:w="2"/><text x="83.3591%" y="1071.50"></text></g><g><title>stress_test`async_executor::Ticker::sleep (4 samples, 0.04%)</title><rect x="83.1091%" y="1077" width="0.0356%" height="15" fill="rgb(246,9,5)" fg:x="9329" fg:w="4"/><text x="83.3591%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="83.1269%" y="1061" width="0.0178%" height="15" fill="rgb(226,159,4)" fg:x="9331" fg:w="2"/><text x="83.3769%" y="1071.50"></text></g><g><title>stress_test`async_executor::steal (4 samples, 0.04%)</title><rect x="83.1537%" y="1077" width="0.0356%" height="15" fill="rgb(219,175,34)" fg:x="9334" fg:w="4"/><text x="83.4037%" y="1087.50"></text></g><g><title>stress_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.04%)</title><rect x="83.1537%" y="1061" width="0.0356%" height="15" fill="rgb(236,10,46)" fg:x="9334" fg:w="4"/><text x="83.4037%" y="1071.50"></text></g><g><title>stress_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="83.1715%" y="1045" width="0.0178%" height="15" fill="rgb(240,211,16)" fg:x="9336" fg:w="2"/><text x="83.4215%" y="1055.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (2 samples, 0.02%)</title><rect x="83.2517%" y="1061" width="0.0178%" height="15" fill="rgb(205,3,43)" fg:x="9345" fg:w="2"/><text x="83.5017%" y="1071.50"></text></g><g><title>stress_test`parking::Inner::unpark (2 samples, 0.02%)</title><rect x="83.2517%" y="1045" width="0.0178%" height="15" fill="rgb(245,7,22)" fg:x="9345" fg:w="2"/><text x="83.5017%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.02%)</title><rect x="83.2517%" y="1029" width="0.0178%" height="15" fill="rgb(239,132,32)" fg:x="9345" fg:w="2"/><text x="83.5017%" y="1039.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.02%)</title><rect x="83.2962%" y="1045" width="0.0178%" height="15" fill="rgb(228,202,34)" fg:x="9350" fg:w="2"/><text x="83.5462%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.02%)</title><rect x="83.2962%" y="1029" width="0.0178%" height="15" fill="rgb(254,200,22)" fg:x="9350" fg:w="2"/><text x="83.5462%" y="1039.50"></text></g><g><title>stress_test`&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="83.3229%" y="1045" width="0.0535%" height="15" fill="rgb(219,10,39)" fg:x="9353" fg:w="6"/><text x="83.5729%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.05%)</title><rect x="83.3229%" y="1029" width="0.0535%" height="15" fill="rgb(226,210,39)" fg:x="9353" fg:w="6"/><text x="83.5729%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.05%)</title><rect x="83.3229%" y="1013" width="0.0535%" height="15" fill="rgb(208,219,16)" fg:x="9353" fg:w="6"/><text x="83.5729%" y="1023.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.04%)</title><rect x="83.3764%" y="1045" width="0.0356%" height="15" fill="rgb(216,158,51)" fg:x="9359" fg:w="4"/><text x="83.6264%" y="1055.50"></text></g><g><title>stress_test`&lt;wgpu::QueueWriteBufferView as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.03%)</title><rect x="85.5234%" y="981" width="0.0267%" height="15" fill="rgb(233,14,44)" fg:x="9600" fg:w="3"/><text x="85.7734%" y="991.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::pipeline::BillboardUniform as encase::core::traits::WriteInto&gt;::write_into (217 samples, 1.93%)</title><rect x="83.6615%" y="997" width="1.9332%" height="15" fill="rgb(237,97,39)" fg:x="9391" fg:w="217"/><text x="83.9115%" y="1007.50">s..</text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::QueueWriteBuffer as wgpu::context::QueueWriteBuffer&gt;::slice_mut (5 samples, 0.04%)</title><rect x="85.5501%" y="981" width="0.0445%" height="15" fill="rgb(218,198,43)" fg:x="9603" fg:w="5"/><text x="85.8001%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::QueueWriteBufferView as core::ops::deref::DerefMut&gt;::deref_mut (15 samples, 0.13%)</title><rect x="85.5947%" y="997" width="0.1336%" height="15" fill="rgb(231,104,20)" fg:x="9608" fg:w="15"/><text x="85.8447%" y="1007.50"></text></g><g><title>stress_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (244 samples, 2.17%)</title><rect x="83.5635%" y="1013" width="2.1737%" height="15" fill="rgb(254,36,13)" fg:x="9380" fg:w="244"/><text x="83.8135%" y="1023.50">s..</text></g><g><title>stress_test`bevy_ecs::query::state::QueryState&lt;D,F&gt;::get_unchecked_manual (6 samples, 0.05%)</title><rect x="85.7817%" y="1013" width="0.0535%" height="15" fill="rgb(248,14,50)" fg:x="9629" fg:w="6"/><text x="86.0317%" y="1023.50"></text></g><g><title>stress_test`bevy_ecs::system::commands::Commands::spawn (2 samples, 0.02%)</title><rect x="85.8352%" y="1013" width="0.0178%" height="15" fill="rgb(217,107,29)" fg:x="9635" fg:w="2"/><text x="86.0852%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.05%)</title><rect x="86.9399%" y="917" width="0.0535%" height="15" fill="rgb(251,169,33)" fg:x="9759" fg:w="6"/><text x="87.1899%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.05%)</title><rect x="86.9399%" y="901" width="0.0535%" height="15" fill="rgb(217,108,32)" fg:x="9759" fg:w="6"/><text x="87.1899%" y="911.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.12%)</title><rect x="86.9220%" y="997" width="0.1158%" height="15" fill="rgb(219,66,42)" fg:x="9757" fg:w="13"/><text x="87.1720%" y="1007.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (13 samples, 0.12%)</title><rect x="86.9220%" y="981" width="0.1158%" height="15" fill="rgb(206,180,7)" fg:x="9757" fg:w="13"/><text x="87.1720%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.11%)</title><rect x="86.9310%" y="965" width="0.1069%" height="15" fill="rgb(208,226,31)" fg:x="9758" fg:w="12"/><text x="87.1810%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 0.10%)</title><rect x="86.9399%" y="949" width="0.0980%" height="15" fill="rgb(218,26,49)" fg:x="9759" fg:w="11"/><text x="87.1899%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (11 samples, 0.10%)</title><rect x="86.9399%" y="933" width="0.0980%" height="15" fill="rgb(233,197,48)" fg:x="9759" fg:w="11"/><text x="87.1899%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="87.0022%" y="917" width="0.0356%" height="15" fill="rgb(252,181,51)" fg:x="9766" fg:w="4"/><text x="87.2522%" y="927.50"></text></g><g><title>stress_test`bevy_ecs::query::state::QueryState&lt;D,F&gt;::get_unchecked_manual (3 samples, 0.03%)</title><rect x="87.0379%" y="997" width="0.0267%" height="15" fill="rgb(253,90,19)" fg:x="9770" fg:w="3"/><text x="87.2879%" y="1007.50"></text></g><g><title>stress_test`bevy_render::render_asset::RenderAssets&lt;A&gt;::get (121 samples, 1.08%)</title><rect x="87.0646%" y="997" width="1.0780%" height="15" fill="rgb(215,171,30)" fg:x="9773" fg:w="121"/><text x="87.3146%" y="1007.50"></text></g><g><title>stress_test`bevy_mod_billboard::pipeline::queue_billboard_texture (258 samples, 2.30%)</title><rect x="85.8530%" y="1013" width="2.2984%" height="15" fill="rgb(214,222,9)" fg:x="9637" fg:w="258"/><text x="86.1030%" y="1023.50">s..</text></g><g><title>stress_test`bevy_mod_billboard::text::extract_billboard_text (49 samples, 0.44%)</title><rect x="88.1514%" y="1013" width="0.4365%" height="15" fill="rgb(223,3,22)" fg:x="9895" fg:w="49"/><text x="88.4014%" y="1023.50"></text></g><g><title>stress_test`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="88.6860%" y="997" width="0.0267%" height="15" fill="rgb(225,196,46)" fg:x="9955" fg:w="3"/><text x="88.9360%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="88.7661%" y="965" width="0.0178%" height="15" fill="rgb(209,110,37)" fg:x="9964" fg:w="2"/><text x="89.0161%" y="975.50"></text></g><g><title>stress_test`&lt;glyph_brush_layout::characters::Characters&lt;L,F,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="88.7929%" y="965" width="0.0356%" height="15" fill="rgb(249,89,12)" fg:x="9967" fg:w="4"/><text x="89.0429%" y="975.50"></text></g><g><title>stress_test`&lt;char as glyph_brush_layout::linebreak::EolLineBreak&lt;B&gt;&gt;::eol_line_break (2 samples, 0.02%)</title><rect x="88.8107%" y="949" width="0.0178%" height="15" fill="rgb(226,27,33)" fg:x="9969" fg:w="2"/><text x="89.0607%" y="959.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="88.8374%" y="965" width="0.0178%" height="15" fill="rgb(213,82,22)" fg:x="9972" fg:w="2"/><text x="89.0874%" y="975.50"></text></g><g><title>stress_test`bevy_text::glyph_brush::GlyphBrush::compute_glyphs (13 samples, 0.12%)</title><rect x="88.7483%" y="981" width="0.1158%" height="15" fill="rgb(248,140,0)" fg:x="9962" fg:w="13"/><text x="88.9983%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="88.8909%" y="965" width="0.0178%" height="15" fill="rgb(228,106,3)" fg:x="9978" fg:w="2"/><text x="89.1409%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="88.9087%" y="965" width="0.0178%" height="15" fill="rgb(209,23,37)" fg:x="9980" fg:w="2"/><text x="89.1587%" y="975.50"></text></g><g><title>stress_test`&lt;ab_glyph::ttfp::outliner::OutlineCurveBuilder as ttf_parser::OutlineBuilder&gt;::close (3 samples, 0.03%)</title><rect x="89.1759%" y="917" width="0.0267%" height="15" fill="rgb(241,93,50)" fg:x="10010" fg:w="3"/><text x="89.4259%" y="927.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="89.1759%" y="901" width="0.0267%" height="15" fill="rgb(253,46,43)" fg:x="10010" fg:w="3"/><text x="89.4259%" y="911.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="89.1759%" y="885" width="0.0267%" height="15" fill="rgb(226,206,43)" fg:x="10010" fg:w="3"/><text x="89.4259%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.03%)</title><rect x="89.1759%" y="869" width="0.0267%" height="15" fill="rgb(217,54,7)" fg:x="10010" fg:w="3"/><text x="89.4259%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.03%)</title><rect x="89.1759%" y="853" width="0.0267%" height="15" fill="rgb(223,5,52)" fg:x="10010" fg:w="3"/><text x="89.4259%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.03%)</title><rect x="89.1759%" y="837" width="0.0267%" height="15" fill="rgb(206,52,46)" fg:x="10010" fg:w="3"/><text x="89.4259%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="89.1849%" y="821" width="0.0178%" height="15" fill="rgb(253,136,11)" fg:x="10011" fg:w="2"/><text x="89.4349%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="89.1849%" y="805" width="0.0178%" height="15" fill="rgb(208,106,33)" fg:x="10011" fg:w="2"/><text x="89.4349%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="89.2294%" y="837" width="0.0178%" height="15" fill="rgb(206,54,4)" fg:x="10016" fg:w="2"/><text x="89.4794%" y="847.50"></text></g><g><title>stress_test`&lt;ab_glyph::ttfp::outliner::OutlineCurveBuilder as ttf_parser::OutlineBuilder&gt;::line_to (7 samples, 0.06%)</title><rect x="89.2027%" y="917" width="0.0624%" height="15" fill="rgb(213,3,15)" fg:x="10013" fg:w="7"/><text x="89.4527%" y="927.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.04%)</title><rect x="89.2205%" y="901" width="0.0445%" height="15" fill="rgb(252,211,39)" fg:x="10015" fg:w="5"/><text x="89.4705%" y="911.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (5 samples, 0.04%)</title><rect x="89.2205%" y="885" width="0.0445%" height="15" fill="rgb(223,6,36)" fg:x="10015" fg:w="5"/><text x="89.4705%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.04%)</title><rect x="89.2205%" y="869" width="0.0445%" height="15" fill="rgb(252,169,45)" fg:x="10015" fg:w="5"/><text x="89.4705%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.04%)</title><rect x="89.2294%" y="853" width="0.0356%" height="15" fill="rgb(212,48,26)" fg:x="10016" fg:w="4"/><text x="89.4794%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="89.2472%" y="837" width="0.0178%" height="15" fill="rgb(251,102,48)" fg:x="10018" fg:w="2"/><text x="89.4972%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.04%)</title><rect x="89.3185%" y="837" width="0.0356%" height="15" fill="rgb(243,208,16)" fg:x="10026" fg:w="4"/><text x="89.5685%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.04%)</title><rect x="89.3185%" y="821" width="0.0356%" height="15" fill="rgb(219,96,24)" fg:x="10026" fg:w="4"/><text x="89.5685%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.04%)</title><rect x="89.3185%" y="805" width="0.0356%" height="15" fill="rgb(219,33,29)" fg:x="10026" fg:w="4"/><text x="89.5685%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="89.3630%" y="821" width="0.0178%" height="15" fill="rgb(223,176,5)" fg:x="10031" fg:w="2"/><text x="89.6130%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.04%)</title><rect x="89.3541%" y="837" width="0.0356%" height="15" fill="rgb(228,140,14)" fg:x="10030" fg:w="4"/><text x="89.6041%" y="847.50"></text></g><g><title>stress_test`&lt;ab_glyph::ttfp::outliner::OutlineCurveBuilder as ttf_parser::OutlineBuilder&gt;::quad_to (15 samples, 0.13%)</title><rect x="89.2650%" y="917" width="0.1336%" height="15" fill="rgb(217,179,31)" fg:x="10020" fg:w="15"/><text x="89.5150%" y="927.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.09%)</title><rect x="89.3096%" y="901" width="0.0891%" height="15" fill="rgb(230,9,30)" fg:x="10025" fg:w="10"/><text x="89.5596%" y="911.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (10 samples, 0.09%)</title><rect x="89.3096%" y="885" width="0.0891%" height="15" fill="rgb(230,136,20)" fg:x="10025" fg:w="10"/><text x="89.5596%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.09%)</title><rect x="89.3096%" y="869" width="0.0891%" height="15" fill="rgb(215,210,22)" fg:x="10025" fg:w="10"/><text x="89.5596%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.08%)</title><rect x="89.3185%" y="853" width="0.0802%" height="15" fill="rgb(218,43,5)" fg:x="10026" fg:w="9"/><text x="89.5685%" y="863.50"></text></g><g><title>stress_test`&lt;ab_glyph::ttfp::FontVec as ab_glyph::font::Font&gt;::outline (56 samples, 0.50%)</title><rect x="88.9354%" y="965" width="0.4989%" height="15" fill="rgb(216,11,5)" fg:x="9983" fg:w="56"/><text x="89.1854%" y="975.50"></text></g><g><title>stress_test`ttf_parser::Face::outline_glyph (55 samples, 0.49%)</title><rect x="88.9443%" y="949" width="0.4900%" height="15" fill="rgb(209,82,29)" fg:x="9984" fg:w="55"/><text x="89.1943%" y="959.50"></text></g><g><title>stress_test`ttf_parser::tables::glyf::outline_impl (52 samples, 0.46%)</title><rect x="88.9710%" y="933" width="0.4633%" height="15" fill="rgb(244,115,12)" fg:x="9987" fg:w="52"/><text x="89.2210%" y="943.50"></text></g><g><title>stress_test`ttf_parser::tables::glyf::resolve_coords_len (4 samples, 0.04%)</title><rect x="89.3987%" y="917" width="0.0356%" height="15" fill="rgb(222,82,18)" fg:x="10035" fg:w="4"/><text x="89.6487%" y="927.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="89.4432%" y="965" width="0.0178%" height="15" fill="rgb(249,227,8)" fg:x="10040" fg:w="2"/><text x="89.6932%" y="975.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="89.4432%" y="949" width="0.0178%" height="15" fill="rgb(253,141,45)" fg:x="10040" fg:w="2"/><text x="89.6932%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="89.4432%" y="933" width="0.0178%" height="15" fill="rgb(234,184,4)" fg:x="10040" fg:w="2"/><text x="89.6932%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="89.4432%" y="917" width="0.0178%" height="15" fill="rgb(218,194,23)" fg:x="10040" fg:w="2"/><text x="89.6932%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="89.4432%" y="901" width="0.0178%" height="15" fill="rgb(235,66,41)" fg:x="10040" fg:w="2"/><text x="89.6932%" y="911.50"></text></g><g><title>stress_test`bevy_text::font_atlas_set::FontAtlasSet::add_glyph_to_atlas (2 samples, 0.02%)</title><rect x="89.4610%" y="965" width="0.0178%" height="15" fill="rgb(245,217,1)" fg:x="10042" fg:w="2"/><text x="89.7110%" y="975.50"></text></g><g><title>stress_test`bevy_text::font_atlas::FontAtlas::new (2 samples, 0.02%)</title><rect x="89.4610%" y="949" width="0.0178%" height="15" fill="rgb(229,91,1)" fg:x="10042" fg:w="2"/><text x="89.7110%" y="959.50"></text></g><g><title>stress_test`bevy_render::texture::image::Image::new_fill (2 samples, 0.02%)</title><rect x="89.4610%" y="933" width="0.0178%" height="15" fill="rgb(207,101,30)" fg:x="10042" fg:w="2"/><text x="89.7110%" y="943.50"></text></g><g><title>stress_test`bevy_text::glyph_brush::GlyphBrush::process_glyphs (70 samples, 0.62%)</title><rect x="88.8641%" y="981" width="0.6236%" height="15" fill="rgb(223,82,49)" fg:x="9975" fg:w="70"/><text x="89.1141%" y="991.50"></text></g><g><title>stress_test`bevy_text::pipeline::TextPipeline::queue_text (90 samples, 0.80%)</title><rect x="88.7216%" y="997" width="0.8018%" height="15" fill="rgb(218,167,17)" fg:x="9959" fg:w="90"/><text x="88.9716%" y="1007.50"></text></g><g><title>stress_test`bevy_text::glyph_brush::compute_text_bounds (4 samples, 0.04%)</title><rect x="89.4878%" y="981" width="0.0356%" height="15" fill="rgb(208,103,14)" fg:x="10045" fg:w="4"/><text x="89.7378%" y="991.50"></text></g><g><title>stress_test`bevy_mod_billboard::text::update_billboard_text_layout (110 samples, 0.98%)</title><rect x="88.5880%" y="1013" width="0.9800%" height="15" fill="rgb(238,20,8)" fg:x="9944" fg:w="110"/><text x="88.8380%" y="1023.50"></text></g><g><title>stress_test`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (4 samples, 0.04%)</title><rect x="89.5323%" y="997" width="0.0356%" height="15" fill="rgb(218,80,54)" fg:x="10050" fg:w="4"/><text x="89.7823%" y="1007.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (4 samples, 0.04%)</title><rect x="89.5947%" y="885" width="0.0356%" height="15" fill="rgb(240,144,17)" fg:x="10057" fg:w="4"/><text x="89.8447%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (4 samples, 0.04%)</title><rect x="89.5947%" y="869" width="0.0356%" height="15" fill="rgb(245,27,50)" fg:x="10057" fg:w="4"/><text x="89.8447%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (4 samples, 0.04%)</title><rect x="89.5947%" y="853" width="0.0356%" height="15" fill="rgb(251,51,7)" fg:x="10057" fg:w="4"/><text x="89.8447%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (4 samples, 0.04%)</title><rect x="89.5947%" y="837" width="0.0356%" height="15" fill="rgb(245,217,29)" fg:x="10057" fg:w="4"/><text x="89.8447%" y="847.50"></text></g><g><title>Metal`0x7ff81c45b741 (4 samples, 0.04%)</title><rect x="89.5947%" y="821" width="0.0356%" height="15" fill="rgb(221,176,29)" fg:x="10057" fg:w="4"/><text x="89.8447%" y="831.50"></text></g><g><title>Metal`0x7ff81c3acc27 (4 samples, 0.04%)</title><rect x="89.5947%" y="805" width="0.0356%" height="15" fill="rgb(212,180,24)" fg:x="10057" fg:w="4"/><text x="89.8447%" y="815.50"></text></g><g><title>Metal`0x7ff81c3ace52 (3 samples, 0.03%)</title><rect x="89.6036%" y="789" width="0.0267%" height="15" fill="rgb(254,24,2)" fg:x="10058" fg:w="3"/><text x="89.8536%" y="799.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (3 samples, 0.03%)</title><rect x="89.6036%" y="773" width="0.0267%" height="15" fill="rgb(230,100,2)" fg:x="10058" fg:w="3"/><text x="89.8536%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a42b (3 samples, 0.03%)</title><rect x="89.6036%" y="757" width="0.0267%" height="15" fill="rgb(219,142,25)" fg:x="10058" fg:w="3"/><text x="89.8536%" y="767.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (3 samples, 0.03%)</title><rect x="89.6036%" y="741" width="0.0267%" height="15" fill="rgb(240,73,43)" fg:x="10058" fg:w="3"/><text x="89.8536%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.03%)</title><rect x="89.6036%" y="725" width="0.0267%" height="15" fill="rgb(214,114,15)" fg:x="10058" fg:w="3"/><text x="89.8536%" y="735.50"></text></g><g><title>stress_test`bevy_pbr::render::fog::prepare_fog (7 samples, 0.06%)</title><rect x="89.5857%" y="1013" width="0.0624%" height="15" fill="rgb(207,130,4)" fg:x="10056" fg:w="7"/><text x="89.8357%" y="1023.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (7 samples, 0.06%)</title><rect x="89.5857%" y="997" width="0.0624%" height="15" fill="rgb(221,25,40)" fg:x="10056" fg:w="7"/><text x="89.8357%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (7 samples, 0.06%)</title><rect x="89.5857%" y="981" width="0.0624%" height="15" fill="rgb(241,184,7)" fg:x="10056" fg:w="7"/><text x="89.8357%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (7 samples, 0.06%)</title><rect x="89.5857%" y="965" width="0.0624%" height="15" fill="rgb(235,159,4)" fg:x="10056" fg:w="7"/><text x="89.8357%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (7 samples, 0.06%)</title><rect x="89.5857%" y="949" width="0.0624%" height="15" fill="rgb(214,87,48)" fg:x="10056" fg:w="7"/><text x="89.8357%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (7 samples, 0.06%)</title><rect x="89.5857%" y="933" width="0.0624%" height="15" fill="rgb(246,198,24)" fg:x="10056" fg:w="7"/><text x="89.8357%" y="943.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (6 samples, 0.05%)</title><rect x="89.5947%" y="917" width="0.0535%" height="15" fill="rgb(209,66,40)" fg:x="10057" fg:w="6"/><text x="89.8447%" y="927.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (6 samples, 0.05%)</title><rect x="89.5947%" y="901" width="0.0535%" height="15" fill="rgb(233,147,39)" fg:x="10057" fg:w="6"/><text x="89.8447%" y="911.50"></text></g><g><title>stress_test`parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="89.6303%" y="885" width="0.0178%" height="15" fill="rgb(231,145,52)" fg:x="10061" fg:w="2"/><text x="89.8803%" y="895.50"></text></g><g><title>stress_test`bevy_pbr::render::light::extract_clusters (2 samples, 0.02%)</title><rect x="89.6481%" y="1013" width="0.0178%" height="15" fill="rgb(206,20,26)" fg:x="10063" fg:w="2"/><text x="89.8981%" y="1023.50"></text></g><g><title>stress_test`bevy_pbr::render::light::ViewClusterBindings::push_offset_and_counts (4 samples, 0.04%)</title><rect x="89.6927%" y="997" width="0.0356%" height="15" fill="rgb(238,220,4)" fg:x="10068" fg:w="4"/><text x="89.9427%" y="1007.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="89.7105%" y="981" width="0.0178%" height="15" fill="rgb(252,195,42)" fg:x="10070" fg:w="2"/><text x="89.9605%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="89.7283%" y="949" width="0.0178%" height="15" fill="rgb(209,10,6)" fg:x="10072" fg:w="2"/><text x="89.9783%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.04%)</title><rect x="89.7461%" y="901" width="0.0445%" height="15" fill="rgb(229,3,52)" fg:x="10074" fg:w="5"/><text x="89.9961%" y="911.50"></text></g><g><title>stress_test`bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (14 samples, 0.12%)</title><rect x="89.7283%" y="981" width="0.1247%" height="15" fill="rgb(253,49,37)" fg:x="10072" fg:w="14"/><text x="89.9783%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (14 samples, 0.12%)</title><rect x="89.7283%" y="965" width="0.1247%" height="15" fill="rgb(240,103,49)" fg:x="10072" fg:w="14"/><text x="89.9783%" y="975.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (12 samples, 0.11%)</title><rect x="89.7461%" y="949" width="0.1069%" height="15" fill="rgb(250,182,30)" fg:x="10074" fg:w="12"/><text x="89.9961%" y="959.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (12 samples, 0.11%)</title><rect x="89.7461%" y="933" width="0.1069%" height="15" fill="rgb(248,8,30)" fg:x="10074" fg:w="12"/><text x="89.9961%" y="943.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (12 samples, 0.11%)</title><rect x="89.7461%" y="917" width="0.1069%" height="15" fill="rgb(237,120,30)" fg:x="10074" fg:w="12"/><text x="89.9961%" y="927.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (7 samples, 0.06%)</title><rect x="89.7906%" y="901" width="0.0624%" height="15" fill="rgb(221,146,34)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="911.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (7 samples, 0.06%)</title><rect x="89.7906%" y="885" width="0.0624%" height="15" fill="rgb(242,55,13)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="895.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (7 samples, 0.06%)</title><rect x="89.7906%" y="869" width="0.0624%" height="15" fill="rgb(242,112,31)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (7 samples, 0.06%)</title><rect x="89.7906%" y="853" width="0.0624%" height="15" fill="rgb(249,192,27)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (7 samples, 0.06%)</title><rect x="89.7906%" y="837" width="0.0624%" height="15" fill="rgb(208,204,44)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="847.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (7 samples, 0.06%)</title><rect x="89.7906%" y="821" width="0.0624%" height="15" fill="rgb(208,93,54)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="831.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (7 samples, 0.06%)</title><rect x="89.7906%" y="805" width="0.0624%" height="15" fill="rgb(242,1,31)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="815.50"></text></g><g><title>Metal`0x7ff81c45b741 (7 samples, 0.06%)</title><rect x="89.7906%" y="789" width="0.0624%" height="15" fill="rgb(241,83,25)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="799.50"></text></g><g><title>Metal`0x7ff81c3acc27 (7 samples, 0.06%)</title><rect x="89.7906%" y="773" width="0.0624%" height="15" fill="rgb(205,169,50)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="783.50"></text></g><g><title>Metal`0x7ff81c3ace52 (7 samples, 0.06%)</title><rect x="89.7906%" y="757" width="0.0624%" height="15" fill="rgb(239,186,37)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="767.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (7 samples, 0.06%)</title><rect x="89.7906%" y="741" width="0.0624%" height="15" fill="rgb(205,221,10)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="751.50"></text></g><g><title>IOKit`0x7ff815d1a42b (7 samples, 0.06%)</title><rect x="89.7906%" y="725" width="0.0624%" height="15" fill="rgb(218,196,15)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="735.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (7 samples, 0.06%)</title><rect x="89.7906%" y="709" width="0.0624%" height="15" fill="rgb(218,196,35)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.06%)</title><rect x="89.7906%" y="693" width="0.0624%" height="15" fill="rgb(233,63,24)" fg:x="10079" fg:w="7"/><text x="90.0406%" y="703.50"></text></g><g><title>stress_test`bevy_pbr::render::light::prepare_clusters (24 samples, 0.21%)</title><rect x="89.6748%" y="1013" width="0.2138%" height="15" fill="rgb(225,8,4)" fg:x="10066" fg:w="24"/><text x="89.9248%" y="1023.50"></text></g><g><title>stress_test`bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T&gt;::write_buffer (18 samples, 0.16%)</title><rect x="89.7283%" y="997" width="0.1604%" height="15" fill="rgb(234,105,35)" fg:x="10072" fg:w="18"/><text x="89.9783%" y="1007.50"></text></g><g><title>stress_test`encase::types::runtime_sized_array::_&lt;impl encase::core::traits::WriteInto for alloc::vec::Vec&lt;T&gt;&gt;::write_into (4 samples, 0.04%)</title><rect x="89.8530%" y="981" width="0.0356%" height="15" fill="rgb(236,21,32)" fg:x="10086" fg:w="4"/><text x="90.1030%" y="991.50"></text></g><g><title>stress_test`bevy_render::render_resource::texture::Texture::create_view (4 samples, 0.04%)</title><rect x="89.8886%" y="997" width="0.0356%" height="15" fill="rgb(228,109,6)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="1007.50"></text></g><g><title>stress_test`wgpu::Texture::create_view (4 samples, 0.04%)</title><rect x="89.8886%" y="981" width="0.0356%" height="15" fill="rgb(229,215,31)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="991.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::texture_create_view (4 samples, 0.04%)</title><rect x="89.8886%" y="965" width="0.0356%" height="15" fill="rgb(221,52,54)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="975.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::texture_create_view (4 samples, 0.04%)</title><rect x="89.8886%" y="949" width="0.0356%" height="15" fill="rgb(252,129,43)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::texture_create_view (4 samples, 0.04%)</title><rect x="89.8886%" y="933" width="0.0356%" height="15" fill="rgb(248,183,27)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="943.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_texture_view (4 samples, 0.04%)</title><rect x="89.8886%" y="917" width="0.0356%" height="15" fill="rgb(250,0,22)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="927.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_texture_view (4 samples, 0.04%)</title><rect x="89.8886%" y="901" width="0.0356%" height="15" fill="rgb(213,166,10)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="911.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (4 samples, 0.04%)</title><rect x="89.8886%" y="885" width="0.0356%" height="15" fill="rgb(207,163,36)" fg:x="10090" fg:w="4"/><text x="90.1386%" y="895.50"></text></g><g><title>stress_test`metal::texture::TextureRef::new_texture_view_from_slice (2 samples, 0.02%)</title><rect x="89.9065%" y="869" width="0.0178%" height="15" fill="rgb(208,122,22)" fg:x="10092" fg:w="2"/><text x="90.1565%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlTexture newTextureViewWithPixelFormat:textureType:levels:slices:] (2 samples, 0.02%)</title><rect x="89.9065%" y="853" width="0.0178%" height="15" fill="rgb(207,104,49)" fg:x="10092" fg:w="2"/><text x="90.1565%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlTexture initWithTexture:pixelFormat:textureType:levels:slices:swizzle:resourceIndex:] (2 samples, 0.02%)</title><rect x="89.9065%" y="837" width="0.0178%" height="15" fill="rgb(248,211,50)" fg:x="10092" fg:w="2"/><text x="90.1565%" y="847.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (5 samples, 0.04%)</title><rect x="89.9243%" y="997" width="0.0445%" height="15" fill="rgb(217,13,45)" fg:x="10094" fg:w="5"/><text x="90.1743%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (5 samples, 0.04%)</title><rect x="89.9243%" y="981" width="0.0445%" height="15" fill="rgb(211,216,49)" fg:x="10094" fg:w="5"/><text x="90.1743%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (5 samples, 0.04%)</title><rect x="89.9243%" y="965" width="0.0445%" height="15" fill="rgb(221,58,53)" fg:x="10094" fg:w="5"/><text x="90.1743%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (5 samples, 0.04%)</title><rect x="89.9243%" y="949" width="0.0445%" height="15" fill="rgb(220,112,41)" fg:x="10094" fg:w="5"/><text x="90.1743%" y="959.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (5 samples, 0.04%)</title><rect x="89.9688%" y="981" width="0.0445%" height="15" fill="rgb(236,38,28)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (5 samples, 0.04%)</title><rect x="89.9688%" y="965" width="0.0445%" height="15" fill="rgb(227,195,22)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (5 samples, 0.04%)</title><rect x="89.9688%" y="949" width="0.0445%" height="15" fill="rgb(214,55,33)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (5 samples, 0.04%)</title><rect x="89.9688%" y="933" width="0.0445%" height="15" fill="rgb(248,80,13)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="943.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (5 samples, 0.04%)</title><rect x="89.9688%" y="917" width="0.0445%" height="15" fill="rgb(238,52,6)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="927.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (5 samples, 0.04%)</title><rect x="89.9688%" y="901" width="0.0445%" height="15" fill="rgb(224,198,47)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="911.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (5 samples, 0.04%)</title><rect x="89.9688%" y="885" width="0.0445%" height="15" fill="rgb(233,171,20)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (5 samples, 0.04%)</title><rect x="89.9688%" y="869" width="0.0445%" height="15" fill="rgb(241,30,25)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (5 samples, 0.04%)</title><rect x="89.9688%" y="853" width="0.0445%" height="15" fill="rgb(207,171,38)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (5 samples, 0.04%)</title><rect x="89.9688%" y="837" width="0.0445%" height="15" fill="rgb(234,70,1)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="847.50"></text></g><g><title>Metal`0x7ff81c45b741 (5 samples, 0.04%)</title><rect x="89.9688%" y="821" width="0.0445%" height="15" fill="rgb(232,178,18)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="831.50"></text></g><g><title>Metal`0x7ff81c3acc27 (5 samples, 0.04%)</title><rect x="89.9688%" y="805" width="0.0445%" height="15" fill="rgb(241,78,40)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="815.50"></text></g><g><title>Metal`0x7ff81c3ace52 (5 samples, 0.04%)</title><rect x="89.9688%" y="789" width="0.0445%" height="15" fill="rgb(222,35,25)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="799.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (5 samples, 0.04%)</title><rect x="89.9688%" y="773" width="0.0445%" height="15" fill="rgb(207,92,16)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a42b (5 samples, 0.04%)</title><rect x="89.9688%" y="757" width="0.0445%" height="15" fill="rgb(216,59,51)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="767.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (5 samples, 0.04%)</title><rect x="89.9688%" y="741" width="0.0445%" height="15" fill="rgb(213,80,28)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.04%)</title><rect x="89.9688%" y="725" width="0.0445%" height="15" fill="rgb(220,93,7)" fg:x="10099" fg:w="5"/><text x="90.2188%" y="735.50"></text></g><g><title>stress_test`bevy_pbr::render::light::prepare_lights (15 samples, 0.13%)</title><rect x="89.8886%" y="1013" width="0.1336%" height="15" fill="rgb(225,24,44)" fg:x="10090" fg:w="15"/><text x="90.1386%" y="1023.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (6 samples, 0.05%)</title><rect x="89.9688%" y="997" width="0.0535%" height="15" fill="rgb(243,74,40)" fg:x="10099" fg:w="6"/><text x="90.2188%" y="1007.50"></text></g><g><title>stress_test`bevy_pbr::render::mesh_view_bindings::prepare_mesh_view_bind_groups (4 samples, 0.04%)</title><rect x="90.0223%" y="1013" width="0.0356%" height="15" fill="rgb(228,39,7)" fg:x="10105" fg:w="4"/><text x="90.2723%" y="1023.50"></text></g><g><title>stress_test`wgpu::Device::create_bind_group (4 samples, 0.04%)</title><rect x="90.0223%" y="997" width="0.0356%" height="15" fill="rgb(227,79,8)" fg:x="10105" fg:w="4"/><text x="90.2723%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (4 samples, 0.04%)</title><rect x="90.0223%" y="981" width="0.0356%" height="15" fill="rgb(236,58,11)" fg:x="10105" fg:w="4"/><text x="90.2723%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_bind_group (4 samples, 0.04%)</title><rect x="90.0223%" y="965" width="0.0356%" height="15" fill="rgb(249,63,35)" fg:x="10105" fg:w="4"/><text x="90.2723%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_bind_group (3 samples, 0.03%)</title><rect x="90.0312%" y="949" width="0.0267%" height="15" fill="rgb(252,114,16)" fg:x="10106" fg:w="3"/><text x="90.2812%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_bind_group (3 samples, 0.03%)</title><rect x="90.0312%" y="933" width="0.0267%" height="15" fill="rgb(254,151,24)" fg:x="10106" fg:w="3"/><text x="90.2812%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="90.0846%" y="933" width="0.0356%" height="15" fill="rgb(253,54,39)" fg:x="10112" fg:w="4"/><text x="90.3346%" y="943.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (4 samples, 0.04%)</title><rect x="90.1292%" y="885" width="0.0356%" height="15" fill="rgb(243,25,45)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (4 samples, 0.04%)</title><rect x="90.1292%" y="869" width="0.0356%" height="15" fill="rgb(234,134,9)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (4 samples, 0.04%)</title><rect x="90.1292%" y="853" width="0.0356%" height="15" fill="rgb(227,166,31)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (4 samples, 0.04%)</title><rect x="90.1292%" y="837" width="0.0356%" height="15" fill="rgb(245,143,41)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="847.50"></text></g><g><title>Metal`0x7ff81c45b741 (4 samples, 0.04%)</title><rect x="90.1292%" y="821" width="0.0356%" height="15" fill="rgb(238,181,32)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="831.50"></text></g><g><title>Metal`0x7ff81c3acc27 (4 samples, 0.04%)</title><rect x="90.1292%" y="805" width="0.0356%" height="15" fill="rgb(224,113,18)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="815.50"></text></g><g><title>Metal`0x7ff81c3ace52 (4 samples, 0.04%)</title><rect x="90.1292%" y="789" width="0.0356%" height="15" fill="rgb(240,229,28)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="799.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (4 samples, 0.04%)</title><rect x="90.1292%" y="773" width="0.0356%" height="15" fill="rgb(250,185,3)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a42b (4 samples, 0.04%)</title><rect x="90.1292%" y="757" width="0.0356%" height="15" fill="rgb(212,59,25)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="767.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (4 samples, 0.04%)</title><rect x="90.1292%" y="741" width="0.0356%" height="15" fill="rgb(221,87,20)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.04%)</title><rect x="90.1292%" y="725" width="0.0356%" height="15" fill="rgb(213,74,28)" fg:x="10117" fg:w="4"/><text x="90.3792%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.02%)</title><rect x="90.1737%" y="869" width="0.0178%" height="15" fill="rgb(224,132,34)" fg:x="10122" fg:w="2"/><text x="90.4237%" y="879.50"></text></g><g><title>stress_test`bevy_render::render_resource::buffer_vec::BufferVec&lt;T&gt;::write_buffer (13 samples, 0.12%)</title><rect x="90.0846%" y="1013" width="0.1158%" height="15" fill="rgb(222,101,24)" fg:x="10112" fg:w="13"/><text x="90.3346%" y="1023.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (13 samples, 0.12%)</title><rect x="90.0846%" y="997" width="0.1158%" height="15" fill="rgb(254,142,4)" fg:x="10112" fg:w="13"/><text x="90.3346%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (13 samples, 0.12%)</title><rect x="90.0846%" y="981" width="0.1158%" height="15" fill="rgb(230,229,49)" fg:x="10112" fg:w="13"/><text x="90.3346%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (13 samples, 0.12%)</title><rect x="90.0846%" y="965" width="0.1158%" height="15" fill="rgb(238,70,47)" fg:x="10112" fg:w="13"/><text x="90.3346%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.12%)</title><rect x="90.0846%" y="949" width="0.1158%" height="15" fill="rgb(231,160,17)" fg:x="10112" fg:w="13"/><text x="90.3346%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (9 samples, 0.08%)</title><rect x="90.1203%" y="933" width="0.0802%" height="15" fill="rgb(218,68,53)" fg:x="10116" fg:w="9"/><text x="90.3703%" y="943.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (9 samples, 0.08%)</title><rect x="90.1203%" y="917" width="0.0802%" height="15" fill="rgb(236,111,10)" fg:x="10116" fg:w="9"/><text x="90.3703%" y="927.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (8 samples, 0.07%)</title><rect x="90.1292%" y="901" width="0.0713%" height="15" fill="rgb(224,34,41)" fg:x="10117" fg:w="8"/><text x="90.3792%" y="911.50"></text></g><g><title>stress_test`parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 0.03%)</title><rect x="90.1737%" y="885" width="0.0267%" height="15" fill="rgb(241,118,19)" fg:x="10122" fg:w="3"/><text x="90.4237%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (8 samples, 0.07%)</title><rect x="90.2450%" y="885" width="0.0713%" height="15" fill="rgb(238,129,25)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (8 samples, 0.07%)</title><rect x="90.2450%" y="869" width="0.0713%" height="15" fill="rgb(238,22,31)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (8 samples, 0.07%)</title><rect x="90.2450%" y="853" width="0.0713%" height="15" fill="rgb(222,174,48)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (8 samples, 0.07%)</title><rect x="90.2450%" y="837" width="0.0713%" height="15" fill="rgb(206,152,40)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="847.50"></text></g><g><title>Metal`0x7ff81c45b741 (8 samples, 0.07%)</title><rect x="90.2450%" y="821" width="0.0713%" height="15" fill="rgb(218,99,54)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="831.50"></text></g><g><title>Metal`0x7ff81c3acc27 (8 samples, 0.07%)</title><rect x="90.2450%" y="805" width="0.0713%" height="15" fill="rgb(220,174,26)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="815.50"></text></g><g><title>Metal`0x7ff81c3ace52 (8 samples, 0.07%)</title><rect x="90.2450%" y="789" width="0.0713%" height="15" fill="rgb(245,116,9)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="799.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (8 samples, 0.07%)</title><rect x="90.2450%" y="773" width="0.0713%" height="15" fill="rgb(209,72,35)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a42b (8 samples, 0.07%)</title><rect x="90.2450%" y="757" width="0.0713%" height="15" fill="rgb(226,126,21)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="767.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (8 samples, 0.07%)</title><rect x="90.2450%" y="741" width="0.0713%" height="15" fill="rgb(227,192,1)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.07%)</title><rect x="90.2450%" y="725" width="0.0713%" height="15" fill="rgb(237,180,29)" fg:x="10130" fg:w="8"/><text x="90.4950%" y="735.50"></text></g><g><title>stress_test`bevy_render::view::prepare_view_uniforms (14 samples, 0.12%)</title><rect x="90.2004%" y="1013" width="0.1247%" height="15" fill="rgb(230,197,35)" fg:x="10125" fg:w="14"/><text x="90.4504%" y="1023.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (9 samples, 0.08%)</title><rect x="90.2450%" y="997" width="0.0802%" height="15" fill="rgb(246,193,31)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (9 samples, 0.08%)</title><rect x="90.2450%" y="981" width="0.0802%" height="15" fill="rgb(241,36,4)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (9 samples, 0.08%)</title><rect x="90.2450%" y="965" width="0.0802%" height="15" fill="rgb(241,130,17)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (9 samples, 0.08%)</title><rect x="90.2450%" y="949" width="0.0802%" height="15" fill="rgb(206,137,32)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (9 samples, 0.08%)</title><rect x="90.2450%" y="933" width="0.0802%" height="15" fill="rgb(237,228,51)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="943.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (9 samples, 0.08%)</title><rect x="90.2450%" y="917" width="0.0802%" height="15" fill="rgb(243,6,42)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="927.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (9 samples, 0.08%)</title><rect x="90.2450%" y="901" width="0.0802%" height="15" fill="rgb(251,74,28)" fg:x="10130" fg:w="9"/><text x="90.4950%" y="911.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::pipeline::BillboardUniform as encase::core::traits::WriteInto&gt;::write_into (3 samples, 0.03%)</title><rect x="90.3786%" y="853" width="0.0267%" height="15" fill="rgb(218,20,49)" fg:x="10145" fg:w="3"/><text x="90.6286%" y="863.50"></text></g><g><title>stress_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="90.3786%" y="869" width="0.0356%" height="15" fill="rgb(238,28,14)" fg:x="10145" fg:w="4"/><text x="90.6286%" y="879.50"></text></g><g><title>stress_test`bevy_render::render_asset::RenderAssets&lt;A&gt;::get (17 samples, 0.15%)</title><rect x="90.7350%" y="853" width="0.1514%" height="15" fill="rgb(229,40,46)" fg:x="10185" fg:w="17"/><text x="90.9850%" y="863.50"></text></g><g><title>stress_test`bevy_mod_billboard::pipeline::queue_billboard_texture (53 samples, 0.47%)</title><rect x="90.4232%" y="869" width="0.4722%" height="15" fill="rgb(244,195,20)" fg:x="10150" fg:w="53"/><text x="90.6732%" y="879.50"></text></g><g><title>stress_test`bevy_pbr::render::fog::prepare_fog (4 samples, 0.04%)</title><rect x="90.8953%" y="869" width="0.0356%" height="15" fill="rgb(253,56,35)" fg:x="10203" fg:w="4"/><text x="91.1453%" y="879.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (2 samples, 0.02%)</title><rect x="90.9131%" y="853" width="0.0178%" height="15" fill="rgb(210,149,44)" fg:x="10205" fg:w="2"/><text x="91.1631%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (6 samples, 0.05%)</title><rect x="90.9488%" y="693" width="0.0535%" height="15" fill="rgb(240,135,12)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="703.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (6 samples, 0.05%)</title><rect x="90.9488%" y="677" width="0.0535%" height="15" fill="rgb(251,24,50)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="687.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (6 samples, 0.05%)</title><rect x="90.9488%" y="661" width="0.0535%" height="15" fill="rgb(243,200,47)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="671.50"></text></g><g><title>Metal`0x7ff81c45b741 (6 samples, 0.05%)</title><rect x="90.9488%" y="645" width="0.0535%" height="15" fill="rgb(224,166,26)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="655.50"></text></g><g><title>Metal`0x7ff81c3acc27 (6 samples, 0.05%)</title><rect x="90.9488%" y="629" width="0.0535%" height="15" fill="rgb(233,0,47)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="639.50"></text></g><g><title>Metal`0x7ff81c3ace52 (6 samples, 0.05%)</title><rect x="90.9488%" y="613" width="0.0535%" height="15" fill="rgb(253,80,5)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="623.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (6 samples, 0.05%)</title><rect x="90.9488%" y="597" width="0.0535%" height="15" fill="rgb(214,133,25)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="607.50"></text></g><g><title>IOKit`0x7ff815d1a42b (6 samples, 0.05%)</title><rect x="90.9488%" y="581" width="0.0535%" height="15" fill="rgb(209,27,14)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="591.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (6 samples, 0.05%)</title><rect x="90.9488%" y="565" width="0.0535%" height="15" fill="rgb(219,102,51)" fg:x="10209" fg:w="6"/><text x="91.1988%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.04%)</title><rect x="90.9577%" y="549" width="0.0445%" height="15" fill="rgb(237,18,16)" fg:x="10210" fg:w="5"/><text x="91.2077%" y="559.50"></text></g><g><title>stress_test`bevy_pbr::render::light::prepare_clusters (9 samples, 0.08%)</title><rect x="90.9310%" y="869" width="0.0802%" height="15" fill="rgb(241,85,17)" fg:x="10207" fg:w="9"/><text x="91.1810%" y="879.50"></text></g><g><title>stress_test`bevy_render::render_resource::storage_buffer::StorageBuffer&lt;T&gt;::write_buffer (8 samples, 0.07%)</title><rect x="90.9399%" y="853" width="0.0713%" height="15" fill="rgb(236,90,42)" fg:x="10208" fg:w="8"/><text x="91.1899%" y="863.50"></text></g><g><title>stress_test`bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (8 samples, 0.07%)</title><rect x="90.9399%" y="837" width="0.0713%" height="15" fill="rgb(249,57,21)" fg:x="10208" fg:w="8"/><text x="91.1899%" y="847.50"></text></g><g><title>stress_test`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (8 samples, 0.07%)</title><rect x="90.9399%" y="821" width="0.0713%" height="15" fill="rgb(243,12,36)" fg:x="10208" fg:w="8"/><text x="91.1899%" y="831.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (7 samples, 0.06%)</title><rect x="90.9488%" y="805" width="0.0624%" height="15" fill="rgb(253,128,47)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="815.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (7 samples, 0.06%)</title><rect x="90.9488%" y="789" width="0.0624%" height="15" fill="rgb(207,33,20)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="799.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (7 samples, 0.06%)</title><rect x="90.9488%" y="773" width="0.0624%" height="15" fill="rgb(233,215,35)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="783.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (7 samples, 0.06%)</title><rect x="90.9488%" y="757" width="0.0624%" height="15" fill="rgb(249,188,52)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="767.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (7 samples, 0.06%)</title><rect x="90.9488%" y="741" width="0.0624%" height="15" fill="rgb(225,12,32)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="751.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (7 samples, 0.06%)</title><rect x="90.9488%" y="725" width="0.0624%" height="15" fill="rgb(247,98,14)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (7 samples, 0.06%)</title><rect x="90.9488%" y="709" width="0.0624%" height="15" fill="rgb(247,219,48)" fg:x="10209" fg:w="7"/><text x="91.1988%" y="719.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (3 samples, 0.03%)</title><rect x="91.0200%" y="853" width="0.0267%" height="15" fill="rgb(253,60,48)" fg:x="10217" fg:w="3"/><text x="91.2700%" y="863.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (3 samples, 0.03%)</title><rect x="91.0200%" y="837" width="0.0267%" height="15" fill="rgb(245,15,52)" fg:x="10217" fg:w="3"/><text x="91.2700%" y="847.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (3 samples, 0.03%)</title><rect x="91.0200%" y="821" width="0.0267%" height="15" fill="rgb(220,133,28)" fg:x="10217" fg:w="3"/><text x="91.2700%" y="831.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (3 samples, 0.03%)</title><rect x="91.0200%" y="805" width="0.0267%" height="15" fill="rgb(217,180,4)" fg:x="10217" fg:w="3"/><text x="91.2700%" y="815.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.02%)</title><rect x="91.0290%" y="789" width="0.0178%" height="15" fill="rgb(251,24,1)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="799.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (2 samples, 0.02%)</title><rect x="91.0290%" y="773" width="0.0178%" height="15" fill="rgb(212,185,49)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="783.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="91.0290%" y="757" width="0.0178%" height="15" fill="rgb(215,175,22)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="767.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (2 samples, 0.02%)</title><rect x="91.0290%" y="741" width="0.0178%" height="15" fill="rgb(250,205,14)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="751.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (2 samples, 0.02%)</title><rect x="91.0290%" y="725" width="0.0178%" height="15" fill="rgb(225,211,22)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (2 samples, 0.02%)</title><rect x="91.0290%" y="709" width="0.0178%" height="15" fill="rgb(251,179,42)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (2 samples, 0.02%)</title><rect x="91.0290%" y="693" width="0.0178%" height="15" fill="rgb(208,216,51)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="703.50"></text></g><g><title>Metal`0x7ff81c45b741 (2 samples, 0.02%)</title><rect x="91.0290%" y="677" width="0.0178%" height="15" fill="rgb(235,36,11)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="687.50"></text></g><g><title>Metal`0x7ff81c3acc27 (2 samples, 0.02%)</title><rect x="91.0290%" y="661" width="0.0178%" height="15" fill="rgb(213,189,28)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="671.50"></text></g><g><title>Metal`0x7ff81c3ace52 (2 samples, 0.02%)</title><rect x="91.0290%" y="645" width="0.0178%" height="15" fill="rgb(227,203,42)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="655.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (2 samples, 0.02%)</title><rect x="91.0290%" y="629" width="0.0178%" height="15" fill="rgb(244,72,36)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="639.50"></text></g><g><title>IOKit`0x7ff815d1a42b (2 samples, 0.02%)</title><rect x="91.0290%" y="613" width="0.0178%" height="15" fill="rgb(213,53,17)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="623.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (2 samples, 0.02%)</title><rect x="91.0290%" y="597" width="0.0178%" height="15" fill="rgb(207,167,3)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="91.0290%" y="581" width="0.0178%" height="15" fill="rgb(216,98,30)" fg:x="10218" fg:w="2"/><text x="91.2790%" y="591.50"></text></g><g><title>stress_test`bevy_pbr::render::light::prepare_lights (6 samples, 0.05%)</title><rect x="91.0111%" y="869" width="0.0535%" height="15" fill="rgb(236,123,15)" fg:x="10216" fg:w="6"/><text x="91.2611%" y="879.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (2 samples, 0.02%)</title><rect x="91.0468%" y="853" width="0.0178%" height="15" fill="rgb(248,81,50)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="863.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="91.0468%" y="837" width="0.0178%" height="15" fill="rgb(214,120,4)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="847.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="91.0468%" y="821" width="0.0178%" height="15" fill="rgb(208,179,34)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="831.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="91.0468%" y="805" width="0.0178%" height="15" fill="rgb(227,140,7)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="815.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.02%)</title><rect x="91.0468%" y="789" width="0.0178%" height="15" fill="rgb(214,22,6)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="799.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (2 samples, 0.02%)</title><rect x="91.0468%" y="773" width="0.0178%" height="15" fill="rgb(207,137,27)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="783.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="91.0468%" y="757" width="0.0178%" height="15" fill="rgb(210,8,46)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="767.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (2 samples, 0.02%)</title><rect x="91.0468%" y="741" width="0.0178%" height="15" fill="rgb(240,16,54)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="751.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (2 samples, 0.02%)</title><rect x="91.0468%" y="725" width="0.0178%" height="15" fill="rgb(211,209,29)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (2 samples, 0.02%)</title><rect x="91.0468%" y="709" width="0.0178%" height="15" fill="rgb(226,228,24)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="719.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (2 samples, 0.02%)</title><rect x="91.0468%" y="693" width="0.0178%" height="15" fill="rgb(222,84,9)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="703.50"></text></g><g><title>Metal`0x7ff81c45b741 (2 samples, 0.02%)</title><rect x="91.0468%" y="677" width="0.0178%" height="15" fill="rgb(234,203,30)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="687.50"></text></g><g><title>Metal`0x7ff81c3acc27 (2 samples, 0.02%)</title><rect x="91.0468%" y="661" width="0.0178%" height="15" fill="rgb(238,109,14)" fg:x="10220" fg:w="2"/><text x="91.2968%" y="671.50"></text></g><g><title>stress_test`bevy_render::render_resource::buffer_vec::BufferVec&lt;T&gt;::write_buffer (2 samples, 0.02%)</title><rect x="91.0646%" y="869" width="0.0178%" height="15" fill="rgb(233,206,34)" fg:x="10222" fg:w="2"/><text x="91.3146%" y="879.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (2 samples, 0.02%)</title><rect x="91.0646%" y="853" width="0.0178%" height="15" fill="rgb(220,167,47)" fg:x="10222" fg:w="2"/><text x="91.3146%" y="863.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2 samples, 0.02%)</title><rect x="91.0646%" y="837" width="0.0178%" height="15" fill="rgb(238,105,10)" fg:x="10222" fg:w="2"/><text x="91.3146%" y="847.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (2 samples, 0.02%)</title><rect x="91.0646%" y="821" width="0.0178%" height="15" fill="rgb(213,227,17)" fg:x="10222" fg:w="2"/><text x="91.3146%" y="831.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (2 samples, 0.02%)</title><rect x="91.0646%" y="805" width="0.0178%" height="15" fill="rgb(217,132,38)" fg:x="10222" fg:w="2"/><text x="91.3146%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="91.0646%" y="789" width="0.0178%" height="15" fill="rgb(242,146,4)" fg:x="10222" fg:w="2"/><text x="91.3146%" y="799.50"></text></g><g><title>stress_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="91.0824%" y="869" width="0.0267%" height="15" fill="rgb(212,61,9)" fg:x="10224" fg:w="3"/><text x="91.3324%" y="879.50"></text></g><g><title>stress_test`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (2 samples, 0.02%)</title><rect x="91.1091%" y="869" width="0.0178%" height="15" fill="rgb(247,126,22)" fg:x="10227" fg:w="2"/><text x="91.3591%" y="879.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (86 samples, 0.77%)</title><rect x="90.3786%" y="885" width="0.7661%" height="15" fill="rgb(220,196,2)" fg:x="10145" fg:w="86"/><text x="90.6286%" y="895.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (2 samples, 0.02%)</title><rect x="91.1269%" y="869" width="0.0178%" height="15" fill="rgb(208,46,4)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="879.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="91.1269%" y="853" width="0.0178%" height="15" fill="rgb(252,104,46)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="863.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="91.1269%" y="837" width="0.0178%" height="15" fill="rgb(237,152,48)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="847.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (2 samples, 0.02%)</title><rect x="91.1269%" y="821" width="0.0178%" height="15" fill="rgb(221,59,37)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="831.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.02%)</title><rect x="91.1269%" y="805" width="0.0178%" height="15" fill="rgb(209,202,51)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="815.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (2 samples, 0.02%)</title><rect x="91.1269%" y="789" width="0.0178%" height="15" fill="rgb(228,81,30)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="799.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="91.1269%" y="773" width="0.0178%" height="15" fill="rgb(227,42,39)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="783.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (2 samples, 0.02%)</title><rect x="91.1269%" y="757" width="0.0178%" height="15" fill="rgb(221,26,2)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="767.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (2 samples, 0.02%)</title><rect x="91.1269%" y="741" width="0.0178%" height="15" fill="rgb(254,61,31)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="751.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (2 samples, 0.02%)</title><rect x="91.1269%" y="725" width="0.0178%" height="15" fill="rgb(222,173,38)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (2 samples, 0.02%)</title><rect x="91.1269%" y="709" width="0.0178%" height="15" fill="rgb(218,50,12)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="719.50"></text></g><g><title>Metal`0x7ff81c45b741 (2 samples, 0.02%)</title><rect x="91.1269%" y="693" width="0.0178%" height="15" fill="rgb(223,88,40)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="703.50"></text></g><g><title>Metal`0x7ff81c3acc27 (2 samples, 0.02%)</title><rect x="91.1269%" y="677" width="0.0178%" height="15" fill="rgb(237,54,19)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="687.50"></text></g><g><title>Metal`0x7ff81c3ace52 (2 samples, 0.02%)</title><rect x="91.1269%" y="661" width="0.0178%" height="15" fill="rgb(251,129,25)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (2 samples, 0.02%)</title><rect x="91.1269%" y="645" width="0.0178%" height="15" fill="rgb(238,97,19)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="655.50"></text></g><g><title>IOKit`0x7ff815d1a42b (2 samples, 0.02%)</title><rect x="91.1269%" y="629" width="0.0178%" height="15" fill="rgb(240,169,18)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="639.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (2 samples, 0.02%)</title><rect x="91.1269%" y="613" width="0.0178%" height="15" fill="rgb(230,187,49)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="91.1269%" y="597" width="0.0178%" height="15" fill="rgb(209,44,26)" fg:x="10229" fg:w="2"/><text x="91.3769%" y="607.50"></text></g><g><title>stress_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (103 samples, 0.92%)</title><rect x="90.3430%" y="949" width="0.9176%" height="15" fill="rgb(244,0,6)" fg:x="10141" fg:w="103"/><text x="90.5930%" y="959.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (102 samples, 0.91%)</title><rect x="90.3519%" y="933" width="0.9087%" height="15" fill="rgb(248,18,21)" fg:x="10142" fg:w="102"/><text x="90.6019%" y="943.50"></text></g><g><title>stress_test`std::panicking::try (102 samples, 0.91%)</title><rect x="90.3519%" y="917" width="0.9087%" height="15" fill="rgb(245,180,19)" fg:x="10142" fg:w="102"/><text x="90.6019%" y="927.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (102 samples, 0.91%)</title><rect x="90.3519%" y="901" width="0.9087%" height="15" fill="rgb(252,118,36)" fg:x="10142" fg:w="102"/><text x="90.6019%" y="911.50"></text></g><g><title>stress_test`bevy_render::view::visibility::check_visibility::_{{closure}} (13 samples, 0.12%)</title><rect x="91.1448%" y="885" width="0.1158%" height="15" fill="rgb(210,224,19)" fg:x="10231" fg:w="13"/><text x="91.3948%" y="895.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (104 samples, 0.93%)</title><rect x="90.3430%" y="965" width="0.9265%" height="15" fill="rgb(218,30,24)" fg:x="10141" fg:w="104"/><text x="90.5930%" y="975.50"></text></g><g><title>stress_test`bevy_render::view::visibility::check_visibility (107 samples, 0.95%)</title><rect x="90.3252%" y="1013" width="0.9532%" height="15" fill="rgb(219,75,50)" fg:x="10139" fg:w="107"/><text x="90.5752%" y="1023.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope (106 samples, 0.94%)</title><rect x="90.3341%" y="997" width="0.9443%" height="15" fill="rgb(234,72,50)" fg:x="10140" fg:w="106"/><text x="90.5841%" y="1007.50"></text></g><g><title>stress_test`futures_lite::future::block_on (105 samples, 0.94%)</title><rect x="90.3430%" y="981" width="0.9354%" height="15" fill="rgb(219,100,48)" fg:x="10141" fg:w="105"/><text x="90.5930%" y="991.50"></text></g><g><title>QuartzCore`CA::Render::create_iosurface_with_pixel_format (2 samples, 0.02%)</title><rect x="91.2962%" y="869" width="0.0178%" height="15" fill="rgb(253,5,41)" fg:x="10248" fg:w="2"/><text x="91.5462%" y="879.50"></text></g><g><title>stress_test`bevy_render::view::window::prepare_windows (5 samples, 0.04%)</title><rect x="91.2784%" y="1013" width="0.0445%" height="15" fill="rgb(247,181,11)" fg:x="10246" fg:w="5"/><text x="91.5284%" y="1023.50"></text></g><g><title>stress_test`wgpu::Surface::get_current_texture (5 samples, 0.04%)</title><rect x="91.2784%" y="997" width="0.0445%" height="15" fill="rgb(222,223,25)" fg:x="10246" fg:w="5"/><text x="91.5284%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (5 samples, 0.04%)</title><rect x="91.2784%" y="981" width="0.0445%" height="15" fill="rgb(214,198,28)" fg:x="10246" fg:w="5"/><text x="91.5284%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_get_current_texture (5 samples, 0.04%)</title><rect x="91.2784%" y="965" width="0.0445%" height="15" fill="rgb(230,46,43)" fg:x="10246" fg:w="5"/><text x="91.5284%" y="975.50"></text></g><g><title>stress_test`wgpu_core::present::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::surface_get_current_texture (5 samples, 0.04%)</title><rect x="91.2784%" y="949" width="0.0445%" height="15" fill="rgb(233,65,53)" fg:x="10246" fg:w="5"/><text x="91.5284%" y="959.50"></text></g><g><title>stress_test`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (3 samples, 0.03%)</title><rect x="91.2962%" y="933" width="0.0267%" height="15" fill="rgb(221,121,27)" fg:x="10248" fg:w="3"/><text x="91.5462%" y="943.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (3 samples, 0.03%)</title><rect x="91.2962%" y="917" width="0.0267%" height="15" fill="rgb(247,70,47)" fg:x="10248" fg:w="3"/><text x="91.5462%" y="927.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (3 samples, 0.03%)</title><rect x="91.2962%" y="901" width="0.0267%" height="15" fill="rgb(228,85,35)" fg:x="10248" fg:w="3"/><text x="91.5462%" y="911.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (3 samples, 0.03%)</title><rect x="91.2962%" y="885" width="0.0267%" height="15" fill="rgb(209,50,18)" fg:x="10248" fg:w="3"/><text x="91.5462%" y="895.50"></text></g><g><title>stress_test`bevy_sprite::mesh2d::mesh::prepare_mesh2d_view_bind_groups (2 samples, 0.02%)</title><rect x="91.3229%" y="1013" width="0.0178%" height="15" fill="rgb(250,19,35)" fg:x="10251" fg:w="2"/><text x="91.5729%" y="1023.50"></text></g><g><title>stress_test`wgpu::Device::create_bind_group (2 samples, 0.02%)</title><rect x="91.3229%" y="997" width="0.0178%" height="15" fill="rgb(253,107,29)" fg:x="10251" fg:w="2"/><text x="91.5729%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (2 samples, 0.02%)</title><rect x="91.3229%" y="981" width="0.0178%" height="15" fill="rgb(252,179,29)" fg:x="10251" fg:w="2"/><text x="91.5729%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_bind_group (2 samples, 0.02%)</title><rect x="91.3229%" y="965" width="0.0178%" height="15" fill="rgb(238,194,6)" fg:x="10251" fg:w="2"/><text x="91.5729%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_bind_group (2 samples, 0.02%)</title><rect x="91.3229%" y="949" width="0.0178%" height="15" fill="rgb(238,164,29)" fg:x="10251" fg:w="2"/><text x="91.5729%" y="959.50"></text></g><g><title>stress_test`bevy_sprite::render::prepare_sprites (2 samples, 0.02%)</title><rect x="91.3408%" y="1013" width="0.0178%" height="15" fill="rgb(224,25,9)" fg:x="10253" fg:w="2"/><text x="91.5908%" y="1023.50"></text></g><g><title>stress_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="91.3942%" y="869" width="0.0178%" height="15" fill="rgb(244,153,23)" fg:x="10259" fg:w="2"/><text x="91.6442%" y="879.50"></text></g><g><title>stress_test`&lt;bevy_mod_billboard::pipeline::BillboardUniform as encase::core::traits::WriteInto&gt;::write_into (2 samples, 0.02%)</title><rect x="91.3942%" y="853" width="0.0178%" height="15" fill="rgb(212,203,14)" fg:x="10259" fg:w="2"/><text x="91.6442%" y="863.50"></text></g><g><title>stress_test`bevy_pbr::render::light::prepare_lights (2 samples, 0.02%)</title><rect x="91.4120%" y="869" width="0.0178%" height="15" fill="rgb(220,164,20)" fg:x="10261" fg:w="2"/><text x="91.6620%" y="879.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (7 samples, 0.06%)</title><rect x="91.3764%" y="933" width="0.0624%" height="15" fill="rgb(222,203,48)" fg:x="10257" fg:w="7"/><text x="91.6264%" y="943.50"></text></g><g><title>stress_test`std::panicking::try (7 samples, 0.06%)</title><rect x="91.3764%" y="917" width="0.0624%" height="15" fill="rgb(215,159,22)" fg:x="10257" fg:w="7"/><text x="91.6264%" y="927.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.06%)</title><rect x="91.3764%" y="901" width="0.0624%" height="15" fill="rgb(216,183,47)" fg:x="10257" fg:w="7"/><text x="91.6264%" y="911.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (5 samples, 0.04%)</title><rect x="91.3942%" y="885" width="0.0445%" height="15" fill="rgb(229,195,25)" fg:x="10259" fg:w="5"/><text x="91.6442%" y="895.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::TaskPool::scope (9 samples, 0.08%)</title><rect x="91.3675%" y="997" width="0.0802%" height="15" fill="rgb(224,132,51)" fg:x="10256" fg:w="9"/><text x="91.6175%" y="1007.50"></text></g><g><title>stress_test`futures_lite::future::block_on (9 samples, 0.08%)</title><rect x="91.3675%" y="981" width="0.0802%" height="15" fill="rgb(240,63,7)" fg:x="10256" fg:w="9"/><text x="91.6175%" y="991.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.08%)</title><rect x="91.3675%" y="965" width="0.0802%" height="15" fill="rgb(249,182,41)" fg:x="10256" fg:w="9"/><text x="91.6175%" y="975.50"></text></g><g><title>stress_test`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8 samples, 0.07%)</title><rect x="91.3764%" y="949" width="0.0713%" height="15" fill="rgb(243,47,26)" fg:x="10257" fg:w="8"/><text x="91.6264%" y="959.50"></text></g><g><title>stress_test`bevy_transform::systems::sync_simple_transforms (10 samples, 0.09%)</title><rect x="91.3675%" y="1013" width="0.0891%" height="15" fill="rgb(233,48,2)" fg:x="10256" fg:w="10"/><text x="91.6175%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (2 samples, 0.02%)</title><rect x="91.7060%" y="917" width="0.0178%" height="15" fill="rgb(244,165,34)" fg:x="10294" fg:w="2"/><text x="91.9560%" y="927.50"></text></g><g><title>stress_test`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.07%)</title><rect x="91.6615%" y="981" width="0.0713%" height="15" fill="rgb(207,89,7)" fg:x="10289" fg:w="8"/><text x="91.9115%" y="991.50"></text></g><g><title>stress_test`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.05%)</title><rect x="91.6793%" y="965" width="0.0535%" height="15" fill="rgb(244,117,36)" fg:x="10291" fg:w="6"/><text x="91.9293%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.04%)</title><rect x="91.6882%" y="949" width="0.0445%" height="15" fill="rgb(226,144,34)" fg:x="10292" fg:w="5"/><text x="91.9382%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.04%)</title><rect x="91.6971%" y="933" width="0.0356%" height="15" fill="rgb(213,23,19)" fg:x="10293" fg:w="4"/><text x="91.9471%" y="943.50"></text></g><g><title>stress_test`&lt;bevy_render::render_resource::buffer::Buffer as core::convert::From&lt;wgpu::Buffer&gt;&gt;::from (2 samples, 0.02%)</title><rect x="91.7327%" y="981" width="0.0178%" height="15" fill="rgb(217,75,12)" fg:x="10297" fg:w="2"/><text x="91.9827%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="91.7327%" y="965" width="0.0178%" height="15" fill="rgb(224,159,17)" fg:x="10297" fg:w="2"/><text x="91.9827%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="91.7595%" y="901" width="0.0178%" height="15" fill="rgb(217,118,1)" fg:x="10300" fg:w="2"/><text x="92.0095%" y="911.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="91.7773%" y="901" width="0.0178%" height="15" fill="rgb(232,180,48)" fg:x="10302" fg:w="2"/><text x="92.0273%" y="911.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="91.7773%" y="885" width="0.0178%" height="15" fill="rgb(230,27,33)" fg:x="10302" fg:w="2"/><text x="92.0273%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="91.7773%" y="869" width="0.0178%" height="15" fill="rgb(205,31,21)" fg:x="10302" fg:w="2"/><text x="92.0273%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="91.7773%" y="853" width="0.0178%" height="15" fill="rgb(253,59,4)" fg:x="10302" fg:w="2"/><text x="92.0273%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="91.7773%" y="837" width="0.0178%" height="15" fill="rgb(224,201,9)" fg:x="10302" fg:w="2"/><text x="92.0273%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="91.7773%" y="821" width="0.0178%" height="15" fill="rgb(229,206,30)" fg:x="10302" fg:w="2"/><text x="92.0273%" y="831.50"></text></g><g><title>AMDMTLBronzeDriver`amdBronzeBlitSplitSegment(BronzeMtlBlitCmdEncoder*, unsigned int, _eAMDMTL_SubmitChannel) (2 samples, 0.02%)</title><rect x="91.8129%" y="869" width="0.0178%" height="15" fill="rgb(212,67,47)" fg:x="10306" fg:w="2"/><text x="92.0629%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`SiDmaBltMgr::ExecuteDrmDmaBlt (2 samples, 0.02%)</title><rect x="91.8753%" y="837" width="0.0178%" height="15" fill="rgb(211,96,50)" fg:x="10313" fg:w="2"/><text x="92.1253%" y="847.50"></text></g><g><title>AMDMTLBronzeDriver`SiDmaBltDevice::WriteSdmaNopCmd (2 samples, 0.02%)</title><rect x="91.8753%" y="821" width="0.0178%" height="15" fill="rgb(252,114,18)" fg:x="10313" fg:w="2"/><text x="92.1253%" y="831.50"></text></g><g><title>AMDMTLBronzeDriver`DmaBltMgr::Memcpy (7 samples, 0.06%)</title><rect x="91.8396%" y="853" width="0.0624%" height="15" fill="rgb(223,58,37)" fg:x="10309" fg:w="7"/><text x="92.0896%" y="863.50"></text></g><g><title>stress_test`wgpu_core::resource::Buffer&lt;A&gt;::unmap (17 samples, 0.15%)</title><rect x="91.7595%" y="917" width="0.1514%" height="15" fill="rgb(237,70,4)" fg:x="10300" fg:w="17"/><text x="92.0095%" y="927.50"></text></g><g><title>stress_test`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (12 samples, 0.11%)</title><rect x="91.8040%" y="901" width="0.1069%" height="15" fill="rgb(244,85,46)" fg:x="10305" fg:w="12"/><text x="92.0540%" y="911.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeRsrcMemMove(BronzeMtlBlitCmdEncoder*, MTLIOAccelResource*, unsigned long long, MTLIOAccelResource*, unsigned long long, unsigned long long) (12 samples, 0.11%)</title><rect x="91.8040%" y="885" width="0.1069%" height="15" fill="rgb(223,39,52)" fg:x="10305" fg:w="12"/><text x="92.0540%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeDoMemcpy(BronzeUBMInterfaceRec*, BronzeCmdBufInfoRec*, _UBM_MEMCPYINFO*, RgpSqttMarkerEventType) (8 samples, 0.07%)</title><rect x="91.8396%" y="869" width="0.0713%" height="15" fill="rgb(218,200,14)" fg:x="10309" fg:w="8"/><text x="92.0896%" y="879.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (19 samples, 0.17%)</title><rect x="91.7506%" y="965" width="0.1693%" height="15" fill="rgb(208,171,16)" fg:x="10299" fg:w="19"/><text x="92.0006%" y="975.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::buffer_unmap (19 samples, 0.17%)</title><rect x="91.7506%" y="949" width="0.1693%" height="15" fill="rgb(234,200,18)" fg:x="10299" fg:w="19"/><text x="92.0006%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::buffer_unmap (19 samples, 0.17%)</title><rect x="91.7506%" y="933" width="0.1693%" height="15" fill="rgb(228,45,11)" fg:x="10299" fg:w="19"/><text x="92.0006%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="92.0178%" y="917" width="0.0178%" height="15" fill="rgb(237,182,11)" fg:x="10329" fg:w="2"/><text x="92.2678%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (54 samples, 0.48%)</title><rect x="92.0356%" y="917" width="0.4811%" height="15" fill="rgb(241,175,49)" fg:x="10331" fg:w="54"/><text x="92.2856%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="92.5612%" y="901" width="0.0267%" height="15" fill="rgb(247,38,35)" fg:x="10390" fg:w="3"/><text x="92.8112%" y="911.50"></text></g><g><title>Metal`0x7ff81c3accae (5 samples, 0.04%)</title><rect x="92.6592%" y="773" width="0.0445%" height="15" fill="rgb(228,39,49)" fg:x="10401" fg:w="5"/><text x="92.9092%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (5 samples, 0.04%)</title><rect x="92.6592%" y="757" width="0.0445%" height="15" fill="rgb(226,101,26)" fg:x="10401" fg:w="5"/><text x="92.9092%" y="767.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (3 samples, 0.03%)</title><rect x="92.6771%" y="741" width="0.0267%" height="15" fill="rgb(206,141,19)" fg:x="10403" fg:w="3"/><text x="92.9271%" y="751.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (3 samples, 0.03%)</title><rect x="92.6771%" y="725" width="0.0267%" height="15" fill="rgb(211,200,13)" fg:x="10403" fg:w="3"/><text x="92.9271%" y="735.50"></text></g><g><title>libobjc.A.dylib`object_setClass (2 samples, 0.02%)</title><rect x="92.7305%" y="709" width="0.0178%" height="15" fill="rgb(241,121,6)" fg:x="10409" fg:w="2"/><text x="92.9805%" y="719.50"></text></g><g><title>IOAccelerator`0x7ff81c39af00 (5 samples, 0.04%)</title><rect x="92.7216%" y="741" width="0.0445%" height="15" fill="rgb(234,221,29)" fg:x="10408" fg:w="5"/><text x="92.9716%" y="751.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (5 samples, 0.04%)</title><rect x="92.7216%" y="725" width="0.0445%" height="15" fill="rgb(229,136,5)" fg:x="10408" fg:w="5"/><text x="92.9716%" y="735.50"></text></g><g><title>IOAccelerator`0x7ff81c39b259 (13 samples, 0.12%)</title><rect x="92.7216%" y="757" width="0.1158%" height="15" fill="rgb(238,36,11)" fg:x="10408" fg:w="13"/><text x="92.9716%" y="767.50"></text></g><g><title>IOAccelerator`0x7ff81c39af1c (7 samples, 0.06%)</title><rect x="92.7751%" y="741" width="0.0624%" height="15" fill="rgb(251,55,41)" fg:x="10414" fg:w="7"/><text x="93.0251%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_internal (2 samples, 0.02%)</title><rect x="92.8463%" y="709" width="0.0178%" height="15" fill="rgb(242,34,40)" fg:x="10422" fg:w="2"/><text x="93.0963%" y="719.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (369 samples, 3.29%)</title><rect x="92.8463%" y="725" width="3.2873%" height="15" fill="rgb(215,42,17)" fg:x="10422" fg:w="369"/><text x="93.0963%" y="735.50">IOK..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (367 samples, 3.27%)</title><rect x="92.8641%" y="709" width="3.2695%" height="15" fill="rgb(207,44,46)" fg:x="10424" fg:w="367"/><text x="93.1141%" y="719.50">lib..</text></g><g><title>IOAccelerator`0x7ff81c39b28f (372 samples, 3.31%)</title><rect x="92.8374%" y="757" width="3.3140%" height="15" fill="rgb(211,206,28)" fg:x="10421" fg:w="372"/><text x="93.0874%" y="767.50">IOA..</text></g><g><title>IOKit`0x7ff815d1a42b (372 samples, 3.31%)</title><rect x="92.8374%" y="741" width="3.3140%" height="15" fill="rgb(237,167,16)" fg:x="10421" fg:w="372"/><text x="93.0874%" y="751.50">IOK..</text></g><g><title>IOAccelerator`0x7ff81c39b33b (2 samples, 0.02%)</title><rect x="96.1604%" y="757" width="0.0178%" height="15" fill="rgb(233,66,6)" fg:x="10794" fg:w="2"/><text x="96.4104%" y="767.50"></text></g><g><title>Metal`0x7ff81c3ace52 (390 samples, 3.47%)</title><rect x="92.7127%" y="773" width="3.4744%" height="15" fill="rgb(246,123,29)" fg:x="10407" fg:w="390"/><text x="92.9627%" y="783.50">Met..</text></g><g><title>Metal`0x7ff81c3ace71 (3 samples, 0.03%)</title><rect x="96.1960%" y="773" width="0.0267%" height="15" fill="rgb(209,62,40)" fg:x="10798" fg:w="3"/><text x="96.4460%" y="783.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (405 samples, 3.61%)</title><rect x="92.6325%" y="821" width="3.6080%" height="15" fill="rgb(218,4,25)" fg:x="10398" fg:w="405"/><text x="92.8825%" y="831.50">AMDM..</text></g><g><title>Metal`0x7ff81c45b741 (405 samples, 3.61%)</title><rect x="92.6325%" y="805" width="3.6080%" height="15" fill="rgb(253,91,49)" fg:x="10398" fg:w="405"/><text x="92.8825%" y="815.50">Meta..</text></g><g><title>Metal`0x7ff81c3acc27 (405 samples, 3.61%)</title><rect x="92.6325%" y="789" width="3.6080%" height="15" fill="rgb(228,155,29)" fg:x="10398" fg:w="405"/><text x="92.8825%" y="799.50">Meta..</text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (407 samples, 3.63%)</title><rect x="92.6236%" y="837" width="3.6258%" height="15" fill="rgb(243,57,37)" fg:x="10397" fg:w="407"/><text x="92.8736%" y="847.50">AMDM..</text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (408 samples, 3.63%)</title><rect x="92.6236%" y="853" width="3.6347%" height="15" fill="rgb(244,167,17)" fg:x="10397" fg:w="408"/><text x="92.8736%" y="863.50">AMDM..</text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (414 samples, 3.69%)</title><rect x="92.6236%" y="869" width="3.6882%" height="15" fill="rgb(207,181,38)" fg:x="10397" fg:w="414"/><text x="92.8736%" y="879.50">AMDM..</text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (6 samples, 0.05%)</title><rect x="96.2584%" y="853" width="0.0535%" height="15" fill="rgb(211,8,23)" fg:x="10805" fg:w="6"/><text x="96.5084%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="96.2673%" y="837" width="0.0445%" height="15" fill="rgb(235,11,44)" fg:x="10806" fg:w="5"/><text x="96.5173%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="96.2673%" y="821" width="0.0445%" height="15" fill="rgb(248,18,52)" fg:x="10806" fg:w="5"/><text x="96.5173%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="96.2940%" y="805" width="0.0178%" height="15" fill="rgb(208,4,7)" fg:x="10809" fg:w="2"/><text x="96.5440%" y="815.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (2 samples, 0.02%)</title><rect x="96.3474%" y="869" width="0.0178%" height="15" fill="rgb(240,17,39)" fg:x="10815" fg:w="2"/><text x="96.5974%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="96.3831%" y="853" width="0.0178%" height="15" fill="rgb(207,170,3)" fg:x="10819" fg:w="2"/><text x="96.6331%" y="863.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (5 samples, 0.04%)</title><rect x="96.4365%" y="805" width="0.0445%" height="15" fill="rgb(236,100,52)" fg:x="10825" fg:w="5"/><text x="96.6865%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (3 samples, 0.03%)</title><rect x="96.4543%" y="789" width="0.0267%" height="15" fill="rgb(246,78,51)" fg:x="10827" fg:w="3"/><text x="96.7043%" y="799.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (3 samples, 0.03%)</title><rect x="96.4811%" y="805" width="0.0267%" height="15" fill="rgb(211,17,15)" fg:x="10830" fg:w="3"/><text x="96.7311%" y="815.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (14 samples, 0.12%)</title><rect x="96.4009%" y="837" width="0.1247%" height="15" fill="rgb(209,59,46)" fg:x="10821" fg:w="14"/><text x="96.6509%" y="847.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (14 samples, 0.12%)</title><rect x="96.4009%" y="821" width="0.1247%" height="15" fill="rgb(210,92,25)" fg:x="10821" fg:w="14"/><text x="96.6509%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.02%)</title><rect x="96.5078%" y="805" width="0.0178%" height="15" fill="rgb(238,174,52)" fg:x="10833" fg:w="2"/><text x="96.7578%" y="815.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_buffer (449 samples, 4.00%)</title><rect x="92.5345%" y="917" width="4.0000%" height="15" fill="rgb(230,73,7)" fg:x="10387" fg:w="449"/><text x="92.7845%" y="927.50">stre..</text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (443 samples, 3.95%)</title><rect x="92.5880%" y="901" width="3.9465%" height="15" fill="rgb(243,124,40)" fg:x="10393" fg:w="443"/><text x="92.8380%" y="911.50">stre..</text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (440 samples, 3.92%)</title><rect x="92.6147%" y="885" width="3.9198%" height="15" fill="rgb(244,170,11)" fg:x="10396" fg:w="440"/><text x="92.8647%" y="895.50">stre..</text></g><g><title>stress_test`metal::resource::ResourceRef::set_label (18 samples, 0.16%)</title><rect x="96.3742%" y="869" width="0.1604%" height="15" fill="rgb(207,114,54)" fg:x="10818" fg:w="18"/><text x="96.6242%" y="879.50"></text></g><g><title>stress_test`metal::nsstring_from_str (15 samples, 0.13%)</title><rect x="96.4009%" y="853" width="0.1336%" height="15" fill="rgb(205,42,20)" fg:x="10821" fg:w="15"/><text x="96.6509%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="96.5345%" y="885" width="0.0178%" height="15" fill="rgb(230,30,28)" fg:x="10836" fg:w="2"/><text x="96.7845%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="96.5345%" y="869" width="0.0178%" height="15" fill="rgb(205,73,54)" fg:x="10836" fg:w="2"/><text x="96.7845%" y="879.50"></text></g><g><title>stress_test`wgpu_core::registry::FutureId&lt;I,T&gt;::init (5 samples, 0.04%)</title><rect x="96.5345%" y="901" width="0.0445%" height="15" fill="rgb(254,227,23)" fg:x="10836" fg:w="5"/><text x="96.7845%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="96.5523%" y="885" width="0.0267%" height="15" fill="rgb(228,202,34)" fg:x="10838" fg:w="3"/><text x="96.8023%" y="895.50"></text></g><g><title>stress_test`&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (2 samples, 0.02%)</title><rect x="96.5791%" y="885" width="0.0178%" height="15" fill="rgb(222,225,37)" fg:x="10841" fg:w="2"/><text x="96.8291%" y="895.50"></text></g><g><title>stress_test`wgpu_core::registry::FutureId&lt;I,T&gt;::assign (8 samples, 0.07%)</title><rect x="96.5345%" y="917" width="0.0713%" height="15" fill="rgb(221,14,54)" fg:x="10836" fg:w="8"/><text x="96.7845%" y="927.50"></text></g><g><title>stress_test`wgpu_core::storage::Storage&lt;T,I&gt;::insert (3 samples, 0.03%)</title><rect x="96.5791%" y="901" width="0.0267%" height="15" fill="rgb(254,102,2)" fg:x="10841" fg:w="3"/><text x="96.8291%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.04%)</title><rect x="96.6058%" y="901" width="0.0356%" height="15" fill="rgb(232,104,17)" fg:x="10844" fg:w="4"/><text x="96.8558%" y="911.50"></text></g><g><title>stress_test`wgpu_core::registry::FutureId&lt;I,T&gt;::init (5 samples, 0.04%)</title><rect x="96.6058%" y="917" width="0.0445%" height="15" fill="rgb(250,220,14)" fg:x="10844" fg:w="5"/><text x="96.8558%" y="927.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (534 samples, 4.76%)</title><rect x="91.9198%" y="965" width="4.7572%" height="15" fill="rgb(241,158,9)" fg:x="10318" fg:w="534"/><text x="92.1698%" y="975.50">stress..</text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_buffer (534 samples, 4.76%)</title><rect x="91.9198%" y="949" width="4.7572%" height="15" fill="rgb(246,9,43)" fg:x="10318" fg:w="534"/><text x="92.1698%" y="959.50">stress..</text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_buffer (530 samples, 4.72%)</title><rect x="91.9555%" y="933" width="4.7216%" height="15" fill="rgb(206,73,33)" fg:x="10322" fg:w="530"/><text x="92.2055%" y="943.50">stress..</text></g><g><title>stress_test`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::insert_single (2 samples, 0.02%)</title><rect x="96.6592%" y="917" width="0.0178%" height="15" fill="rgb(222,79,8)" fg:x="10850" fg:w="2"/><text x="96.9092%" y="927.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::buffer_get_mapped_range (2 samples, 0.02%)</title><rect x="96.6860%" y="949" width="0.0178%" height="15" fill="rgb(234,8,54)" fg:x="10853" fg:w="2"/><text x="96.9360%" y="959.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::buffer_get_mapped_range (2 samples, 0.02%)</title><rect x="96.6860%" y="933" width="0.0178%" height="15" fill="rgb(209,134,38)" fg:x="10853" fg:w="2"/><text x="96.9360%" y="943.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::buffer_get_mapped_range (2 samples, 0.02%)</title><rect x="96.6860%" y="917" width="0.0178%" height="15" fill="rgb(230,127,29)" fg:x="10853" fg:w="2"/><text x="96.9360%" y="927.50"></text></g><g><title>stress_test`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (559 samples, 4.98%)</title><rect x="91.7506%" y="981" width="4.9800%" height="15" fill="rgb(242,44,41)" fg:x="10299" fg:w="559"/><text x="92.0006%" y="991.50">stress..</text></g><g><title>stress_test`wgpu::BufferSlice::get_mapped_range_mut (5 samples, 0.04%)</title><rect x="96.6860%" y="965" width="0.0445%" height="15" fill="rgb(222,56,43)" fg:x="10853" fg:w="5"/><text x="96.9360%" y="975.50"></text></g><g><title>stress_test`wgpu::MapContext::add (2 samples, 0.02%)</title><rect x="96.7127%" y="949" width="0.0178%" height="15" fill="rgb(238,39,47)" fg:x="10856" fg:w="2"/><text x="96.9627%" y="959.50"></text></g><g><title>stress_test`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="96.7127%" y="933" width="0.0178%" height="15" fill="rgb(226,79,43)" fg:x="10856" fg:w="2"/><text x="96.9627%" y="943.50"></text></g><g><title>stress_test`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="96.7127%" y="917" width="0.0178%" height="15" fill="rgb(242,105,53)" fg:x="10856" fg:w="2"/><text x="96.9627%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="96.7127%" y="901" width="0.0178%" height="15" fill="rgb(251,132,46)" fg:x="10856" fg:w="2"/><text x="96.9627%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="96.7483%" y="965" width="0.0267%" height="15" fill="rgb(231,77,14)" fg:x="10860" fg:w="3"/><text x="96.9983%" y="975.50"></text></g><g><title>stress_test`bevy_render::mesh::mesh::Mesh::get_mesh_vertex_buffer_layout (5 samples, 0.04%)</title><rect x="96.7394%" y="981" width="0.0445%" height="15" fill="rgb(240,135,9)" fg:x="10859" fg:w="5"/><text x="96.9894%" y="991.50"></text></g><g><title>stress_test`bevy_render::mesh::mesh::Mesh::get_vertex_buffer_data (6 samples, 0.05%)</title><rect x="96.7840%" y="981" width="0.0535%" height="15" fill="rgb(248,109,14)" fg:x="10864" fg:w="6"/><text x="97.0340%" y="991.50"></text></g><g><title>stress_test`&lt;bevy_render::mesh::mesh::Mesh as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (587 samples, 5.23%)</title><rect x="91.6169%" y="997" width="5.2294%" height="15" fill="rgb(227,146,52)" fg:x="10284" fg:w="587"/><text x="91.8669%" y="1007.50">stress..</text></g><g><title>stress_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.13%)</title><rect x="96.8552%" y="997" width="0.1336%" height="15" fill="rgb(232,54,3)" fg:x="10872" fg:w="15"/><text x="97.1052%" y="1007.50"></text></g><g><title>stress_test`&lt;bevy_pbr::render::mesh::MeshPipeline as bevy_render::batching::GetBatchData&gt;::get_batch_data (4 samples, 0.04%)</title><rect x="96.9532%" y="981" width="0.0356%" height="15" fill="rgb(229,201,43)" fg:x="10883" fg:w="4"/><text x="97.2032%" y="991.50"></text></g><g><title>stress_test`&lt;u32 as radsort::sort::RadixKey&gt;::radix_sort_u32 (7 samples, 0.06%)</title><rect x="96.9889%" y="997" width="0.0624%" height="15" fill="rgb(252,161,33)" fg:x="10887" fg:w="7"/><text x="97.2389%" y="1007.50"></text></g><g><title>stress_test`naga_oil::compose::Composer::ensure_import (2 samples, 0.02%)</title><rect x="97.0958%" y="933" width="0.0178%" height="15" fill="rgb(226,146,40)" fg:x="10899" fg:w="2"/><text x="97.3458%" y="943.50"></text></g><g><title>stress_test`naga_oil::compose::preprocess::Preprocessor::preprocess (2 samples, 0.02%)</title><rect x="97.1314%" y="933" width="0.0178%" height="15" fill="rgb(219,47,25)" fg:x="10903" fg:w="2"/><text x="97.3814%" y="943.50"></text></g><g><title>stress_test`naga_oil::compose::Composer::make_naga_module (9 samples, 0.08%)</title><rect x="97.0780%" y="949" width="0.0802%" height="15" fill="rgb(250,135,13)" fg:x="10897" fg:w="9"/><text x="97.3280%" y="959.50"></text></g><g><title>stress_test`bevy_render::render_resource::pipeline_cache::ShaderCache::get (11 samples, 0.10%)</title><rect x="97.0690%" y="965" width="0.0980%" height="15" fill="rgb(219,229,18)" fg:x="10896" fg:w="11"/><text x="97.3190%" y="975.50"></text></g><g><title>stress_test`bevy_render::render_resource::pipeline_cache::PipelineCache::process_queue (15 samples, 0.13%)</title><rect x="97.0690%" y="997" width="0.1336%" height="15" fill="rgb(217,152,27)" fg:x="10896" fg:w="15"/><text x="97.3190%" y="1007.50"></text></g><g><title>stress_test`futures_lite::future::block_on (15 samples, 0.13%)</title><rect x="97.0690%" y="981" width="0.1336%" height="15" fill="rgb(225,71,47)" fg:x="10896" fg:w="15"/><text x="97.3190%" y="991.50"></text></g><g><title>stress_test`wgpu::Device::create_render_pipeline (4 samples, 0.04%)</title><rect x="97.1670%" y="965" width="0.0356%" height="15" fill="rgb(220,139,14)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="975.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::device_create_render_pipeline (4 samples, 0.04%)</title><rect x="97.1670%" y="949" width="0.0356%" height="15" fill="rgb(247,54,32)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="959.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::device_create_render_pipeline (4 samples, 0.04%)</title><rect x="97.1670%" y="933" width="0.0356%" height="15" fill="rgb(252,131,39)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="943.50"></text></g><g><title>stress_test`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::device_create_render_pipeline (4 samples, 0.04%)</title><rect x="97.1670%" y="917" width="0.0356%" height="15" fill="rgb(210,108,39)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="927.50"></text></g><g><title>stress_test`wgpu_core::device::resource::Device&lt;A&gt;::create_render_pipeline (4 samples, 0.04%)</title><rect x="97.1670%" y="901" width="0.0356%" height="15" fill="rgb(205,23,29)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="911.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_render_pipeline (4 samples, 0.04%)</title><rect x="97.1670%" y="885" width="0.0356%" height="15" fill="rgb(246,139,46)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="895.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (4 samples, 0.04%)</title><rect x="97.1670%" y="869" width="0.0356%" height="15" fill="rgb(250,81,26)" fg:x="10907" fg:w="4"/><text x="97.4170%" y="879.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::metal::Device&gt;::load_shader (2 samples, 0.02%)</title><rect x="97.1849%" y="853" width="0.0178%" height="15" fill="rgb(214,104,7)" fg:x="10909" fg:w="2"/><text x="97.4349%" y="863.50"></text></g><g><title>stress_test`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (4 samples, 0.04%)</title><rect x="97.2205%" y="997" width="0.0356%" height="15" fill="rgb(233,189,8)" fg:x="10913" fg:w="4"/><text x="97.4705%" y="1007.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (3 samples, 0.03%)</title><rect x="97.2561%" y="869" width="0.0267%" height="15" fill="rgb(228,141,17)" fg:x="10917" fg:w="3"/><text x="97.5061%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (3 samples, 0.03%)</title><rect x="97.2561%" y="853" width="0.0267%" height="15" fill="rgb(247,157,1)" fg:x="10917" fg:w="3"/><text x="97.5061%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (3 samples, 0.03%)</title><rect x="97.2561%" y="837" width="0.0267%" height="15" fill="rgb(249,225,5)" fg:x="10917" fg:w="3"/><text x="97.5061%" y="847.50"></text></g><g><title>Metal`0x7ff81c45b741 (3 samples, 0.03%)</title><rect x="97.2561%" y="821" width="0.0267%" height="15" fill="rgb(242,55,13)" fg:x="10917" fg:w="3"/><text x="97.5061%" y="831.50"></text></g><g><title>Metal`0x7ff81c3acc27 (3 samples, 0.03%)</title><rect x="97.2561%" y="805" width="0.0267%" height="15" fill="rgb(230,49,50)" fg:x="10917" fg:w="3"/><text x="97.5061%" y="815.50"></text></g><g><title>Metal`0x7ff81c3ace52 (3 samples, 0.03%)</title><rect x="97.2561%" y="789" width="0.0267%" height="15" fill="rgb(241,111,38)" fg:x="10917" fg:w="3"/><text x="97.5061%" y="799.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (2 samples, 0.02%)</title><rect x="97.2650%" y="773" width="0.0178%" height="15" fill="rgb(252,155,4)" fg:x="10918" fg:w="2"/><text x="97.5150%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a42b (2 samples, 0.02%)</title><rect x="97.2650%" y="757" width="0.0178%" height="15" fill="rgb(212,69,32)" fg:x="10918" fg:w="2"/><text x="97.5150%" y="767.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (2 samples, 0.02%)</title><rect x="97.2650%" y="741" width="0.0178%" height="15" fill="rgb(243,107,47)" fg:x="10918" fg:w="2"/><text x="97.5150%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="97.2650%" y="725" width="0.0178%" height="15" fill="rgb(247,130,12)" fg:x="10918" fg:w="2"/><text x="97.5150%" y="735.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (4 samples, 0.04%)</title><rect x="97.2561%" y="885" width="0.0356%" height="15" fill="rgb(233,74,16)" fg:x="10917" fg:w="4"/><text x="97.5061%" y="895.50"></text></g><g><title>stress_test`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (656 samples, 5.84%)</title><rect x="91.4566%" y="1013" width="5.8441%" height="15" fill="rgb(208,58,18)" fg:x="10266" fg:w="656"/><text x="91.7066%" y="1023.50">stress_..</text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (5 samples, 0.04%)</title><rect x="97.2561%" y="997" width="0.0445%" height="15" fill="rgb(242,225,1)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (5 samples, 0.04%)</title><rect x="97.2561%" y="981" width="0.0445%" height="15" fill="rgb(249,39,40)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (5 samples, 0.04%)</title><rect x="97.2561%" y="965" width="0.0445%" height="15" fill="rgb(207,72,44)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (5 samples, 0.04%)</title><rect x="97.2561%" y="949" width="0.0445%" height="15" fill="rgb(215,193,12)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (5 samples, 0.04%)</title><rect x="97.2561%" y="933" width="0.0445%" height="15" fill="rgb(248,41,39)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="943.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (5 samples, 0.04%)</title><rect x="97.2561%" y="917" width="0.0445%" height="15" fill="rgb(253,85,4)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="927.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (5 samples, 0.04%)</title><rect x="97.2561%" y="901" width="0.0445%" height="15" fill="rgb(243,70,31)" fg:x="10917" fg:w="5"/><text x="97.5061%" y="911.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;bevy_render::render_resource::uniform_buffer::DynamicUniformBufferWriter&lt;bevy_mod_billboard::pipeline::BillboardUniform&gt;&gt; (2 samples, 0.02%)</title><rect x="97.3096%" y="1013" width="0.0178%" height="15" fill="rgb(253,195,26)" fg:x="10923" fg:w="2"/><text x="97.5596%" y="1023.50"></text></g><g><title>stress_test`&lt;wgpu::QueueWriteBufferView as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="97.3096%" y="997" width="0.0178%" height="15" fill="rgb(243,42,11)" fg:x="10923" fg:w="2"/><text x="97.5596%" y="1007.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_staging_buffer (2 samples, 0.02%)</title><rect x="97.3096%" y="981" width="0.0178%" height="15" fill="rgb(239,66,17)" fg:x="10923" fg:w="2"/><text x="97.5596%" y="991.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_staging_buffer (2 samples, 0.02%)</title><rect x="97.3096%" y="965" width="0.0178%" height="15" fill="rgb(217,132,21)" fg:x="10923" fg:w="2"/><text x="97.5596%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer (2 samples, 0.02%)</title><rect x="97.3096%" y="949" width="0.0178%" height="15" fill="rgb(252,202,21)" fg:x="10923" fg:w="2"/><text x="97.5596%" y="959.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (2 samples, 0.02%)</title><rect x="97.3096%" y="933" width="0.0178%" height="15" fill="rgb(233,98,36)" fg:x="10923" fg:w="2"/><text x="97.5596%" y="943.50"></text></g><g><title>stress_test`std::env::args (2 samples, 0.02%)</title><rect x="97.3274%" y="1013" width="0.0178%" height="15" fill="rgb(216,153,54)" fg:x="10925" fg:w="2"/><text x="97.5774%" y="1023.50"></text></g><g><title>stress_test`std::env::args_os (2 samples, 0.02%)</title><rect x="97.3274%" y="997" width="0.0178%" height="15" fill="rgb(250,99,7)" fg:x="10925" fg:w="2"/><text x="97.5774%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.05%)</title><rect x="97.3541%" y="949" width="0.0535%" height="15" fill="rgb(207,56,50)" fg:x="10928" fg:w="6"/><text x="97.6041%" y="959.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (16 samples, 0.14%)</title><rect x="97.4165%" y="901" width="0.1425%" height="15" fill="rgb(244,61,34)" fg:x="10935" fg:w="16"/><text x="97.6665%" y="911.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (16 samples, 0.14%)</title><rect x="97.4165%" y="885" width="0.1425%" height="15" fill="rgb(241,50,38)" fg:x="10935" fg:w="16"/><text x="97.6665%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (16 samples, 0.14%)</title><rect x="97.4165%" y="869" width="0.1425%" height="15" fill="rgb(212,166,30)" fg:x="10935" fg:w="16"/><text x="97.6665%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (16 samples, 0.14%)</title><rect x="97.4165%" y="853" width="0.1425%" height="15" fill="rgb(249,127,32)" fg:x="10935" fg:w="16"/><text x="97.6665%" y="863.50"></text></g><g><title>Metal`0x7ff81c45b741 (16 samples, 0.14%)</title><rect x="97.4165%" y="837" width="0.1425%" height="15" fill="rgb(209,103,0)" fg:x="10935" fg:w="16"/><text x="97.6665%" y="847.50"></text></g><g><title>Metal`0x7ff81c3acc27 (16 samples, 0.14%)</title><rect x="97.4165%" y="821" width="0.1425%" height="15" fill="rgb(238,209,51)" fg:x="10935" fg:w="16"/><text x="97.6665%" y="831.50"></text></g><g><title>Metal`0x7ff81c3ace52 (15 samples, 0.13%)</title><rect x="97.4254%" y="805" width="0.1336%" height="15" fill="rgb(237,56,23)" fg:x="10936" fg:w="15"/><text x="97.6754%" y="815.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (14 samples, 0.12%)</title><rect x="97.4343%" y="789" width="0.1247%" height="15" fill="rgb(215,153,46)" fg:x="10937" fg:w="14"/><text x="97.6843%" y="799.50"></text></g><g><title>IOKit`0x7ff815d1a42b (14 samples, 0.12%)</title><rect x="97.4343%" y="773" width="0.1247%" height="15" fill="rgb(224,49,31)" fg:x="10937" fg:w="14"/><text x="97.6843%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (14 samples, 0.12%)</title><rect x="97.4343%" y="757" width="0.1247%" height="15" fill="rgb(250,18,42)" fg:x="10937" fg:w="14"/><text x="97.6843%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (14 samples, 0.12%)</title><rect x="97.4343%" y="741" width="0.1247%" height="15" fill="rgb(215,176,39)" fg:x="10937" fg:w="14"/><text x="97.6843%" y="751.50"></text></g><g><title>stress_test`wgpu::Queue::write_buffer (24 samples, 0.21%)</title><rect x="97.3541%" y="1013" width="0.2138%" height="15" fill="rgb(223,77,29)" fg:x="10928" fg:w="24"/><text x="97.6041%" y="1023.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (24 samples, 0.21%)</title><rect x="97.3541%" y="997" width="0.2138%" height="15" fill="rgb(234,94,52)" fg:x="10928" fg:w="24"/><text x="97.6041%" y="1007.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_buffer (24 samples, 0.21%)</title><rect x="97.3541%" y="981" width="0.2138%" height="15" fill="rgb(220,154,50)" fg:x="10928" fg:w="24"/><text x="97.6041%" y="991.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_write_buffer (24 samples, 0.21%)</title><rect x="97.3541%" y="965" width="0.2138%" height="15" fill="rgb(212,11,10)" fg:x="10928" fg:w="24"/><text x="97.6041%" y="975.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (17 samples, 0.15%)</title><rect x="97.4165%" y="949" width="0.1514%" height="15" fill="rgb(205,166,19)" fg:x="10935" fg:w="17"/><text x="97.6665%" y="959.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (17 samples, 0.15%)</title><rect x="97.4165%" y="933" width="0.1514%" height="15" fill="rgb(244,198,16)" fg:x="10935" fg:w="17"/><text x="97.6665%" y="943.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (17 samples, 0.15%)</title><rect x="97.4165%" y="917" width="0.1514%" height="15" fill="rgb(219,69,12)" fg:x="10935" fg:w="17"/><text x="97.6665%" y="927.50"></text></g><g><title>stress_test`wgpu_core::device::queue::prepare_staging_buffer (142 samples, 1.27%)</title><rect x="97.5679%" y="949" width="1.2650%" height="15" fill="rgb(245,30,7)" fg:x="10952" fg:w="142"/><text x="97.8179%" y="959.50"></text></g><g><title>stress_test`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (142 samples, 1.27%)</title><rect x="97.5679%" y="933" width="1.2650%" height="15" fill="rgb(218,221,48)" fg:x="10952" fg:w="142"/><text x="97.8179%" y="943.50"></text></g><g><title>stress_test`objc::rc::autorelease::autoreleasepool (141 samples, 1.26%)</title><rect x="97.5768%" y="917" width="1.2561%" height="15" fill="rgb(216,66,15)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="927.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newBufferWithLength:options:] (141 samples, 1.26%)</title><rect x="97.5768%" y="901" width="1.2561%" height="15" fill="rgb(226,122,50)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="911.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (141 samples, 1.26%)</title><rect x="97.5768%" y="885" width="1.2561%" height="15" fill="rgb(239,156,16)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="895.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initInternalWithDevice:pointer:length:options:deallocator:pinnedGPUAddress:] (141 samples, 1.26%)</title><rect x="97.5768%" y="869" width="1.2561%" height="15" fill="rgb(224,27,38)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (141 samples, 1.26%)</title><rect x="97.5768%" y="853" width="1.2561%" height="15" fill="rgb(224,39,27)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="863.50"></text></g><g><title>Metal`0x7ff81c45b741 (141 samples, 1.26%)</title><rect x="97.5768%" y="837" width="1.2561%" height="15" fill="rgb(215,92,29)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="847.50"></text></g><g><title>Metal`0x7ff81c3acc27 (141 samples, 1.26%)</title><rect x="97.5768%" y="821" width="1.2561%" height="15" fill="rgb(207,159,16)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="831.50"></text></g><g><title>Metal`0x7ff81c3ace52 (141 samples, 1.26%)</title><rect x="97.5768%" y="805" width="1.2561%" height="15" fill="rgb(238,163,47)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="815.50"></text></g><g><title>IOAccelerator`0x7ff81c39b28f (141 samples, 1.26%)</title><rect x="97.5768%" y="789" width="1.2561%" height="15" fill="rgb(219,91,49)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="799.50"></text></g><g><title>IOKit`0x7ff815d1a42b (141 samples, 1.26%)</title><rect x="97.5768%" y="773" width="1.2561%" height="15" fill="rgb(227,167,31)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="783.50"></text></g><g><title>IOKit`0x7ff815d1a5ea (141 samples, 1.26%)</title><rect x="97.5768%" y="757" width="1.2561%" height="15" fill="rgb(234,80,54)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (141 samples, 1.26%)</title><rect x="97.5768%" y="741" width="1.2561%" height="15" fill="rgb(212,114,2)" fg:x="10953" fg:w="141"/><text x="97.8268%" y="751.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,726 samples, 15.38%)</title><rect x="83.4655%" y="1029" width="15.3764%" height="15" fill="rgb(234,50,24)" fg:x="9369" fg:w="1726"/><text x="83.7155%" y="1039.50">stress_test`&lt;bevy_ecs::s..</text></g><g><title>stress_test`wgpu::Queue::write_buffer_with (143 samples, 1.27%)</title><rect x="97.5679%" y="1013" width="1.2739%" height="15" fill="rgb(221,68,8)" fg:x="10952" fg:w="143"/><text x="97.8179%" y="1023.50"></text></g><g><title>stress_test`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (143 samples, 1.27%)</title><rect x="97.5679%" y="997" width="1.2739%" height="15" fill="rgb(254,180,31)" fg:x="10952" fg:w="143"/><text x="97.8179%" y="1007.50"></text></g><g><title>stress_test`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (143 samples, 1.27%)</title><rect x="97.5679%" y="981" width="1.2739%" height="15" fill="rgb(247,130,50)" fg:x="10952" fg:w="143"/><text x="97.8179%" y="991.50"></text></g><g><title>stress_test`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&lt;G&gt;&gt;::queue_create_staging_buffer (143 samples, 1.27%)</title><rect x="97.5679%" y="965" width="1.2739%" height="15" fill="rgb(211,109,4)" fg:x="10952" fg:w="143"/><text x="97.8179%" y="975.50"></text></g><g><title>stress_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (5 samples, 0.04%)</title><rect x="98.8775%" y="1013" width="0.0445%" height="15" fill="rgb(238,50,21)" fg:x="11099" fg:w="5"/><text x="99.1275%" y="1023.50"></text></g><g><title>stress_test`concurrent_queue::bounded::Bounded&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="98.8864%" y="997" width="0.0356%" height="15" fill="rgb(225,57,45)" fg:x="11100" fg:w="4"/><text x="99.1364%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.03%)</title><rect x="98.9310%" y="997" width="0.0267%" height="15" fill="rgb(209,196,50)" fg:x="11105" fg:w="3"/><text x="99.1810%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.03%)</title><rect x="98.9310%" y="981" width="0.0267%" height="15" fill="rgb(242,140,13)" fg:x="11105" fg:w="3"/><text x="99.1810%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="98.9577%" y="997" width="0.0178%" height="15" fill="rgb(217,111,7)" fg:x="11108" fg:w="2"/><text x="99.2077%" y="1007.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (5 samples, 0.04%)</title><rect x="98.9844%" y="981" width="0.0445%" height="15" fill="rgb(253,193,51)" fg:x="11111" fg:w="5"/><text x="99.2344%" y="991.50"></text></g><g><title>stress_test`parking::Inner::unpark (4 samples, 0.04%)</title><rect x="98.9933%" y="965" width="0.0356%" height="15" fill="rgb(252,70,29)" fg:x="11112" fg:w="4"/><text x="99.2433%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.04%)</title><rect x="98.9933%" y="949" width="0.0356%" height="15" fill="rgb(232,127,12)" fg:x="11112" fg:w="4"/><text x="99.2433%" y="959.50"></text></g><g><title>stress_test`async_channel::Sender&lt;T&gt;::try_send (28 samples, 0.25%)</title><rect x="98.8419%" y="1029" width="0.2494%" height="15" fill="rgb(211,180,21)" fg:x="11095" fg:w="28"/><text x="99.0919%" y="1039.50"></text></g><g><title>stress_test`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (19 samples, 0.17%)</title><rect x="98.9220%" y="1013" width="0.1693%" height="15" fill="rgb(229,72,13)" fg:x="11104" fg:w="19"/><text x="99.1720%" y="1023.50"></text></g><g><title>stress_test`event_listener::sys::Inner&lt;T&gt;::notify (13 samples, 0.12%)</title><rect x="98.9755%" y="997" width="0.1158%" height="15" fill="rgb(240,211,49)" fg:x="11110" fg:w="13"/><text x="99.2255%" y="1007.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (7 samples, 0.06%)</title><rect x="99.0290%" y="981" width="0.0624%" height="15" fill="rgb(219,149,40)" fg:x="11116" fg:w="7"/><text x="99.2790%" y="991.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (6 samples, 0.05%)</title><rect x="99.0379%" y="965" width="0.0535%" height="15" fill="rgb(210,127,46)" fg:x="11117" fg:w="6"/><text x="99.2879%" y="975.50"></text></g><g><title>stress_test`parking::Inner::unpark (6 samples, 0.05%)</title><rect x="99.0379%" y="949" width="0.0535%" height="15" fill="rgb(220,106,7)" fg:x="11117" fg:w="6"/><text x="99.2879%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.05%)</title><rect x="99.0379%" y="933" width="0.0535%" height="15" fill="rgb(249,31,22)" fg:x="11117" fg:w="6"/><text x="99.2879%" y="943.50"></text></g><g><title>stress_test`bevy_render::view::visibility::check_visibility::_{{closure}} (2 samples, 0.02%)</title><rect x="99.0913%" y="1029" width="0.0178%" height="15" fill="rgb(253,1,49)" fg:x="11123" fg:w="2"/><text x="99.3413%" y="1039.50"></text></g><g><title>stress_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.02%)</title><rect x="99.1091%" y="1029" width="0.0178%" height="15" fill="rgb(227,144,33)" fg:x="11125" fg:w="2"/><text x="99.3591%" y="1039.50"></text></g><g><title>stress_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (1,765 samples, 15.72%)</title><rect x="83.4120%" y="1045" width="15.7238%" height="15" fill="rgb(249,163,44)" fg:x="9363" fg:w="1765"/><text x="83.6620%" y="1055.50">stress_test`&lt;core::panic..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="99.1359%" y="1029" width="0.0356%" height="15" fill="rgb(234,15,39)" fg:x="11128" fg:w="4"/><text x="99.3859%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="99.1448%" y="1013" width="0.0267%" height="15" fill="rgb(207,66,16)" fg:x="11129" fg:w="3"/><text x="99.3948%" y="1023.50"></text></g><g><title>stress_test`&lt;async_channel::RecvInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (5 samples, 0.04%)</title><rect x="99.1893%" y="1029" width="0.0445%" height="15" fill="rgb(233,112,24)" fg:x="11134" fg:w="5"/><text x="99.4393%" y="1039.50"></text></g><g><title>stress_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="99.2071%" y="1013" width="0.0267%" height="15" fill="rgb(230,90,22)" fg:x="11136" fg:w="3"/><text x="99.4571%" y="1023.50"></text></g><g><title>stress_test`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="99.2071%" y="997" width="0.0267%" height="15" fill="rgb(229,61,13)" fg:x="11136" fg:w="3"/><text x="99.4571%" y="1007.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (3 samples, 0.03%)</title><rect x="99.2428%" y="1029" width="0.0267%" height="15" fill="rgb(225,57,24)" fg:x="11140" fg:w="3"/><text x="99.4928%" y="1039.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::finish_system_and_handle_dependents (3 samples, 0.03%)</title><rect x="99.2695%" y="1029" width="0.0267%" height="15" fill="rgb(208,169,48)" fg:x="11143" fg:w="3"/><text x="99.5195%" y="1039.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::rebuild_active_access (2 samples, 0.02%)</title><rect x="99.2962%" y="1029" width="0.0178%" height="15" fill="rgb(244,218,51)" fg:x="11146" fg:w="2"/><text x="99.5462%" y="1039.50"></text></g><g><title>stress_test`fixedbitset::FixedBitSet::union_with (2 samples, 0.02%)</title><rect x="99.2962%" y="1013" width="0.0178%" height="15" fill="rgb(214,148,10)" fg:x="11146" fg:w="2"/><text x="99.5462%" y="1023.50"></text></g><g><title>stress_test`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (2 samples, 0.02%)</title><rect x="99.3497%" y="1013" width="0.0178%" height="15" fill="rgb(225,174,27)" fg:x="11152" fg:w="2"/><text x="99.5997%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="99.3675%" y="997" width="0.0267%" height="15" fill="rgb(230,96,26)" fg:x="11154" fg:w="3"/><text x="99.6175%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.04%)</title><rect x="99.4655%" y="949" width="0.0445%" height="15" fill="rgb(232,10,30)" fg:x="11165" fg:w="5"/><text x="99.7155%" y="959.50"></text></g><g><title>stress_test`async_executor::Executor::spawn (17 samples, 0.15%)</title><rect x="99.3675%" y="1013" width="0.1514%" height="15" fill="rgb(222,8,50)" fg:x="11154" fg:w="17"/><text x="99.6175%" y="1023.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (8 samples, 0.07%)</title><rect x="99.4477%" y="997" width="0.0713%" height="15" fill="rgb(213,81,27)" fg:x="11163" fg:w="8"/><text x="99.6977%" y="1007.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (7 samples, 0.06%)</title><rect x="99.4566%" y="981" width="0.0624%" height="15" fill="rgb(245,50,10)" fg:x="11164" fg:w="7"/><text x="99.7066%" y="991.50"></text></g><g><title>stress_test`parking::Inner::unpark (7 samples, 0.06%)</title><rect x="99.4566%" y="965" width="0.0624%" height="15" fill="rgb(216,100,18)" fg:x="11164" fg:w="7"/><text x="99.7066%" y="975.50"></text></g><g><title>stress_test`bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (4 samples, 0.04%)</title><rect x="99.5278%" y="1013" width="0.0356%" height="15" fill="rgb(236,147,54)" fg:x="11172" fg:w="4"/><text x="99.7778%" y="1023.50"></text></g><g><title>stress_test`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (6 samples, 0.05%)</title><rect x="99.5635%" y="1013" width="0.0535%" height="15" fill="rgb(205,143,26)" fg:x="11176" fg:w="6"/><text x="99.8135%" y="1023.50"></text></g><g><title>stress_test`async_executor::Executor::spawn (6 samples, 0.05%)</title><rect x="99.5635%" y="997" width="0.0535%" height="15" fill="rgb(236,26,9)" fg:x="11176" fg:w="6"/><text x="99.8135%" y="1007.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (5 samples, 0.04%)</title><rect x="99.5724%" y="981" width="0.0445%" height="15" fill="rgb(221,165,53)" fg:x="11177" fg:w="5"/><text x="99.8224%" y="991.50"></text></g><g><title>stress_test`alloc::task::raw_waker::wake (4 samples, 0.04%)</title><rect x="99.5813%" y="965" width="0.0356%" height="15" fill="rgb(214,110,17)" fg:x="11178" fg:w="4"/><text x="99.8313%" y="975.50"></text></g><g><title>stress_test`parking::Inner::unpark (4 samples, 0.04%)</title><rect x="99.5813%" y="949" width="0.0356%" height="15" fill="rgb(237,197,12)" fg:x="11178" fg:w="4"/><text x="99.8313%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.04%)</title><rect x="99.5813%" y="933" width="0.0356%" height="15" fill="rgb(205,84,17)" fg:x="11178" fg:w="4"/><text x="99.8313%" y="943.50"></text></g><g><title>stress_test`bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (36 samples, 0.32%)</title><rect x="99.3140%" y="1029" width="0.3207%" height="15" fill="rgb(237,18,45)" fg:x="11148" fg:w="36"/><text x="99.5640%" y="1039.50"></text></g><g><title>stress_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="99.6169%" y="1013" width="0.0178%" height="15" fill="rgb(221,87,14)" fg:x="11182" fg:w="2"/><text x="99.8669%" y="1023.50"></text></g><g><title>stress_test`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (58 samples, 0.52%)</title><rect x="99.1359%" y="1045" width="0.5167%" height="15" fill="rgb(238,186,15)" fg:x="11128" fg:w="58"/><text x="99.3859%" y="1055.50"></text></g><g><title>stress_test`core::ptr::drop_in_place&lt;async_channel::Recv&lt;bevy_ecs::schedule::executor::multi_threaded::SystemResult&gt;&gt; (2 samples, 0.02%)</title><rect x="99.6347%" y="1029" width="0.0178%" height="15" fill="rgb(208,115,11)" fg:x="11184" fg:w="2"/><text x="99.8847%" y="1039.50"></text></g><g><title>stress_test`event_listener::_::_&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (2 samples, 0.02%)</title><rect x="99.6347%" y="1013" width="0.0178%" height="15" fill="rgb(254,175,0)" fg:x="11184" fg:w="2"/><text x="99.8847%" y="1023.50"></text></g><g><title>stress_test`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1,849 samples, 16.47%)</title><rect x="83.1893%" y="1077" width="16.4722%" height="15" fill="rgb(227,24,42)" fg:x="9338" fg:w="1849"/><text x="83.4393%" y="1087.50">stress_test`async_task::r..</text></g><g><title>stress_test`std::panicking::try (1,840 samples, 16.39%)</title><rect x="83.2695%" y="1061" width="16.3920%" height="15" fill="rgb(223,211,37)" fg:x="9347" fg:w="1840"/><text x="83.5195%" y="1071.50">stress_test`std::panickin..</text></g><g><title>stress_test`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6 samples, 0.05%)</title><rect x="99.6615%" y="1077" width="0.0535%" height="15" fill="rgb(235,49,27)" fg:x="11187" fg:w="6"/><text x="99.9115%" y="1087.50"></text></g><g><title>stress_test`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="99.6882%" y="1061" width="0.0267%" height="15" fill="rgb(254,97,51)" fg:x="11190" fg:w="3"/><text x="99.9382%" y="1071.50"></text></g><g><title>stress_test`futures_lite::future::block_on (1,914 samples, 17.05%)</title><rect x="82.9399%" y="1093" width="17.0512%" height="15" fill="rgb(249,51,40)" fg:x="9310" fg:w="1914"/><text x="83.1899%" y="1103.50">stress_test`futures_lite::..</text></g><g><title>stress_test`parking::Inner::park (31 samples, 0.28%)</title><rect x="99.7149%" y="1077" width="0.2762%" height="15" fill="rgb(210,128,45)" fg:x="11193" fg:w="31"/><text x="99.9649%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (31 samples, 0.28%)</title><rect x="99.7149%" y="1061" width="0.2762%" height="15" fill="rgb(224,137,50)" fg:x="11193" fg:w="31"/><text x="99.9649%" y="1071.50"></text></g><g><title>all (11,225 samples, 100%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(242,15,9)" fg:x="0" fg:w="11225"/><text x="0.2500%" y="1199.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (8,492 samples, 75.65%)</title><rect x="24.3474%" y="1173" width="75.6526%" height="15" fill="rgb(233,187,41)" fg:x="2733" fg:w="8492"/><text x="24.5974%" y="1183.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (8,491 samples, 75.64%)</title><rect x="24.3563%" y="1157" width="75.6437%" height="15" fill="rgb(227,2,29)" fg:x="2734" fg:w="8491"/><text x="24.6063%" y="1167.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>stress_test`std::sys::unix::thread::Thread::new::thread_start (8,414 samples, 74.96%)</title><rect x="25.0423%" y="1141" width="74.9577%" height="15" fill="rgb(222,70,3)" fg:x="2811" fg:w="8414"/><text x="25.2923%" y="1151.50">stress_test`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>stress_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (8,414 samples, 74.96%)</title><rect x="25.0423%" y="1125" width="74.9577%" height="15" fill="rgb(213,11,42)" fg:x="2811" fg:w="8414"/><text x="25.2923%" y="1135.50">stress_test`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>stress_test`std::sys_common::backtrace::__rust_begin_short_backtrace (8,414 samples, 74.96%)</title><rect x="25.0423%" y="1109" width="74.9577%" height="15" fill="rgb(225,150,9)" fg:x="2811" fg:w="8414"/><text x="25.2923%" y="1119.50">stress_test`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g></svg></svg>